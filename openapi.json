{
  "swagger": "2.0",
  "info": {
    "title": "Fusion Phoenix Product Integration Customers",
    "description": "Search for customer and, once located, view the name, address and identification information for that customer and other important details, including a 360-degree view of all the accounts associated to the customer, whether they are the primary account owner or have a secondary relationship on an account.  Provides the ability to perform customer maintenance, such as address changes, and changes to identification information.",
    "version": "1.0.12",
    "x-finastra-category": "Digital & Retail Banking",
    "x-finastra-subcategory": "Customer Management",
    "x-finastra-short-description": "Create new customers, search for a customer and see the details of that customer, including the address book, the identification information, and the list of accounts associated to the customer.",
    "x-finastra-tags": [
      "Fusion Phoenix",
      "SDK",
      "North America",
      "Customer"
    ],
    "x-finastra-channel-type": "B2B",
    "x-finastra-maturity-level": "BETA",
    "x-finastra-audience": "PUBLIC",
    "x-finastra-icon": "Icons_2c.svg",
    "x-finastra-implementability": "INTERNAL",
    "x-finastra-data-classification": [
      "Restricted"
    ],
    "x-finastra-commitId": "6190791d53050e9a19274b0a29a8ff8fc7f4a59d",
    "contact": {
      "name": "API Support",
      "url": "https://community.fusionfabric.cloud/index.html"
    }
  },
  "schemes": [
    "https"
  ],
  "tags": [
    {
      "name": "Address"
    },
    {
      "name": "Trust"
    },
    {
      "name": "Customer/Member"
    },
    {
      "name": "Account Classes"
    },
    {
      "name": "Titles"
    },
    {
      "name": "Identification"
    }
  ],
  "paths": {
    "/customers/{encId}/addresses/xm": {
      "get": {
        "summary": "Retrieve Customer/Member Address Book",
        "description": "This call returns all addresses for the selected customer/member.<BR><br /> <BR>**Availability:** Always available. This transaction is processed real-time.<BR>**PhoenixXM Equivalent:** Inquiry 13450 - OutputType 2<BR><BR>**Search Tags:** Customers<BR><BR>**Workflow Supported:** Yes",
        "operationId": "CustomersByEncIdAddressesXMGet",
        "tags": [
          "Address"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/encId"
          },
          {
            "$ref": "#/parameters/ignoreStartEndDates"
          },
          {
            "$ref": "#/parameters/X-PHX-ReferenceNo"
          },
          {
            "$ref": "#/parameters/X-PHX-IdempotencyKey"
          },
          {
            "$ref": "#/parameters/X-PHX-Description"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListOfRecords-CustomerAddressResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthenticationErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ServerErrorResponse"
            }
          }
        },
        "x-finastra-data-classification": [
          "Restricted"
        ]
      }
    },
    "/customers/addresses/{encId}/status": {
      "patch": {
        "summary": "Update Status for a Customer/Member Address",
        "description": "This call updates the status of the address for the selected customer/member.<BR><BR>**Search Tags:** BO, UI, Employee, Consumer",
        "operationId": "CustomersAddressByEncIdStatusPatch",
        "tags": [
          "Address"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/X-PHX-ReferenceNo"
          },
          {
            "in": "path",
            "name": "encId",
            "description": "Encrypted Identifier used to identify the resource uniquely.{\"addrId\":\"int32\",\"rimNo\":\"int32\"}",
            "required": true,
            "maxLength": 10000,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRmAddressRequest"
            },
            "x-finastra-data-classification": [
              "Restricted"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateRmAddressResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResponse"
            }
          },
          "401": {
            "description": "Unauthorized ",
            "schema": {
              "$ref": "#/definitions/AuthenticationErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/BadRequestResponse"
            }
          },
          "500": {
            "description": "ServerError ",
            "schema": {
              "$ref": "#/definitions/ServerErrorResponse"
            }
          }
        }
      }
    },
    "/customers/{encId}/addresses": {
      "post": {
        "summary": "Create New Customer/Member Address",
        "description": "This call creates a new address for the selected customer/member. <BR> <br /><BR>**Availability:** Available only during Day Mode. This transaction is processed real-time.<BR>**PhoenixXM Equivalent:** Create New Customer/Member Address<BR><BR>**Search Tags:** Customers",
        "operationId": "CustomersByEncIdAddressesPost",
        "tags": [
          "Address"
        ],
        "consumes": [
          "application/json-patch+json",
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/encId"
          },
          {
            "$ref": "#/parameters/X-PHX-ReferenceNo"
          },
          {
            "$ref": "#/parameters/X-PHX-IdempotencyKey"
          },
          {
            "$ref": "#/parameters/X-PHX-Description"
          },
          {
            "$ref": "#/parameters/body"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PostCustomerAddressTpiResponsePTpiResponseSingleRecord"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthenticationErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ServerErrorResponse"
            }
          }
        },
        "x-finastra-data-classification": [
          "Restricted"
        ]
      }
    },
    "/customers/addresses/{encId}/xm": {
      "patch": {
        "summary": "Update Customer/Member Address",
        "description": "This call modifies the address information for a selected customer/member. <BR><br /><BR>**Availability:** Always available. This transaction can be processed real-time or memo posted.<BR>**PhoenixXM Equivalent:** 10455 - Update Customer/Member Address<BR><BR>**Search Tags:** Customers",
        "operationId": "CustomersAddressesByEncIdXM",
        "tags": [
          "Address"
        ],
        "consumes": [
          "application/json-patch+json",
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "encId",
            "description": "Passes the encrypted unique id for the address. {\"rimNo\":0,\"addrId\":0}",
            "required": true,
            "type": "string",
            "maxLength": 10000
          },
          {
            "$ref": "#/parameters/X-PHX-ReferenceNo"
          },
          {
            "$ref": "#/parameters/X-PHX-IdempotencyKey"
          },
          {
            "$ref": "#/parameters/X-PHX-Description"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/UpdateCustomerAddresssRequest"
            },
            "x-finastra-data-classification": [
              "Restricted"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateCustomerAddressResponseSingleRecord"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthenticationErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFoundErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ServerErrorResponse"
            }
          }
        },
        "x-finastra-data-classification": [
          "Restricted"
        ]
      }
    },
    "/customers/{encId}/identification": {
      "post": {
        "summary": "Create New Customer/Member ID",
        "description": "This call adds a new identification that verifies the identity of a customer/member. (ResponseTypeId = 10)<BR><BR>**Search Tags:** BO, UI",
        "operationId": "CustomerIdentificationByEncIdPost",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Identification"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/encId"
          },
          {
            "$ref": "#/parameters/X-PHX-ReferenceNo"
          },
          {
            "$ref": "#/parameters/X-PHX-IdempotencyKey"
          },
          {
            "$ref": "#/parameters/X-PHX-Description"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRmIdentRequest10"
            },
            "x-finastra-data-classification": [
              "Restricted"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateRmIdentResponse10"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResponse"
            }
          },
          "401": {
            "description": "Unauthorized ",
            "schema": {
              "$ref": "#/definitions/AuthenticationErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/BadRequestResponse"
            }
          },
          "500": {
            "description": "ServerError ",
            "schema": {
              "$ref": "#/definitions/ServerErrorResponse"
            }
          }
        },
        "x-finastra-data-classification": [
          "Restricted"
        ]
      }
    },
    "/customers/{encId}/image": {
      "post": {
        "summary": "Create New Customer/Member ID Image",
        "description": "This call creates a new image for identification of a customer/member.<BR><BR>**Search Tags:** BO, UI, Employee, Consumer<BR><BR>**Workflow Supported:** Yes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "CustomerImageIdentificationByEncIdPost",
        "tags": [
          "Identification"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/X-PHX-ReferenceNo"
          },
          {
            "$ref": "#/parameters/encId"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRmImageRequest"
            },
            "x-finastra-data-classification": [
              "Restricted"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateRmImageResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResponse"
            }
          },
          "401": {
            "description": "Unauthorized ",
            "schema": {
              "$ref": "#/definitions/AuthenticationErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/BadRequestResponse"
            }
          },
          "500": {
            "description": "ServerError ",
            "schema": {
              "$ref": "#/definitions/ServerErrorResponse"
            }
          }
        },
        "x-finastra-data-classification": [
          "Restricted"
        ]
      }
    },
    "/customers/{encId}/trust": {
      "post": {
        "summary": "Create New Customer/Member Trust",
        "description": "This call creates the trust information for the selected customer/member.<BR><BR>**Search Tags:** BO, Employee, Consumer",
        "operationId": "CustomersByEncIdTrustPost",
        "tags": [
          "Trust"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/X-PHX-ReferenceNo"
          },
          {
            "$ref": "#/parameters/encId"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRmTrustRequest"
            },
            "x-finastra-data-classification": [
              "Restricted"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateRmTrustResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResponse"
            }
          },
          "401": {
            "description": "Unauthorized ",
            "schema": {
              "$ref": "#/definitions/AuthenticationErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/BadRequestResponse"
            }
          },
          "500": {
            "description": "ServerError ",
            "schema": {
              "$ref": "#/definitions/ServerErrorResponse"
            }
          }
        },
        "x-finastra-data-classification": [
          "Restricted"
        ]
      }
    },
    "/customers/{encId}/identification/search": {
      "get": {
        "summary": "Retrieve List of Customer/Member IDs",
        "description": "This call returns a list of identification information used to verify the identity of an individual conducting the transaction. <BR><BR>**Search Tags:** BO, UI, Employee, Consumer",
        "operationId": "CustomersByEncIdIdentGet",
        "tags": [
          "Identification"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Limit"
          },
          {
            "$ref": "#/parameters/Offset"
          },
          {
            "$ref": "#/parameters/Orderby"
          },
          {
            "$ref": "#/parameters/X-PHX-Filters"
          },
          {
            "$ref": "#/parameters/X-PHX-ReferenceNo"
          },
          {
            "$ref": "#/parameters/encId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RmIdentListResponse20"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResponse"
            }
          },
          "401": {
            "description": "Unauthorized ",
            "schema": {
              "$ref": "#/definitions/AuthenticationErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/BadRequestResponse"
            }
          },
          "500": {
            "description": "ServerError ",
            "schema": {
              "$ref": "#/definitions/ServerErrorResponse"
            }
          }
        },
        "x-finastra-data-classification": [
          "Restricted"
        ]
      }
    },
    "/customers/{encId}/trust/trustrole": {
      "post": {
        "summary": "Create New Customer/Member Trust Role",
        "description": "This call adds a new trust role to a customer/member.<BR><BR>**Search Tags:** BO, Employee, Consumer, UI",
        "operationId": "CustomersByEncIdTrustRolePost",
        "tags": [
          "Trust"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/X-PHX-ReferenceNo"
          },
          {
            "$ref": "#/parameters/encId"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRmTrustCapacityRequest"
            },
            "x-finastra-data-classification": [
              "Restricted"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateRmTrustCapacityResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResponse"
            }
          },
          "401": {
            "description": "Unauthorized ",
            "schema": {
              "$ref": "#/definitions/AuthenticationErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/BadRequestResponse"
            }
          },
          "500": {
            "description": "ServerError ",
            "schema": {
              "$ref": "#/definitions/ServerErrorResponse"
            }
          }
        },
        "x-finastra-data-classification": [
          "Restricted"
        ]
      }
    },
    "/customers": {
      "post": {
        "summary": "Customer/Member Origination",
        "description": "This call creates a new customer/member. When successful, the system generates a unique RIM number for the customer/member. This number is returned in the response in both nonencrypted form (RimNo) and encrypted form (encId).<BR><BR>**Availability:** Available only during Day Mode. This transaction is processed real-time.<BR>**PhoenixXM Equivalent:** DB_ACTION - Create New Customer/Member (RIM)<BR><BR>**Search Tags:** Customers",
        "operationId": "CustomersOrigination",
        "tags": [
          "Customer/Member"
        ],
        "consumes": [
          "application/json-patch+json",
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/X-PHX-ReferenceNo"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Passes values for the tags to create a new customer/member.",
            "schema": {
              "$ref": "#/definitions/Customer"
            },
            "x-finastra-data-classification": [
              "Restricted"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RmAcctTpiResponsePTpiResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AuthenticationErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ServerErrorResponse"
            }
          }
        },
        "x-finastra-data-classification": [
          "Restricted"
        ]
      }
    },
    "/admin/customers/addresstypes/search": {
      "get": {
        "summary": "Retrieve Customer/Member Address Types",
        "description": "This call returns a list of the address types configured on the Edit Customer/Member Address Types window in System Administration.<BR><BR>**Search Tags:** BO, Employee, Consumer, TableDump",
        "operationId": "AdminCustomersAddressTypesSearchGet",
        "tags": [
          "Address"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/Limit"
          },
          {
            "$ref": "#/parameters/Offset"
          },
          {
            "$ref": "#/parameters/Orderby"
          },
          {
            "$ref": "#/parameters/X-PHX-Filters"
          },
          {
            "$ref": "#/parameters/X-PHX-ReferenceNo"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AdRmAddrTypeListResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResponse"
            }
          },
          "401": {
            "description": "Unauthorized ",
            "schema": {
              "$ref": "#/definitions/AuthenticationErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/BadRequestResponse"
            }
          },
          "500": {
            "description": "ServerError ",
            "schema": {
              "$ref": "#/definitions/ServerErrorResponse"
            }
          }
        },
        "x-finastra-data-classification": [
          "Restricted"
        ]
      }
    },
    "/admin/customers/classes/search": {
      "get": {
        "summary": "Retrieve Customer/Member Account Classes",
        "description": "This call returns a list of customer/member account classes and their settings, which are defined on the Add New/Edit Existing Customer/Member Class window in System Administration.<BR><BR>**Search Tags:** BO, Employee, Consumer, TableDump",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Account Classes"
        ],
        "operationId": "CustomerAccountClassSearch",
        "parameters": [
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/Limit"
          },
          {
            "$ref": "#/parameters/Offset"
          },
          {
            "$ref": "#/parameters/Orderby"
          },
          {
            "$ref": "#/parameters/X-PHX-Filters"
          },
          {
            "$ref": "#/parameters/X-PHX-ReferenceNo"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AdRmClsListResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResponse"
            }
          },
          "401": {
            "description": "Unauthorized ",
            "schema": {
              "$ref": "#/definitions/AuthenticationErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/BadRequestResponse"
            }
          },
          "500": {
            "description": "ServerError ",
            "schema": {
              "$ref": "#/definitions/ServerErrorResponse"
            }
          }
        },
        "x-finastra-data-classification": [
          "Restricted"
        ]
      }
    },
    "/admin/customers/titles/search": {
      "get": {
        "summary": "Retrieve Customer/Member Title Options",
        "description": "This call returns a list of titles, such as Mr. or Mrs.,that can be assigned to a customer/member as part of the account origination process.Titles can also be set for nonpersonal accounts to indicate the organization type,such as corporation or partnership. These settings are defined on the Add New/Edit Existing Customer/MemberTitles window in System Administration.<BR><BR>**Search Tags:** BO, Employee, Consumer, TableDump",
        "operationId": "AdminCustomersTitlesSearchGet",
        "tags": [
          "Titles"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/Limit"
          },
          {
            "$ref": "#/parameters/Offset"
          },
          {
            "$ref": "#/parameters/Orderby"
          },
          {
            "$ref": "#/parameters/X-PHX-Filters"
          },
          {
            "$ref": "#/parameters/X-PHX-ReferenceNo"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AdRmTitleListResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResponse"
            }
          },
          "401": {
            "description": "Unauthorized ",
            "schema": {
              "$ref": "#/definitions/AuthenticationErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/BadRequestResponse"
            }
          },
          "500": {
            "description": "ServerError ",
            "schema": {
              "$ref": "#/definitions/ServerErrorResponse"
            }
          }
        },
        "x-finastra-data-classification": [
          "Restricted"
        ]
      }
    },
    "/admin/customers/identification/search": {
      "get": {
        "summary": "Retrieve Customer/Member ID Types",
        "description": "This call returns a list of identification options that can be used to validate the identity of the customer/member, such as Driver's License or Birth Certificate. These settings are defined on the Add New/Edit Existing Customer/Member ID Type window in System Administration.<BR><BR>**Search Tags:** BO, Employee, Consumer, TableDump",
        "operationId": "AdminCustomersIdentificationSearchGet",
        "tags": [
          "Identification"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/Limit"
          },
          {
            "$ref": "#/parameters/Offset"
          },
          {
            "$ref": "#/parameters/Orderby"
          },
          {
            "$ref": "#/parameters/X-PHX-Filters"
          },
          {
            "$ref": "#/parameters/X-PHX-ReferenceNo"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AdRmIdentListResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResponse"
            }
          },
          "401": {
            "description": "Unauthorized ",
            "schema": {
              "$ref": "#/definitions/AuthenticationErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/BadRequestResponse"
            }
          },
          "500": {
            "description": "ServerError ",
            "schema": {
              "$ref": "#/definitions/ServerErrorResponse"
            }
          }
        },
        "x-finastra-data-classification": [
          "Restricted"
        ]
      }
    },
    "/customers/personalnfo/{encId}": {
      "patch": {
        "summary": "Update Customer/Member Personal Information",
        "description": "This call updates personal information, including portfolio information and customer reference information for a selected customer/member.",
        "operationId": "CustomerPersonalInfoPatch",
        "tags": [
          "Customer/Member"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/X-PHX-ReferenceNo"
          },
          {
            "in": "path",
            "name": "encId",
            "description": "Encrypted Identifier used to identify the resource uniquely.{\"rimNo\":\"int32\"}",
            "required": true,
            "maxLength": 10000,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRmPersonalInfoRequest"
            },
            "x-finastra-data-classification": [
              "Restricted"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateRmPersonalInfoResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResponse"
            }
          },
          "401": {
            "description": "Unauthorized ",
            "schema": {
              "$ref": "#/definitions/AuthenticationErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/BadRequestResponse"
            }
          },
          "500": {
            "description": "ServerError ",
            "schema": {
              "$ref": "#/definitions/ServerErrorResponse"
            }
          }
        },
        "x-finastra-data-classification": [
          "Restricted"
        ]
      }
    },
    "/customers/{encId}/ui": {
      "patch": {
        "summary": "Update Customer/Member Account Details",
        "description": "This call updates customer/member information, including BSA risk fields, such as the source of funds and exemption type, for a selected customer/member.<BR><BR>**Search Tags:** BO, UI, Employee, Consumer",
        "operationId": "CustomersByEncIdAccountDetailsUpdate",
        "tags": [
          "Customer/Member"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/X-PHX-ReferenceNo"
          },
          {
            "$ref": "#/parameters/encId"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRmAcctRequest"
            },
            "x-finastra-data-classification": [
              "Restricted"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateRmAcctResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResponse"
            }
          },
          "401": {
            "description": "Unauthorized ",
            "schema": {
              "$ref": "#/definitions/AuthenticationErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/BadRequestResponse"
            }
          },
          "500": {
            "description": "ServerError ",
            "schema": {
              "$ref": "#/definitions/ServerErrorResponse"
            }
          }
        },
        "x-finastra-data-classification": [
          "Restricted"
        ]
      }
    },
    "/customers/financialstatement/{encId}": {
      "get": {
        "summary": "Retrieve Financial Statement Details for Customer/Member",
        "description": "This call returns personal financial statement details as displayed on the Personal Financial Statement window for a selected customer/member. (ResponseTypeId = 15)<BR><BR>**Search Tags:** UI, frmRmFinStmt",
        "operationId": "FinancialStmtByEncIdXMGet",
        "tags": [
          "Customer/Member"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/X-PHX-ReferenceNo"
          },
          {
            "$ref": "#/parameters/encId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RmFinStmtResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResponse"
            }
          },
          "401": {
            "description": "Unauthorized ",
            "schema": {
              "$ref": "#/definitions/AuthenticationErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/BadRequestResponse"
            }
          },
          "500": {
            "description": "ServerError ",
            "schema": {
              "$ref": "#/definitions/ServerErrorResponse"
            }
          }
        },
        "x-finastra-data-classification": [
          "Restricted"
        ]
      }
    },
    "/customers/{encId}/financialstatement": {
      "get": {
        "summary": "Retrieve Financial Statements for Customer/Member",
        "description": "This call returns a list of all personal financial statements defined for a selected customer/member. (ResponseTypeId = 14)",
        "operationId": "CustomersByEncIdFinancialStmtGet",
        "tags": [
          "Customer/Member"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Limit"
          },
          {
            "$ref": "#/parameters/Offset"
          },
          {
            "$ref": "#/parameters/X-PHX-ReferenceNo"
          },
          {
            "$ref": "#/parameters/encId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RmFinStmtListResponse14"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResponse"
            }
          },
          "401": {
            "description": "Unauthorized ",
            "schema": {
              "$ref": "#/definitions/AuthenticationErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/BadRequestResponse"
            }
          },
          "500": {
            "description": "ServerError ",
            "schema": {
              "$ref": "#/definitions/ServerErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "UpdateRmPersonalInfoRequest": {
      "description": "UpdateRmPersonalInfoRequest",
      "title": "UpdateRmPersonalInfoRequest",
      "type": "object",
      "properties": {
        "accountant": {
          "description": "Accountant name for the customer/member.",
          "maxLength": 30,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "autoAdvIndebtRevDt": {
          "description": "Indicates whether the review date should automatically be advanced by the system.",
          "maxLength": 1,
          "type": "string"
        },
        "bank1": {
          "description": "Name of another financial instution that the customer/member has a relationship with.",
          "maxLength": 30,
          "type": "string"
        },
        "bank1Acct": {
          "description": "Account information for the external institution this customer/member has a relationship with.",
          "maxLength": 20,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "bank2": {
          "description": "Secondary external financial institution that the customer/member has a relationship with.",
          "maxLength": 30,
          "type": "string"
        },
        "bank2Acct": {
          "description": "Account information for the secondary external financial institution that the customer/member has a relationship with.",
          "maxLength": 20,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "broker": {
          "description": "Name of the broker for the customer/member.",
          "maxLength": 30,
          "type": "string"
        },
        "dependants": {
          "format": "int32",
          "description": "Number of dependents supported by the customer/member.",
          "type": "integer"
        },
        "empl": {
          "description": "Name of the employee that created this record.",
          "maxLength": 40,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "emplAddr": {
          "description": "Full address of the Relationship Manager assigned to this customer/member.",
          "maxLength": 40,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "emplExt": {
          "description": "Phone number extension, if applicable, of the Relationship Manager assigned to this customer/member.",
          "maxLength": 6,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "emplPhDefFormat": {
          "description": "Indicates whether the employee's phone number is a local number.",
          "maxLength": 1,
          "type": "string"
        },
        "emplPhone": {
          "description": "Phone number of the Relationship Manager assigned to this customer/member.",
          "maxLength": 20,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "emplPosition": {
          "description": "Job title of the Relationship Manager assigned to this customer/member.",
          "maxLength": 30,
          "type": "string"
        },
        "emplStartDt": {
          "format": "date",
          "description": "Displays the start date of current employment.",
          "type": "string"
        },
        "finAddlInfo": {
          "description": "This contains free format text - user defined",
          "maxLength": 120,
          "type": "string"
        },
        "finStmtExpiryDt": {
          "format": "date",
          "description": "This indicates the expiration date of the financial statements on hand at the bank.",
          "type": "string"
        },
        "finStmtNoticeDt": {
          "format": "date",
          "description": "This contains the financial statements notice date. <br>Note: The overnight is bumping the expiration date before notice is produced.",
          "type": "string"
        },
        "finStmtPeriod": {
          "description": "The period the financial statement covers.",
          "maxLength": 8,
          "type": "string"
        },
        "finStmtReqd": {
          "description": "This indicates whether a financial statement is required or not.",
          "maxLength": 1,
          "type": "string"
        },
        "finStmtTrm": {
          "format": "int32",
          "description": "The term the financial statement covers.",
          "type": "integer"
        },
        "indebtLastReviewDt": {
          "format": "date",
          "description": "Date that the last indebtedness review was performed.",
          "type": "string"
        },
        "indebtNextReviewDt": {
          "format": "date",
          "description": "Date that the next indebtedness review is scheduled to occur.",
          "type": "string"
        },
        "indebtPeriod": {
          "description": "Defines how often indebtedness reviews occur.",
          "maxLength": 8,
          "type": "string"
        },
        "indebtTrm": {
          "format": "int32",
          "description": "Defines how often indebtedness reviews occur.",
          "type": "integer"
        },
        "lastFinStmtDt": {
          "format": "date",
          "description": "This contains the last financial statements received date.",
          "type": "string"
        },
        "lifeIns": {
          "description": "Name of the insurance agent or company for the customer/member.",
          "maxLength": 30,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "maritalStatus": {
          "description": "Marital status of the customer/member.<br>Value: Other, Unmarried, Married, Widowed, Divorced",
          "maxLength": 13,
          "type": "string"
        },
        "occupation": {
          "description": "Defines the customer's current occupation.",
          "maxLength": 30,
          "type": "string"
        },
        "otherIns": {
          "description": "Name of any additional insurance agent or company for the customer/member.",
          "maxLength": 30,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "prevEmpl": {
          "description": "Name of the previously Relationship Manager that was assigned to this customer/member.",
          "maxLength": 40,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "prevEmplAddr": {
          "description": "Full address of the Relationship Manager that was previously assigned to this customer/member.",
          "maxLength": 40,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "prevEmplEndDt": {
          "format": "date",
          "description": "Displays the end date of previous employment.",
          "type": "string"
        },
        "prevEmplExt": {
          "description": "Phone number extension, if applicable, of the Relationship Manager assigned to this customer/member.",
          "maxLength": 6,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "prevEmplPhone": {
          "description": "Phone number of the Relationship Manager previously assigned to this customer/member.",
          "maxLength": 20,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "prevEmplPosition": {
          "description": "Job title of the Relationship Manager previously assigned to this customer/member.",
          "maxLength": 30,
          "type": "string"
        },
        "prevEmplStartDt": {
          "format": "date",
          "description": "Displays the start date of previous employment.",
          "type": "string"
        },
        "prevOccupation": {
          "description": "Defines the customer's previous occupation.",
          "maxLength": 30,
          "type": "string"
        },
        "prvPhDefFormat": {
          "description": "Indicates whether the customer's previous employer's phone is a local number.",
          "maxLength": 1,
          "type": "string"
        },
        "raceId": {
          "format": "int32",
          "description": "Unique number that identifies the race or ethnica classification for a customer/member.",
          "type": "integer"
        },
        "residence": {
          "description": "Indicates whether the customer/member rents or owns their home.",
          "maxLength": 5,
          "type": "string"
        }
      }
    },
    "UpdateRmPersonalInfoResponse": {
      "description": "Standard Response Information",
      "title": "UpdateRmPersonalInfoResponse",
      "type": "object",
      "properties": {
        "messages": {
          "description": "List of messages occurred while processing the request",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MessageInfo"
          }
        },
        "referenceNo": {
          "description": "Reference Number of the request. If no reference number is passed in the request the reference number is generated by the system.",
          "maxLength": 20,
          "type": "string"
        },
        "responseInfo": {
          "$ref": "#/definitions/ResponseInfo"
        },
        "result": {
          "$ref": "#/definitions/UpdateRmPersonalInfoResult"
        },
        "statusCode": {
          "format": "int32",
          "description": "HTTP Status Code",
          "type": "integer"
        }
      }
    },
    "UpdateRmPersonalInfoResult": {
      "description": "The result data for the request.",
      "title": "UpdateRmPersonalInfoResult",
      "type": "object",
      "properties": {
        "accountant": {
          "description": "Accountant name for the customer/member.",
          "maxLength": 30,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "autoAdvIndebtRevDt": {
          "description": "Indicates whether the review date should automatically be advanced by the system.",
          "type": "string",
          "maxLength": 1
        },
        "bank1": {
          "description": "Name of another financial instution that the customer/member has a relationship with.",
          "type": "string",
          "maxLength": 30
        },
        "bank1Acct": {
          "description": "Account information for the external institution this customer/member has a relationship with.",
          "type": "string",
          "maxLength": 20,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "bank2": {
          "description": "Secondary external financial institution that the customer/member has a relationship with.",
          "type": "string",
          "maxLength": 30
        },
        "bank2Acct": {
          "description": "Account information for the secondary external financial institution that the customer/member has a relationship with.",
          "type": "string",
          "maxLength": 20,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "broker": {
          "description": "Name of the broker for the customer/member.",
          "type": "string",
          "maxLength": 30
        },
        "createDt": {
          "description": "The date this record was created in the system \n (Example : 2023-05-05T05:15:12  [Format : yyyy-MM-ddThh:mm:ss]).",
          "maxLength": 19,
          "type": "string",
          "example": "2023-05-05T05:15:12"
        },
        "dependants": {
          "format": "int32",
          "description": "Number of dependents supported by the customer/member.",
          "type": "integer"
        },
        "empl": {
          "description": "Name of the employee that created this record.",
          "type": "string",
          "maxLength": 40,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "emplAddr": {
          "description": "Full address of the Relationship Manager assigned to this customer/member.",
          "type": "string",
          "maxLength": 40,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "emplExt": {
          "description": "Phone number extension, if applicable, of the Relationship Manager assigned to this customer/member.",
          "type": "string",
          "maxLength": 6,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "emplId": {
          "format": "int32",
          "description": "Unique number that identifies the employee that created this record.",
          "type": "integer"
        },
        "emplPhDefFormat": {
          "description": "Indicates whether the employee's phone number is a local number.",
          "type": "string",
          "maxLength": 1
        },
        "emplPhone": {
          "description": "Phone number of the Relationship Manager assigned to this customer/member.",
          "type": "string",
          "maxLength": 20,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "emplPosition": {
          "description": "Job title of the Relationship Manager assigned to this customer/member.",
          "type": "string",
          "maxLength": 30
        },
        "emplStartDt": {
          "format": "date",
          "description": "Displays the start date of current employment.",
          "type": "string"
        },
        "finAddlInfo": {
          "description": "This contains free format text - user defined",
          "type": "string",
          "maxLength": 120
        },
        "finStmtExpiryDt": {
          "format": "date",
          "description": "This indicates the expiration date of the financial statements on hand at the bank.",
          "type": "string"
        },
        "finStmtNoticeDt": {
          "format": "date",
          "description": "This contains the financial statements notice date. <br>Note: The overnight is bumping the expiration date before notice is produced.",
          "type": "string"
        },
        "finStmtPeriod": {
          "description": "The period the financial statement covers.",
          "type": "string",
          "maxLength": 8
        },
        "finStmtReqd": {
          "description": "This indicates whether a financial statement is required or not",
          "type": "string",
          "maxLength": 1
        },
        "finStmtTrm": {
          "format": "int32",
          "description": "The term the financial statement covers.",
          "type": "integer"
        },
        "indebtLastReviewDt": {
          "format": "date",
          "description": "Date that the last indebtedness review was performed.",
          "type": "string"
        },
        "indebtNextReviewDt": {
          "format": "date-time",
          "description": "Date that the next indebtedness review is scheduled to occur.",
          "type": "string"
        },
        "indebtPeriod": {
          "description": "Defines how often indebtedness reviews occur.",
          "type": "string",
          "maxLength": 8
        },
        "indebtTrm": {
          "format": "int32",
          "description": "Defines how often indebtedness reviews occur.",
          "type": "integer"
        },
        "lastFinStmtDt": {
          "format": "date",
          "description": "This contains the last financial statements received date.",
          "type": "string"
        },
        "lifeIns": {
          "description": "Name of the insurance agent or company for the customer/member.",
          "type": "string",
          "maxLength": 30,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "maritalStatus": {
          "description": "Marital status of the customer/member.<br>Value: Other, Unmarried, Married, Widowed, Divorced",
          "type": "string",
          "maxLength": 13
        },
        "memoType": {
          "description": "Indicates whether a note is attached to the record.",
          "type": "string",
          "maxLength": 1
        },
        "occupation": {
          "description": "Defines the customer's current occupation.",
          "type": "string",
          "maxLength": 30
        },
        "otherIns": {
          "description": "Name of any additional insurance agent or company for the customer/member.",
          "type": "string",
          "maxLength": 30,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "prevEmpl": {
          "description": "Name of the previously Relationship Manager that was assigned to this customer/member.",
          "type": "string",
          "maxLength": 40,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "prevEmplAddr": {
          "description": "Full address of the Relationship Manager that was previously assigned to this customer/member.",
          "type": "string",
          "maxLength": 40,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "prevEmplEndDt": {
          "format": "date",
          "description": "Displays the end date of previous employment.",
          "type": "string"
        },
        "prevEmplExt": {
          "description": "Phone number extension, if applicable, of the Relationship Manager assigned to this customer/member.",
          "type": "string",
          "maxLength": 6,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "prevEmplPhone": {
          "description": "Phone number of the Relationship Manager previously assigned to this customer/member.",
          "type": "string",
          "maxLength": 20,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "prevEmplPosition": {
          "description": "Job title of the Relationship Manager previously assigned to this customer/member.",
          "type": "string",
          "maxLength": 30
        },
        "prevEmplStartDt": {
          "format": "date",
          "description": "Displays the start date of previous employment.",
          "type": "string"
        },
        "prevOccupation": {
          "description": "Defines the customer's previous occupation.",
          "type": "string",
          "maxLength": 30
        },
        "prvPhDefFormat": {
          "description": "Indicates whether the customer's previous employer's phone is a local number.",
          "type": "string",
          "maxLength": 1
        },
        "ptid": {
          "format": "double",
          "description": "Row Identifier",
          "type": "number"
        },
        "raceId": {
          "format": "int32",
          "description": "Unique number that identifies the race or ethnica classification for a customer/member.",
          "type": "integer"
        },
        "residence": {
          "description": "Indicates whether the customer/member rents or owns their home.",
          "type": "string",
          "maxLength": 5
        },
        "rimNo": {
          "format": "int32",
          "description": "Indicates the customer this account is associated to.",
          "type": "integer",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "rowVersion": {
          "format": "int32",
          "description": "Row version of the record",
          "type": "integer"
        }
      }
    },
    "AdRmAddrTypeListResponse": {
      "title": "AdRmAddrTypeListResponse",
      "description": "Standard Response Information",
      "type": "object",
      "properties": {
        "messages": {
          "description": "List of messages occurred while processing the request",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MessageInfo"
          }
        },
        "pagingInfo": {
          "$ref": "#/definitions/PagingInfo"
        },
        "referenceNo": {
          "description": "Reference Number of the request. If no reference number is passed in the request the reference number is generated by the system.",
          "maxLength": 20,
          "type": "string"
        },
        "responseInfo": {
          "$ref": "#/definitions/ResponseInfo"
        },
        "result": {
          "description": "The result data for the request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdRmAddrTypeListResult"
          }
        },
        "statusCode": {
          "format": "int32",
          "description": "HTTP Status Code",
          "type": "integer"
        }
      }
    },
    "AdRmAddrTypeListResult": {
      "title": "AdRmAddrTypeListResult",
      "description": "The result data for the request.",
      "type": "object",
      "properties": {
        "addrType": {
          "description": "Displays a description of the address type, which is displayed in Customer/Member Management in order to define the type of address, such as Home or Work, entered for the customer/member contact information.",
          "type": "string",
          "maxLength": 15
        },
        "addrTypeId": {
          "format": "int32",
          "description": "Displays a unique number that identifies the address type defined in System Administration.",
          "type": "integer"
        },
        "createDt": {
          "description": "Displays the date a record was added to the system. \n (Example : 2023-03-07T06:09:26  [Format : yyyy-MM-ddThh:mm:ss]).",
          "maxLength": 19,
          "type": "string",
          "example": "2023-03-07T06:09:26"
        },
        "effectiveDt": {
          "format": "date",
          "description": "Displays the date that the address type Status was updated to Active.",
          "type": "string"
        },
        "emplId": {
          "format": "int32",
          "description": "Displays a unique number that identifies the employee that created the address type.",
          "type": "integer"
        },
        "encId": {
          "description": "Unique record identifier.",
          "type": "string",
          "maxLength": 10000
        },
        "memoType": {
          "description": "Indicates whether a note has been attached to the address type.",
          "type": "string",
          "maxLength": 1
        },
        "ptid": {
          "format": "double",
          "description": "Displays a unique number that identifies a system record.",
          "type": "number"
        },
        "rowVersion": {
          "format": "int32",
          "description": "Displays the number of times the address type has been updated.",
          "type": "integer"
        },
        "status": {
          "description": "Displays the status of the address type, such as Active or Closed.",
          "type": "string",
          "maxLength": 8
        },
        "statusSort": {
          "format": "int32",
          "description": "Displays a number that represents the Status of a record, which allows for sorting based on status.",
          "minimum": 0,
          "maximum": 255,
          "type": "integer"
        }
      }
    },
    "AuthenticationErrorResponse": {
      "title": "AuthenticationErrorResponse",
      "description": "The client request has not been completed because it lacks valid authentication credentials for the requested.",
      "type": "object",
      "properties": {
        "errorMessage": {
          "type": "string",
          "maxLength": 10000,
          "description": "Detail of error response."
        }
      }
    },
    "BadRequestResponse": {
      "title": "BadRequestResponse",
      "description": "Standard Response Information",
      "type": "object",
      "properties": {
        "messages": {
          "description": "List of messages occurred while processing the request",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/MessageInfo"
          }
        },
        "referenceNo": {
          "description": "Reference Number of the request.  If no reference number is passed in the request the reference number is generated by the system.",
          "type": "string",
          "maxLength": 20
        },
        "responseInfo": {
          "$ref": "#/definitions/ResponseInfo"
        },
        "statusCode": {
          "format": "int32",
          "description": "HTTP Status Code",
          "type": "integer"
        }
      }
    },
    "CustomerAddressResponse": {
      "title": "CustomerAddressResponse",
      "description": "Customer/Members's addresses",
      "type": "object",
      "properties": {
        "addrChgDays": {
          "format": "int32",
          "description": "Number of days since the address has changed",
          "type": "integer"
        },
        "addrChgDt": {
          "format": "date",
          "description": "The date on which the record was created and the row was inserted into the database. The system stamps the date when the record is saved",
          "type": "string"
        },
        "addressBasis": {
          "description": "Determines how the mailing address is determined. Value: Recurring - Address in effect from one date to another annually, NonRecurring - Address in effect for a one-time date range, Permanent - Address always in effect",
          "type": "string",
          "maxLength": 12
        },
        "addressId": {
          "format": "int32",
          "description": "Defines the unique customer address identifier.",
          "type": "integer"
        },
        "addrLine1": {
          "description": "Defines the first address line for the RIM account.",
          "type": "string",
          "maxLength": 40,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "addrLine2": {
          "description": "Defines the second address line for the RIM account.",
          "type": "string",
          "maxLength": 40,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "addrLine3": {
          "description": "Defines the third address line for the RIM account.",
          "type": "string",
          "maxLength": 40,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "addrOfResidence": {
          "description": "This flag is used to determine if the address is the physical address for the customer.",
          "type": "string",
          "maxLength": 1
        },
        "addrType": {
          "description": "Displays a description of the address type, which is displayed in Customer/Member Management in order to define the type of address, such as Home or Work, entered for the customer/member contact information.",
          "type": "string",
          "maxLength": 12
        },
        "addrTypeId": {
          "format": "int32",
          "description": "Defines the type of address that this account is attached to.  <br><br>1 - Primary address<br>10 - Alternate primary address",
          "type": "integer"
        },
        "city": {
          "description": "Defines the city address for the RIM account.",
          "type": "string",
          "maxLength": 25,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "country": {
          "description": "Displays the full country name, which is listed as a field option in Customer/Member Management for the Country field.",
          "type": "string",
          "maxLength": 25,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "countryCode": {
          "description": "Defines the country code for the RIM account.",
          "type": "string",
          "maxLength": 4,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "emailAddr1": {
          "description": "Defines the customers home email address.",
          "type": "string",
          "maxLength": 255,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "emailAddr2": {
          "description": "Defines the customers work email address.",
          "type": "string",
          "maxLength": 255,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "encId": {
          "description": "Encrypted Identifier used to identify the resource uniquely.",
          "type": "string",
          "maxLength": 10000
        },
        "endDt": {
          "format": "date",
          "description": "Defines the last date of an address that is not a permanent address.",
          "type": "string"
        },
        "faxExt": {
          "description": "Defines the fax machine phone number extension, if available.",
          "type": "string",
          "maxLength": 6,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "faxPhone": {
          "description": "Defines the fax machine phone number associated with the address record.",
          "type": "string",
          "maxLength": 20,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "faxPhoneAvailability": {
          "description": "Notifies the EFT processor when the fax number can be dialed. <br>Value: Day, Evening, Both",
          "type": "string",
          "maxLength": 7
        },
        "faxPhoneConsent": {
          "description": "Indicates whether a customer/member has provided consent to contact them through their fax number.",
          "type": "string",
          "maxLength": 1
        },
        "faxPhoneMobileInd": {
          "description": "Indicates this number is a mobile number.",
          "type": "string",
          "maxLength": 1
        },
        "mobilePhone2Availability": {
          "description": "Notifies the EFT processor when the phone number can be dialed. <br>Value: Day, Evening, Both",
          "type": "string",
          "maxLength": 7
        },
        "mobilePhone2Consent": {
          "description": "Indicates whether the customer/member has provided consent to be contacted through this number.",
          "type": "string",
          "maxLength": 1
        },
        "mobilePhone2MobileInd": {
          "description": "Indicates this number is a mobile number.",
          "type": "string",
          "maxLength": 1
        },
        "pagerNumber": {
          "description": "RIM customer's page number",
          "type": "string",
          "maxLength": 20,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "pagerPinCode": {
          "description": "RIM customer's page PIN access code",
          "type": "string",
          "maxLength": 10,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "phone1": {
          "description": "Defines the home phone number for the RIM account.",
          "type": "string",
          "maxLength": 20,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "phone1Availability": {
          "description": "Notifies the EFT processor when the phone number can be dialed. <br>Value: Day, Evening, Both",
          "type": "string",
          "maxLength": 7
        },
        "phone1Consent": {
          "description": "phone 1 contact consent",
          "type": "string",
          "maxLength": 1
        },
        "phone1Ext": {
          "description": "Displays the extension number, if available.",
          "type": "string",
          "maxLength": 6,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "phone1MobileInd": {
          "description": "Indicates this number is a mobile number.",
          "type": "string",
          "maxLength": 1
        },
        "phone2": {
          "description": "Defines the work phone number for the RIM account.",
          "type": "string",
          "maxLength": 20,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "phone2Availability": {
          "description": "Notifies the EFT processor when the phone number can be dialed. <br>Value: Day, Evening, Both",
          "type": "string",
          "enum": [
            "Day",
            "Evening",
            "Both"
          ],
          "maxLength": 7
        },
        "phone2Consent": {
          "description": "phone 2 contact consent",
          "type": "string",
          "maxLength": 1
        },
        "phone2Ext": {
          "description": "Defines the work phone extension  number for the RIM account.",
          "type": "string",
          "maxLength": 6,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "phone2MobileInd": {
          "description": "Indicates this number is a mobile number.",
          "type": "string",
          "maxLength": 1
        },
        "phone3": {
          "description": "Displays the primary phone number.",
          "type": "string",
          "maxLength": 20,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "phone3Availability": {
          "description": "Notifies the EFT processor when the phone number can be dialed. <br>Value: Day, Evening, Both",
          "type": "string",
          "maxLength": 7
        },
        "phone3Consent": {
          "description": "Indicates whether the customer/member has provided consent to be contacted through this number.",
          "type": "string",
          "maxLength": 1
        },
        "phone3Ext": {
          "description": "Defines the extension, if appliable, for the primary phone number.",
          "type": "string",
          "maxLength": 6,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "phone3MobileInd": {
          "description": "Indicates this number is a mobile number.",
          "type": "string",
          "maxLength": 1
        },
        "phone4": {
          "description": "Defines the secondary phone number for a customer/member.",
          "type": "string",
          "maxLength": 20,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "phone4Ext": {
          "description": "Defines the extension, if applicable, for the secondary phone number.",
          "type": "string",
          "maxLength": 6,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "postalCode": {
          "description": "Defines the zip code for the RIM account.",
          "type": "string",
          "maxLength": 10,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "startDt": {
          "format": "date",
          "description": "Defines the start date of an address that is not a permanent address.",
          "type": "string"
        },
        "state": {
          "description": "state",
          "type": "string",
          "maxLength": 5,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        }
      }
    },
    "ListOfRecords-CustomerAddressResponse": {
      "title": "ListOfRecords-CustomerAddressResponse",
      "description": "List of Records Response",
      "type": "object",
      "properties": {
        "messages": {
          "description": "List of messages occurred while processing the request",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/MessageInfo"
          }
        },
        "pagingInfo": {
          "$ref": "#/definitions/PagingInfo"
        },
        "referenceNo": {
          "description": "Reference Number of the request.  The reference number is also available in the X-ReferenceNo.  If no reference number is passed in the request the reference number is generated by the system.",
          "type": "string",
          "maxLength": 10000
        },
        "responseInfo": {
          "$ref": "#/definitions/ResponseInfo"
        },
        "result": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerAddressResponse"
          }
        },
        "statusCode": {
          "format": "int32",
          "description": "HTTP Status Code",
          "type": "integer"
        }
      }
    },
    "MessageInfo": {
      "title": "MessageInfo",
      "description": "List of messages occurred while processing the request",
      "type": "object",
      "properties": {
        "fieldName": {
          "description": "Field name of the request, that caused this message",
          "maxLength": 65535,
          "type": "string"
        },
        "msgId": {
          "format": "int32",
          "description": "Non-zero number indicating system error number",
          "type": "integer"
        },
        "msgText": {
          "description": "Business Message",
          "maxLength": 65535,
          "type": "string"
        },
        "msgType": {
          "description": "Message Type E: Error, W: Warning, I: Informational",
          "maxLength": 65535,
          "type": "string",
          "enum": [
            "E",
            "W",
            "I"
          ]
        },
        "xRefId": {
          "format": "int32",
          "description": "Cross Reference Id of the request object, useful when referencing multiple objects.",
          "type": "integer"
        }
      }
    },
    "NotFoundErrorResponse": {
      "title": "NotFoundErrorResponse",
      "description": "Not Found Error Response",
      "type": "object",
      "properties": {
        "messages": {
          "description": "List of messages occurred while processing the request",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/MessageInfo"
          }
        },
        "referenceNo": {
          "description": "Reference Number of the request.  If no reference number is passed in the request the reference number is generated by the system.",
          "type": "string",
          "maxLength": 20
        },
        "responseInfo": {
          "$ref": "#/definitions/ResponseInfo"
        },
        "statusCode": {
          "format": "int32",
          "description": "HTTP Status Code",
          "type": "integer"
        }
      }
    },
    "PagingInfo": {
      "title": "PagingInfo",
      "description": "This object is available for the collection response, where the result contains array of objects.",
      "type": "object",
      "properties": {
        "currentPage": {
          "format": "int32",
          "description": "The Page number for the current data range",
          "type": "integer"
        },
        "moreRecords": {
          "description": "True if there are more records, false if this is the last page",
          "type": "boolean"
        },
        "pageSize": {
          "format": "int32",
          "description": "Number of rows per page, used to calculate the current result.",
          "type": "integer"
        },
        "totalResults": {
          "format": "int32",
          "description": "Number of records returned in this response",
          "type": "integer"
        }
      }
    },
    "ResponseInfo": {
      "title": "ResponseInfo",
      "description": "Object containing additional information on the response.",
      "type": "object",
      "properties": {
        "cvReturnCode": {
          "description": "Indicates the Card Validation return code.",
          "maxLength": 10,
          "type": "string"
        },
        "logPtid": {
          "format": "int64",
          "description": "Defines the Unique Log Identifier for further reference.",
          "type": "integer"
        },
        "postingMethod": {
          "description": "Indicates how the request was processed. <br/> <br/> Value: R- Realtime, M - Memo, F - Future Dated",
          "maxLength": 30,
          "type": "string"
        },
        "primaryDbAvailable": {
          "description": "Indicates the availability of the primary database. <br/> <br/> Value: True, False",
          "maxLength": 15,
          "type": "string"
        },
        "returnCode": {
          "format": "int32",
          "description": "Returns code 0 to indicates the success of a call. A non-zero response indicates an error. More details for the error are provided in messages.",
          "type": "integer"
        },
        "xmDbStatus": {
          "description": "Indicates the current status of the database. <br/> <br/> Value: Day, Nightly, CopyOver, CopyBack",
          "maxLength": 30,
          "type": "string",
          "enum": [
            "Day",
            "Nightly",
            "CopyOver",
            "CopyBack"
          ]
        }
      }
    },
    "ServerErrorResponse": {
      "title": "ServerErrorResponse",
      "description": "The server encountered an unexpected condition that prevented it from fulfilling the request.",
      "type": "object",
      "properties": {
        "errorMessage": {
          "type": "string",
          "maxLength": 10000,
          "description": "Detail of error response."
        }
      }
    },
    "UpdateRmAddressRequest": {
      "title": "UpdateRmAddressRequest",
      "description": "UpdateRmAddressRequest",
      "type": "object",
      "properties": {
        "status": {
          "description": "Defines the status of the row.",
          "maxLength": 14,
          "type": "string"
        }
      }
    },
    "UpdateRmAddressResponse": {
      "title": "UpdateRmAddressResponse",
      "description": "Standard Response Information",
      "type": "object",
      "properties": {
        "messages": {
          "description": "List of messages occurred while processing the request",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MessageInfo"
          }
        },
        "referenceNo": {
          "description": "Reference Number of the request. If no reference number is passed in the request the reference number is generated by the system.",
          "maxLength": 20,
          "type": "string"
        },
        "responseInfo": {
          "$ref": "#/definitions/ResponseInfo"
        },
        "result": {
          "$ref": "#/definitions/UpdateRmAddressResult"
        },
        "statusCode": {
          "format": "int32",
          "description": "HTTP Status Code",
          "type": "integer"
        }
      }
    },
    "UpdateRmAddressResult": {
      "title": "UpdateRmAddressResult",
      "description": "The result data for the request.",
      "type": "object",
      "properties": {
        "encId": {
          "description": "Unique record identifier.",
          "type": "string",
          "maxLength": 10000
        },
        "status": {
          "description": "Defines the status of the row.",
          "type": "string",
          "maxLength": 19
        },
        "statusSort": {
          "format": "int32",
          "description": "A numeric value set in conjunction with the status column to sort entries.",
          "maximum": 255,
          "type": "integer"
        }
      }
    },
    "PostCustomerAddressTpiRequest": {
      "title": "PostCustomerAddressTpiRequest",
      "description": "Customer address class to create the address.",
      "required": [
        "addressLine1",
        "addrOfResidence",
        "addrTypeId",
        "city",
        "name1",
        "state",
        "zip"
      ],
      "type": "object",
      "properties": {
        "rimNo": {
          "format": "int32",
          "description": "Indicates the customer this account is associated to.",
          "type": "integer",
          "readOnly": true,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "addrId": {
          "format": "int32",
          "description": "Defines the unique customer address identifier.",
          "type": "integer",
          "readOnly": true
        },
        "phone1MobileInd": {
          "description": "Indicates this number is a mobile number.",
          "type": "string",
          "readOnly": true,
          "maxLength": 1
        },
        "phone1ContactConsent": {
          "description": "phone 1 contact consent",
          "type": "string",
          "readOnly": true,
          "maxLength": 1
        },
        "phone1EveningDay": {
          "description": "Notifies the EFT processor when the phone number can be dialed. <br>Value: Day, Evening, Both",
          "type": "string",
          "readOnly": true,
          "maxLength": 7
        },
        "phone2MobileInd": {
          "description": "Indicates this number is a mobile number.",
          "type": "string",
          "readOnly": true,
          "maxLength": 1
        },
        "phone2ContactConsent": {
          "description": "phone 2 contact consent",
          "type": "string",
          "readOnly": true,
          "maxLength": 1
        },
        "phone2EveningDay": {
          "description": "Notifies the EFT processor when the phone number can be dialed. <br>Value: Day, Evening, Both",
          "type": "string",
          "readOnly": true,
          "maxLength": 7
        },
        "mobile2Phone": {
          "description": "Defines the secondary phone number for a customer/member.",
          "type": "string",
          "readOnly": true,
          "maxLength": 20,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "mobile2DefFormat": {
          "description": "Indicates whether the phone number is a local number.",
          "type": "string",
          "readOnly": true,
          "maxLength": 1
        },
        "mobile2PhoneExt": {
          "description": "Defines the extension, if applicable, for the secondary phone number.",
          "type": "string",
          "readOnly": true,
          "maxLength": 6,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "mobile2PhoneMobileInd": {
          "description": "Indicates this number is a mobile number.",
          "type": "string",
          "readOnly": true,
          "maxLength": 1
        },
        "mobile2PhoneContactConsent": {
          "description": "Indicates whether the customer/member has provided consent to be contacted through this number.",
          "type": "string",
          "readOnly": true,
          "maxLength": 1
        },
        "mobile2PhoneEveningDay": {
          "description": "Notifies the EFT processor when the phone number can be dialed. <br>Value: Day, Evening, Both",
          "type": "string",
          "readOnly": true,
          "maxLength": 7
        },
        "faxPhoneMobileInd": {
          "description": "Indicates this number is a mobile number.",
          "type": "string",
          "readOnly": true,
          "maxLength": 1
        },
        "faxPhoneContactConsent": {
          "description": "Indicates whether a customer/member has provided consent to contact them through their fax number.",
          "type": "string",
          "maxLength": 1,
          "readOnly": true
        },
        "phone2Ext": {
          "description": "Defines the work phone extension  number for the RIM account.",
          "maxLength": 6,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "zip": {
          "description": "Defines the zip code for the RIM account.",
          "maxLength": 10,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "phone1Ext": {
          "description": "Displays the extension number, if available.",
          "maxLength": 6,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "international": {
          "description": "Indicates whether the customer's address is an international address.",
          "maxLength": 1,
          "type": "string"
        },
        "phone2DefFormat": {
          "description": "Indicates whether the phone number is a local number.",
          "maxLength": 1,
          "type": "string"
        },
        "phone2": {
          "description": "Defines the work phone number for the RIM account.",
          "maxLength": 20,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "phone1": {
          "description": "Defines the home phone number for the RIM account.",
          "maxLength": 20,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "faxPhone": {
          "description": "Defines the fax machine phone number associated with the address record.",
          "maxLength": 20,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "name1": {
          "description": "Defines the first name of the customer  for the RIM account.",
          "maxLength": 40,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "mobilePhoneExt": {
          "description": "Defines the extension, if appliable, for the primary phone number.",
          "maxLength": 6,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "countryCode": {
          "description": "Defines the country code for the RIM account.",
          "maxLength": 4,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "name2": {
          "description": "Defines the last name of the customer  for the RIM account.",
          "maxLength": 40,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "pagerDefFormat": {
          "description": "Indicates whether the phone number is a local number.",
          "maxLength": 1,
          "type": "string"
        },
        "addrTypeId": {
          "format": "int32",
          "description": "Defines the type of address that this account is attached to.  <br><br>1 - Primary address<br>10 - Alternate primary address",
          "type": "integer"
        },
        "pagerPinCode": {
          "description": "RIM customer's page PIN access code",
          "maxLength": 10,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "state": {
          "description": "Defines the state code for the RIM account.",
          "maxLength": 5,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "pagerNumber": {
          "description": "RIM customer's page number",
          "maxLength": 20,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "addressBasis": {
          "description": "Determines how the mailing address is determined. Value: Recurring - Address in effect from one date to another annually, NonRecurring - Address in effect for a one-time date range, Permanent - Address always in effect",
          "maxLength": 12,
          "type": "string"
        },
        "startDt": {
          "format": "date",
          "description": "Defines the start date of an address that is not a permanent address.",
          "type": "string"
        },
        "mobilePhone": {
          "description": "Displays the primary phone number.",
          "maxLength": 20,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "addressLine2": {
          "description": "Defines the second address line for the RIM account.",
          "maxLength": 40,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "addressLine3": {
          "description": "Defines the third address line for the RIM account.",
          "maxLength": 40,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "addressLine1": {
          "description": "Defines the first address line for the RIM account.",
          "maxLength": 40,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "phone1DefFormat": {
          "description": "Indicates whether the phone number is a local number.",
          "maxLength": 1,
          "type": "string"
        },
        "faxDefFormat": {
          "description": "Indicates whether the fax number is a local number.",
          "maxLength": 1,
          "type": "string"
        },
        "city": {
          "description": "Defines the city address for the RIM account.",
          "maxLength": 25,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "endDt": {
          "format": "date",
          "description": "Defines the last date of an address that is not a permanent address.",
          "type": "string"
        },
        "faxPhoneExt": {
          "description": "Defines the fax machine phone number extension, if available.",
          "maxLength": 6,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "addrOfResidence": {
          "description": "This flag is used to determine if the address is the physical address for the customer.",
          "maxLength": 1,
          "type": "string"
        },
        "cbAddrIndicator": {
          "description": "C B Addr Indicator",
          "maxLength": 6,
          "type": "string"
        },
        "mobilePhoneMobileInd": {
          "description": "Indicates this number is a mobile number.",
          "maxLength": 1,
          "type": "string"
        },
        "mobilePhoneContactConsent": {
          "description": "Indicates whether the customer/member has provided consent to be contacted through this number.",
          "maxLength": 1,
          "type": "string"
        },
        "mobilePhoneEveningDay": {
          "description": "Notifies the EFT processor when the phone number can be dialed. <br>Value: Day, Evening, Both",
          "maxLength": 7,
          "type": "string"
        },
        "mobileDefFormat": {
          "description": "Indicates whether the phone number is a local number.",
          "maxLength": 1,
          "type": "string"
        }
      }
    },
    "PostCustomerAddressTpiResponse": {
      "title": "PostCustomerAddressTpiResponse",
      "description": "The address creation response.",
      "type": "object",
      "properties": {
        "addressId": {
          "description": "Defines the unique customer address identifier.",
          "type": "string",
          "maxLength": 2
        },
        "encId": {
          "description": "Encrypted Identifier used to identify the resource uniquely.",
          "type": "string",
          "maxLength": 10000
        },
        "returnCode": {
          "format": "int32",
          "description": "Indicates if the request was successful or not.  0 - success; nonzero - failed",
          "type": "integer"
        },
        "rimNo": {
          "description": "Indicates the customer this account is associated to.",
          "type": "string",
          "maxLength": 4,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        }
      }
    },
    "PostCustomerAddressTpiResponsePTpiResponseSingleRecord": {
      "description": "Single Record Response",
      "title": "PostCustomerAddressTpiResponsePTpiResponseSingleRecord",
      "type": "object",
      "properties": {
        "messages": {
          "description": "List of messages occurred while processing the request",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MessageInfo"
          }
        },
        "referenceNo": {
          "description": "Reference Number of the request.  If no reference number is passed in the request the reference number is generated by the system.",
          "maxLength": 20,
          "type": "string"
        },
        "responseInfo": {
          "$ref": "#/definitions/ResponseInfo"
        },
        "result": {
          "$ref": "#/definitions/PostCustomerAddressTpiResponsePTpiResponse"
        },
        "statusCode": {
          "format": "int32",
          "description": "HTTP Status Code",
          "type": "integer"
        }
      }
    },
    "PostCustomerAddressTpiResponsePTpiResponse": {
      "description": "PostCustomerAddressTpiResponsePTpiResponse",
      "title": "PostCustomerAddressTpiResponsePTpiResponse",
      "type": "object",
      "properties": {
        "messages": {
          "description": "List of messages occurred while processing the request",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MessageInfo"
          }
        },
        "referenceNo": {
          "description": "Reference Number of the request.  If no reference number is passed in the request the reference number is generated by the system.",
          "maxLength": 20,
          "type": "string"
        },
        "responseInfo": {
          "$ref": "#/definitions/ResponseInfo"
        },
        "statusCode": {
          "format": "int32",
          "description": "HTTP Status Code",
          "type": "integer"
        },
        "tpiResult": {
          "$ref": "#/definitions/PostCustomerAddressTpiResponseResultData"
        }
      }
    },
    "PostCustomerAddressTpiResponseResultData": {
      "description": "PostCustomerAddressTpiResponseResultData",
      "title": "PostCustomerAddressTpiResponseResultData",
      "type": "object",
      "properties": {
        "object": {
          "description": "Result object",
          "type": "string",
          "maxLength": 10
        },
        "outputData": {
          "$ref": "#/definitions/PostCustomerAddressTpiResponse"
        }
      }
    },
    "UpdateCustomerAddresssRequest": {
      "description": "UpdateCustomerAddresssRequest",
      "title": "UpdateCustomerAddresssRequest",
      "type": "object",
      "properties": {
        "addressBasis": {
          "description": "Determines how the mailing address is determined. Value: Recurring - Address in effect from one date to another annually, NonRecurring - Address in effect for a one-time date range, Permanent - Address always in effect",
          "maxLength": 12,
          "type": "string"
        },
        "addressTypeId": {
          "format": "int32",
          "description": "Defines the type of address that this account is attached to.  <br><br>1 - Primary address<br>10 - Alternate primary address",
          "type": "integer"
        },
        "addrLine1": {
          "description": "Defines the first address line for the RIM account.",
          "maxLength": 40,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "addrLine2": {
          "description": "Defines the second address line for the RIM account.",
          "maxLength": 40,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "addrLine3": {
          "description": "Defines the third address line for the RIM account.",
          "maxLength": 40,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "addrOfResidence": {
          "description": "This flag is used to determine if the address is the physical address for the customer.",
          "type": "string",
          "maxLength": 1
        },
        "city": {
          "description": "Defines the city address for the RIM account.",
          "maxLength": 25,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "country": {
          "description": "Textual description of the country",
          "type": "string",
          "maxLength": 25,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "countryCode": {
          "description": "Defines the country code for the RIM account.",
          "maxLength": 4,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "emailAddr1": {
          "description": "email addr 1",
          "maxLength": 40,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "emailAddr2": {
          "description": "email addr 2",
          "maxLength": 40,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "faxDefFormat": {
          "description": "Indicates whether the fax number is a local number.",
          "maxLength": 1,
          "type": "string"
        },
        "faxPhone": {
          "description": "Defines the fax machine phone number associated with the address record.",
          "maxLength": 20,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "faxPhoneExt": {
          "description": "Defines the fax machine phone number extension, if available.",
          "maxLength": 6,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "fullName1": {
          "description": "Defines the first name of the customer  for the RIM account.",
          "maxLength": 40,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "fullName2": {
          "description": "Defines the last name of the customer  for the RIM account.",
          "maxLength": 40,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "international": {
          "description": "Indicates whether the customer's address is an international address.",
          "maxLength": 1,
          "type": "string"
        },
        "limitFromDate": {
          "format": "date",
          "description": "Defines the start date of an address that is not a permanent address.",
          "type": "string"
        },
        "limitToDate": {
          "format": "date",
          "description": "Defines the last date of an address that is not a permanent address.",
          "type": "string"
        },
        "pagerDefFormat": {
          "description": "Indicates whether the phone number is a local number.",
          "maxLength": 1,
          "type": "string"
        },
        "pagerNumber": {
          "description": "RIM customer's page number",
          "maxLength": 20,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "pagerPinCode": {
          "description": "RIM customer's page PIN access code",
          "maxLength": 10,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "phone1": {
          "description": "Defines the home phone number for the RIM account.",
          "maxLength": 20,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "phone1DefFormat": {
          "description": "Indicates whether the phone number is a local number.",
          "maxLength": 1,
          "type": "string"
        },
        "phone1Ext": {
          "description": "Displays the extension number, if available.",
          "maxLength": 6,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "phone2": {
          "description": "Defines the work phone number for the RIM account.",
          "maxLength": 20,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "phone2DefFormat": {
          "description": "Indicates whether the phone number is a local number.",
          "maxLength": 1,
          "type": "string"
        },
        "phone2Ext": {
          "description": "Defines the work phone extension  number for the RIM account.",
          "maxLength": 6,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "phone3": {
          "description": "Displays the primary phone number.",
          "maxLength": 20,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "phone3DefFormat": {
          "description": "Indicates whether the phone number is a local number.",
          "maxLength": 1,
          "type": "string"
        },
        "phone3Ext": {
          "description": "Defines the extension, if appliable, for the primary phone number.",
          "maxLength": 6,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "postalCode": {
          "description": "Defines the zip code for the RIM account.",
          "maxLength": 10,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "state": {
          "description": "Defines the state code for the RIM account.",
          "maxLength": 5,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "stmtEmailType": {
          "description": "Stmt email type",
          "maxLength": 15,
          "type": "string"
        },
        "stmtViaEmail": {
          "description": "Stmt via email",
          "type": "string",
          "maxLength": 1
        }
      }
    },
    "UpdateCustomerAddressResponse": {
      "description": "Customer Address Update Response",
      "title": "UpdateCustomerAddressResponse",
      "type": "object",
      "properties": {
        "authCode": {
          "format": "double",
          "description": "Authorization code (Typically the ptid of log).",
          "type": "number"
        },
        "encId": {
          "description": "Encrypted Identifier used to identify the resource uniquely.",
          "type": "string",
          "maxLength": 10000
        }
      }
    },
    "UpdateCustomerAddressResponseSingleRecord": {
      "description": "Single Record Response",
      "title": "UpdateCustomerAddressResponseSingleRecord",
      "type": "object",
      "properties": {
        "messages": {
          "description": "List of messages occurred while processing the request",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MessageInfo"
          }
        },
        "referenceNo": {
          "description": "Reference Number of the request.  If no reference number is passed in the request the reference number is generated by the system.",
          "maxLength": 20,
          "type": "string"
        },
        "responseInfo": {
          "$ref": "#/definitions/ResponseInfo"
        },
        "result": {
          "$ref": "#/definitions/UpdateCustomerAddressResponse"
        },
        "statusCode": {
          "format": "int32",
          "description": "HTTP Status Code",
          "type": "integer"
        }
      }
    },
    "CreateRmIdentRequest10": {
      "description": "Create Rm Identity Request",
      "title": "CreateRmIdentRequest",
      "type": "object",
      "required": [
        "identId"
      ],
      "properties": {
        "countryIssued": {
          "description": "The country that issued the identification item presented by the customer.If the country is the United States, Canada or Mexico an issued state is also required.",
          "maxLength": 2,
          "type": "string"
        },
        "expiryDt": {
          "format": "date",
          "description": "The date the identification is scheduled to expire.",
          "type": "string"
        },
        "identAddlInfo": {
          "description": "User-defined additional information for the identification.",
          "maxLength": 254,
          "type": "string"
        },
        "identId": {
          "format": "int32",
          "description": "The type of identification presented by the customer.",
          "type": "integer"
        },
        "identValue": {
          "description": "The information used by the issuer to uniquely identify the customer on the identification item.",
          "maxLength": 40,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "issuedDt": {
          "format": "date",
          "description": "The date the identification was issued.",
          "type": "string"
        },
        "primaryId": {
          "description": "The primary identification for the customer's RIM.  The primary ID is always displayed and edited on the RIM edit window.",
          "maxLength": 1,
          "type": "string"
        },
        "primIdVerifyMeth": {
          "description": "Defines the verification method used to verify the id.",
          "maxLength": 30,
          "type": "string"
        },
        "stateIssued": {
          "description": "The state that issued the identification item presented by the customer.",
          "maxLength": 3,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        }
      }
    },
    "CreateRmIdentResponse10": {
      "description": "Standard Response Information",
      "title": "CreateRmIdentResponse",
      "type": "object",
      "properties": {
        "messages": {
          "description": "List of messages occurred while processing the request",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MessageInfo"
          }
        },
        "referenceNo": {
          "description": "Reference Number of the request. If no reference number is passed in the request the reference number is generated by the system.",
          "maxLength": 20,
          "type": "string"
        },
        "responseInfo": {
          "$ref": "#/definitions/ResponseInfo"
        },
        "result": {
          "$ref": "#/definitions/CreateRmIdentResult10"
        },
        "statusCode": {
          "format": "int32",
          "description": "HTTP Status Code",
          "type": "integer"
        }
      }
    },
    "CreateRmIdentResult10": {
      "description": "The result data for the request.",
      "title": "CreateRmIdentResult",
      "type": "object",
      "properties": {
        "countryIssued": {
          "description": "The country that issued the identification item presented by the customer.If the country is the United States, Canada or Mexico an issued state is also required.",
          "type": "string",
          "maxLength": 2
        },
        "createDt": {
          "description": "The date the entry is inserted into the database \n (Example : 2022-11-08T05:45:48  [Format : yyyy-MM-ddThh:mm:ss]).",
          "maxLength": 19,
          "type": "string",
          "example": "2022-11-08T05:45:48"
        },
        "effectiveDt": {
          "format": "date",
          "description": "The effective date of the identification.  This value is always equal to the system create date.",
          "type": "string"
        },
        "emplId": {
          "format": "int32",
          "description": "The RSM of the employee who created the row",
          "type": "integer"
        },
        "encId": {
          "description": "Unique record identifier.",
          "type": "string",
          "maxLength": 10000
        },
        "expiryDt": {
          "format": "date",
          "description": "The date the identification is scheduled to expire.",
          "type": "string"
        },
        "filterIdentId": {
          "description": "Defines whether to filter the document ID types for the selected Customer/Member.",
          "type": "string",
          "maxLength": 1
        },
        "filterIdentIdForScreenId": {
          "format": "int32",
          "description": "Defines the specific screen ID used to filter the document ID types for the selected Customer/Member.",
          "type": "integer"
        },
        "identAddlInfo": {
          "description": "User-defined additional information for the identification.",
          "type": "string",
          "maxLength": 254
        },
        "identId": {
          "format": "int32",
          "description": "The type of identification presented by the customer.",
          "type": "integer"
        },
        "identNo": {
          "format": "int32",
          "description": "A sequentially assigned number for the identification.",
          "type": "integer"
        },
        "identValue": {
          "description": "The information used by the issuer to uniquely identify the customer on the identification item.",
          "type": "string",
          "maxLength": 40
        },
        "issuedDt": {
          "format": "date",
          "description": "The date the identification was issued.",
          "type": "string"
        },
        "lastSysMaintDt": {
          "format": "date",
          "description": "Displays the last system change performed.",
          "type": "string"
        },
        "memoType": {
          "description": "A flag which indicates whether a note is attached to the row",
          "type": "string",
          "maxLength": 1
        },
        "outputType": {
          "format": "int32",
          "description": "OutputType",
          "maximum": 255,
          "type": "integer"
        },
        "primaryId": {
          "description": "The primary identification for the customer's RIM.  The primary ID is always displayed and edited on the RIM edit window.",
          "type": "string",
          "maxLength": 1
        },
        "primIdVerifyMeth": {
          "description": "Defines the verification method used to verify the id.",
          "type": "string",
          "maxLength": 30
        },
        "ptid": {
          "format": "double",
          "description": "The identifier that makes the row unique.  For tables populated by the front-end, ptid is an int datatype. Otherwise the ptid is a numeric (12,0) datatype.",
          "type": "number"
        },
        "rimNo": {
          "format": "int32",
          "description": "The unique identifier of customer",
          "type": "integer",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "rowVersion": {
          "format": "int32",
          "description": "The version of the row.  This is required for tables that can interactively be updated by multiple end-users.",
          "type": "integer"
        },
        "stateIssued": {
          "description": "The state that issued the identification item presented by the customer.",
          "type": "string",
          "maxLength": 3,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "status": {
          "description": "The status of the row.",
          "type": "string",
          "maxLength": 8
        },
        "statusSort": {
          "format": "int32",
          "description": "A numeric value set in conjunction with the status column used to sort entries",
          "maximum": 255,
          "type": "integer"
        }
      }
    },
    "CreateRmImageRequest": {
      "type": "object",
      "title": "CreateRmImageRequest",
      "description": "Create Rm Image Identity Request",
      "required": [
        "primaryImage"
      ],
      "properties": {
        "description": {
          "description": "This defines a label for the selected signature card. The default value for this field is Primary Account Holder and  for nonpersonal records this field is useful for tracking the names and positions of each authorized signer for a company.",
          "maxLength": 40,
          "type": "string"
        },
        "photo": {
          "format": "byte",
          "description": "This defines the identification photo image of the selected customer in the signature card.",
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "primaryImage": {
          "description": "This defines whether to automatically display the   designated signature card when the Image button is selected on-screen while accessing the customer record.",
          "maxLength": 1,
          "type": "string"
        },
        "signature": {
          "format": "byte",
          "description": "This defines the signature image of the selected customer in the signature card.",
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        }
      }
    },
    "CreateRmImageResponse": {
      "type": "object",
      "title": "CreateRmImageResponse",
      "description": "Standard Response Information",
      "properties": {
        "messages": {
          "description": "List of messages occurred while processing the request",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MessageInfo"
          }
        },
        "referenceNo": {
          "description": "Reference Number of the request. If no reference number is passed in the request the reference number is generated by the system.",
          "maxLength": 20,
          "type": "string"
        },
        "responseInfo": {
          "$ref": "#/definitions/ResponseInfo"
        },
        "result": {
          "$ref": "#/definitions/CreateRmImageResult"
        },
        "statusCode": {
          "format": "int32",
          "description": "HTTP Status Code",
          "type": "integer"
        }
      }
    },
    "CreateRmImageResult": {
      "description": "The result data for the request.",
      "title": "CreateRmImageResult",
      "type": "object",
      "properties": {
        "description": {
          "description": "This defines a label for the selected signature card. The default value for this field is Primary Account Holder and  for nonpersonal records this field is useful for tracking the names and positions of each authorized signer for a company.",
          "type": "string",
          "maxLength": 40
        },
        "encId": {
          "description": "Unique record identifier.",
          "type": "string",
          "maxLength": 10000
        },
        "imageId": {
          "format": "int32",
          "description": "This defines the unique image Id assigned to the selected customer.",
          "type": "integer"
        },
        "primaryImage": {
          "description": "This defines whether to automatically display the   designated signature card when the Image button is selected on-screen while accessing the customer record.",
          "type": "string",
          "maxLength": 1
        },
        "rimNo": {
          "format": "int32",
          "description": "Indicates the customer this account is associated to.",
          "type": "integer",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        }
      }
    },
    "CreateRmTrustRequest": {
      "description": "Standard Request Information",
      "type": "object",
      "required": [
        "rimNo"
      ],
      "properties": {
        "abstractProvisions": {
          "description": " Defines  the abstract of trust provisions.",
          "maxLength": 300,
          "type": "string"
        },
        "agreementDt": {
          "format": "date",
          "description": "Defines the date of the trust agreement. ",
          "type": "string"
        },
        "courtRestrict": {
          "description": "Defines the court restrictions that are applicable for the trust.",
          "maxLength": 250,
          "type": "string"
        },
        "datesAmended": {
          "description": "Defines the date the trust was amended.",
          "maxLength": 250,
          "type": "string"
        },
        "formalName": {
          "description": "Defines  the formal name for the trust.",
          "maxLength": 250,
          "type": "string"
        },
        "formerName": {
          "description": "Defines  the former name for the trust.",
          "maxLength": 250,
          "type": "string"
        },
        "hasCourtRestrict": {
          "description": "Defines whether there are  court restrictions for the trust.",
          "maxLength": 1,
          "type": "string"
        },
        "hasFormalName": {
          "description": "Defines whether the trust has a formal name.",
          "maxLength": 1,
          "type": "string"
        },
        "hasFormerName": {
          "description": " Defines whether there was a former name for the trust.",
          "maxLength": 1,
          "type": "string"
        },
        "inclBeneficiarySign": {
          "description": "Defines whether the beneficiary signatures are to be included with the trust information.",
          "maxLength": 1,
          "type": "string"
        },
        "inclFormalName": {
          "description": "Defines to include the trust's formal name.",
          "maxLength": 1,
          "type": "string"
        },
        "inclSettlorSign": {
          "description": "Defines whether the Settlor signatures are to be included with the trust information.",
          "maxLength": 1,
          "type": "string"
        },
        "nameTaken": {
          "description": " Defines the name in which the title to trust assets are to be taken.",
          "maxLength": 250,
          "type": "string"
        },
        "revocableTrust": {
          "description": "Defines the trust as revocable.",
          "maxLength": 1,
          "type": "string"
        },
        "rimNo": {
          "format": "int32",
          "description": "Defines a unique number identifying the customer/member.",
          "type": "integer",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "successorTrustee": {
          "description": "Defines the designated successor trustee.",
          "maxLength": 250,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "trustDisposition": {
          "description": "Defines the trust disposition on death.",
          "maxLength": 250,
          "type": "string"
        },
        "trusteesDiffer": {
          "description": "Defines whether the trust had different trustees than it did originally.",
          "maxLength": 1,
          "type": "string"
        },
        "trustModified": {
          "description": "Defines the trust as being open to being modified or amended.",
          "maxLength": 1,
          "type": "string"
        },
        "trustSettlorSsn": {
          "description": "Defines whether the trust's tax ID number as the Settlor's social security number.",
          "maxLength": 1,
          "type": "string"
        }
      }
    },
    "CreateRmTrustResponse": {
      "description": "Standard Response Information",
      "type": "object",
      "properties": {
        "messages": {
          "description": "List of messages occurred while processing the request",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MessageInfo"
          }
        },
        "referenceNo": {
          "description": "Reference Number of the request. If no reference number is passed in the request the reference number is generated by the system.",
          "maxLength": 20,
          "type": "string"
        },
        "responseInfo": {
          "$ref": "#/definitions/ResponseInfo"
        },
        "result": {
          "$ref": "#/definitions/CreateRmTrustResult"
        },
        "statusCode": {
          "format": "int32",
          "description": "HTTP Status Code",
          "type": "integer"
        }
      }
    },
    "CreateRmTrustResult": {
      "description": "The result data for the request.",
      "type": "object",
      "properties": {
        "abstractProvisions": {
          "description": " Defines  the abstract of trust provisions.",
          "maxLength": 300,
          "type": "string"
        },
        "agreementDt": {
          "format": "date",
          "description": "Defines the date of the trust agreement. ",
          "type": "string"
        },
        "courtRestrict": {
          "description": "Defines the court restrictions that are applicable for the trust.",
          "maxLength": 250,
          "type": "string"
        },
        "createDt": {
          "description": "Defines the date the  trust information record was created \n (Example : 2022-11-18T04:25:09  [Format : yyyy-MM-ddThh:mm:ss]).",
          "maxLength": 23,
          "type": "string",
          "example": "2022-11-18T04:25:09"
        },
        "datesAmended": {
          "description": "Defines the date the trust was amended.",
          "maxLength": 250,
          "type": "string"
        },
        "emplId": {
          "format": "int32",
          "description": "Defines the employee identification number.",
          "type": "integer"
        },
        "encId": {
          "description": "Unique record identifier.",
          "maxLength": 10000,
          "type": "string"
        },
        "formalName": {
          "description": "Defines  the formal name for the trust.",
          "maxLength": 250,
          "type": "string"
        },
        "formerName": {
          "description": "Defines  the former name for the trust.",
          "maxLength": 250,
          "type": "string"
        },
        "hasCourtRestrict": {
          "description": "Defines whether there are  court restrictions for the trust.",
          "maxLength": 1,
          "type": "string"
        },
        "hasFormalName": {
          "description": "Defines whether the trust has a formal name.",
          "maxLength": 1,
          "type": "string"
        },
        "hasFormerName": {
          "description": " Defines whether there was a former name for the trust.",
          "maxLength": 1,
          "type": "string"
        },
        "inclBeneficiarySign": {
          "description": "Defines whether the beneficiary signatures are to be included with the trust information.",
          "maxLength": 1,
          "type": "string"
        },
        "inclFormalName": {
          "description": "Defines to include the trust's formal name.",
          "maxLength": 1,
          "type": "string"
        },
        "inclSettlorSign": {
          "description": "Defines whether the Settlor signatures are to be included with the trust information.",
          "maxLength": 1,
          "type": "string"
        },
        "nameTaken": {
          "description": " Defines the name in which the title to trust assets are to be taken.",
          "maxLength": 250,
          "type": "string"
        },
        "ptid": {
          "format": "double",
          "description": "Defines the Unique Log Identifier for further reference.",
          "type": "number"
        },
        "revocableTrust": {
          "description": "Defines the trust as revocable.",
          "maxLength": 1,
          "type": "string"
        },
        "rimNo": {
          "format": "int32",
          "description": "Defines a unique number identifying the customer/member.",
          "type": "integer",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "rowVersion": {
          "format": "int32",
          "description": "Row version of the record.",
          "type": "integer"
        },
        "successorTrustee": {
          "description": "Defines the designated successor trustee.",
          "maxLength": 250,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "trustDisposition": {
          "description": "Defines the trust disposition on death.",
          "maxLength": 250,
          "type": "string"
        },
        "trusteesDiffer": {
          "description": "Defines whether the trust had different trustees than it did originally.",
          "maxLength": 1,
          "type": "string"
        },
        "trustModified": {
          "description": "Defines the trust as being open to being modified or amended.",
          "maxLength": 1,
          "type": "string"
        },
        "trustSettlorSsn": {
          "description": "Defines whether the trust's tax ID number as the Settlor's social security number.",
          "maxLength": 1,
          "type": "string"
        }
      }
    },
    "RmIdentListResponse20": {
      "description": "Standard Response Information",
      "type": "object",
      "properties": {
        "messages": {
          "description": "List of messages occurred while processing the request",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MessageInfo"
          }
        },
        "pagingInfo": {
          "$ref": "#/definitions/PagingInfo"
        },
        "referenceNo": {
          "description": "Reference Number of the request. If no reference number is passed in the request the reference number is generated by the system.",
          "maxLength": 20,
          "type": "string"
        },
        "responseInfo": {
          "$ref": "#/definitions/ResponseInfo"
        },
        "result": {
          "description": "The result data for the request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RmIdentListResult20"
          }
        },
        "statusCode": {
          "format": "int32",
          "description": "HTTP Status Code",
          "type": "integer"
        }
      }
    },
    "RmIdentListResult20": {
      "description": "The result data for the request.",
      "type": "object",
      "properties": {
        "countryIssued": {
          "description": "The country that issued the identification item presented by the customer.If the country is the United States, Canada or Mexico an issued state is also required.",
          "type": "string",
          "maxLength": 2,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "expiryDt": {
          "format": "date",
          "description": "The date the identification is scheduled to expire.",
          "type": "string"
        },
        "identAddlInfo": {
          "description": "User-defined additional information for the identification.",
          "type": "string",
          "maxLength": 254
        },
        "identification": {
          "description": "Displays a description of the identity type that is provided as a field value option in Customer/Member Management for the form of identification the institution accepts to verify customer/member identity.",
          "type": "string",
          "maxLength": 40
        },
        "identNo": {
          "format": "int32",
          "description": "A sequentially assigned number for the identification.",
          "type": "integer"
        },
        "identValue": {
          "description": "The information used by the issuer to uniquely identify the customer on the identification item.",
          "type": "string",
          "maxLength": 40
        },
        "issuedDt": {
          "format": "date",
          "description": "The date the identification was issued.",
          "type": "string"
        },
        "primaryId": {
          "description": "The primary identification for the customer's RIM.  The primary ID is always displayed and edited on the RIM edit window.",
          "type": "string",
          "maxLength": 1
        },
        "primIdVerifyMeth": {
          "description": "Defines the verification method used to verify the id.",
          "type": "string",
          "maxLength": 30
        },
        "stateIssued": {
          "description": "The state that issued the identification item presented by the customer.",
          "type": "string",
          "maxLength": 3,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        }
      }
    },
    "CreateRmTrustCapacityRequest": {
      "description": "Standard Request Information",
      "type": "object",
      "required": [
        "lastName",
        "rimType"
      ],
      "properties": {
        "capacity": {
          "description": "Defines the trust's role as Settlor/Trustor/Grantor, Revoker, Modifier, Trustee, and Original Trustee",
          "maxLength": 250,
          "type": "string"
        },
        "firstName": {
          "description": "Defines the first name of the Trust",
          "maxLength": 40,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "lastName": {
          "description": "Defines the last name of the Trust",
          "maxLength": 40,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "middleInitial": {
          "description": "Defines the middle initial of the Trust",
          "maxLength": 2,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "rimType": {
          "description": "Defines the type of customer/member as Personal or NonPersonal",
          "maxLength": 15,
          "type": "string"
        }
      }
    },
    "CreateRmTrustCapacityResponse": {
      "description": "Standard Response Information",
      "type": "object",
      "properties": {
        "messages": {
          "description": "List of messages occurred while processing the request",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MessageInfo"
          }
        },
        "referenceNo": {
          "description": "Reference Number of the request. If no reference number is passed in the request the reference number is generated by the system.",
          "maxLength": 20,
          "type": "string"
        },
        "responseInfo": {
          "$ref": "#/definitions/ResponseInfo"
        },
        "result": {
          "$ref": "#/definitions/CreateRmTrustCapacityResult"
        },
        "statusCode": {
          "format": "int32",
          "description": "HTTP Status Code",
          "type": "integer"
        }
      }
    },
    "CreateRmTrustCapacityResult": {
      "description": "The result data for the request.",
      "type": "object",
      "properties": {
        "capacity": {
          "description": "Defines the trust's role as Settlor/Trustor/Grantor, Revoker, Modifier, Trustee, and Original Trustee",
          "type": "string",
          "maxLength": 250
        },
        "createDt": {
          "description": "The date this record was created in the system \n (Example : 2022-11-23T06:14:10  [Format : yyyy-MM-ddThh:mm:ss]).",
          "maxLength": 19,
          "type": "string",
          "example": "2022-11-23T06:14:10"
        },
        "emplId": {
          "format": "int32",
          "description": "Id of the Employee who created this record",
          "type": "integer"
        },
        "encId": {
          "description": "Unique record identifier.",
          "type": "string",
          "maxLength": 10000
        },
        "firstName": {
          "description": "Defines the first name of the Trust",
          "type": "string",
          "maxLength": 40,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "lastName": {
          "description": "Defines the last name of the Trust",
          "type": "string",
          "maxLength": 40,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "middleInitial": {
          "description": "Defines the middle initial of the Trust",
          "type": "string",
          "maxLength": 2,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "ptid": {
          "format": "double",
          "description": "Row Identifier",
          "type": "number"
        },
        "rimNo": {
          "format": "int32",
          "description": "Customer/Member Number",
          "type": "integer",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "rimType": {
          "description": "Defines the type of customer/member as Personal or NonPersonal",
          "type": "string",
          "maxLength": 15
        },
        "rowVersion": {
          "format": "int32",
          "description": "Row version of the record",
          "type": "integer"
        }
      }
    },
    "Customer": {
      "title": "Customer",
      "type": "object",
      "description": "Passes values for the tags to create a new customer/member.",
      "properties": {
        "rmAcct": {
          "$ref": "#/definitions/RmAcctTpiRequest"
        },
        "rmAddress": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RmAddressTpiRequest"
          }
        },
        "rmIdent": {
          "$ref": "#/definitions/RmIdentTpiRequest"
        },
        "rmNonpersonalInfo": {
          "$ref": "#/definitions/RmNonpersonalInfoTpiRequest"
        },
        "rmPersonalInfo": {
          "$ref": "#/definitions/RmPersonalInfoTpiRequest"
        },
        "rmRel": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RmRelTpiRequest"
          }
        },
        "rmUserDefVal": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RmUserDefValTpiRequest"
          }
        }
      }
    },
    "RmAcctTpiResponsePTpiResponse": {
      "type": "object",
      "title": "RmAcctTpiResponsePTpiResponse",
      "description": "Standard Response Information",
      "properties": {
        "messages": {
          "description": "List of messages occurred while processing the request",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MessageInfo"
          }
        },
        "referenceNo": {
          "description": "Reference Number of the request.  If no reference number is passed in the request the reference number is generated by the system.",
          "maxLength": 20,
          "type": "string"
        },
        "responseInfo": {
          "$ref": "#/definitions/ResponseInfo"
        },
        "statusCode": {
          "format": "int32",
          "description": "HTTP Status Code",
          "type": "integer"
        },
        "tpiResult": {
          "$ref": "#/definitions/RmAcctTpiResponseResultData"
        }
      }
    },
    "RmAcctTpiRequest": {
      "required": [
        "branchNo",
        "classCode",
        "lastName",
        "rimType",
        "sex",
        "status",
        "tinFormat"
      ],
      "type": "object",
      "title": "RmAcctTpiRequest",
      "description": "Customer/Member RIM account creation request.",
      "properties": {
        "activeMilitaryDt": {
          "format": "date",
          "description": "This field defines the date on which  active military duty was verified.",
          "type": "string"
        },
        "backupReason": {
          "description": "Defines the reason that the RIM account is subject to backup withholding.<br>Value: Uncertified TIN, Cust/Mbr Request, 1st B Notice, 2nd B Notice, Expired Exempt",
          "maxLength": 12,
          "type": "string"
        },
        "backupStartDt": {
          "format": "date",
          "description": "Defines the date the backup withholding started.",
          "type": "string"
        },
        "backupWh": {
          "description": "Indicates if the RIM account is subject to backup withholding.<br><br>Y - Yes<br>N - No (TIN is Certified)<br>P - Pending (TIN is uncertified)",
          "maxLength": 1,
          "type": "string"
        },
        "birthDt": {
          "format": "date",
          "description": "Defines the date of birth of the RIM account owner.",
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "bnotice1Dt": {
          "format": "date",
          "description": "Defines the date on which the 1st B notice was sent to the customer.",
          "type": "string"
        },
        "bnotice2Dt": {
          "format": "date",
          "description": "Defines the date on which the 2nd B notice was sent to the customer.",
          "type": "string"
        },
        "branchNo": {
          "format": "int32",
          "description": "Indicates the servicing branch number for the RIM account.",
          "type": "integer"
        },
        "bsaRiskCode": {
          "format": "int32",
          "description": "A user-defined risk code associated to this customer for purposes of Bank Secrecy Act monitoring.",
          "type": "integer"
        },
        "bsaSourceFundsId": {
          "format": "int32",
          "description": "The unique identifier that points to the source of funds used by a customer's RIM and the related accounts.",
          "type": "integer"
        },
        "cashDepositVolume": {
          "format": "double",
          "description": "Cash Deposit Volume",
          "type": "number"
        },
        "cashWithdrawalVolume": {
          "format": "double",
          "description": "Cash Withdrawal Volume",
          "type": "number"
        },
        "certStatusChgDt": {
          "format": "date",
          "description": "Defines the date of the last certification change.",
          "type": "string"
        },
        "cipException": {
          "description": "C I P Exception",
          "maxLength": 125,
          "type": "string"
        },
        "cityOfBirth": {
          "description": "Defines the city of birth for this RIM account.",
          "maxLength": 25,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "classCode": {
          "format": "int32",
          "description": "Defines the class code for the customer.",
          "type": "integer"
        },
        "confidential": {
          "description": "Indicates whether the customer/member is marked as Confidential.",
          "maxLength": 1,
          "type": "string"
        },
        "consumerPrivacy": {
          "description": "Indicates the default consumer privacy setting for a customer/member account.",
          "maxLength": 7,
          "type": "string"
        },
        "corpResDt": {
          "format": "date",
          "description": "This field defines the date on which a meeting of the members or authorized signatories of the Business Entity held a meeting to adopt the resolution to open an account with the financial institution.",
          "type": "string"
        },
        "creditScore1": {
          "format": "int32",
          "description": "Defines the credit score from the first credit reporting agency.",
          "type": "integer",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "creditScore2": {
          "format": "int32",
          "description": "Defines the credit score from the second credit reporting agency.",
          "type": "integer",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "creditScore3": {
          "format": "int32",
          "description": "Defines the credit score from the third credit reporting agency.",
          "type": "integer",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "crRpt1Dt": {
          "format": "date",
          "description": "Defines the credit report date for the first credit score.",
          "type": "string"
        },
        "crRpt2Dt": {
          "format": "date",
          "description": "Defines the credit report date for the second credit score.",
          "type": "string"
        },
        "crRpt3Dt": {
          "format": "date",
          "description": "Defines the credit report date for the third credit score.",
          "type": "string"
        },
        "ct1AddressLine1": {
          "description": "Defines the first address line for the contact person 1.",
          "maxLength": 40,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "ct1AddressLine2": {
          "description": "Defines the second address line for the contact person 1.",
          "maxLength": 40,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "ct1AddressLine3": {
          "description": "Defines the third address line for the contact person 1.",
          "maxLength": 40,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "ct1City": {
          "description": "Defines the city address for the contact person 1.",
          "maxLength": 25,
          "type": "string"
        },
        "ct1CountryCode": {
          "description": "Defines the country code for the contact person 1.",
          "maxLength": 4,
          "type": "string"
        },
        "ct1FirstName": {
          "description": "Defines the first name of the contact person 1.",
          "maxLength": 40,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "ct1International": {
          "description": "Indicates whether the contact person 1 address format is international or US.",
          "maxLength": 1,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "ct1LastName": {
          "description": "Defines the last name of the contact person 1.",
          "maxLength": 40,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "ct1MiddleInitial": {
          "description": "Defines the middle initial of the contact person 1.",
          "maxLength": 2,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "ct1Phone1": {
          "description": "Defines the home phone number for the contact person 1.",
          "maxLength": 20,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "ct1Phone1DefFmt": {
          "description": "Indicates whether the contact person 1 phone1 info is formatted or not.",
          "maxLength": 1,
          "type": "string"
        },
        "ct1Phone1Ext": {
          "description": "Displays the extension number, if available.",
          "maxLength": 6,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "ct1Phone2": {
          "description": "Defines the work phone number for the contact person 1.",
          "maxLength": 20,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "ct1Phone2DefFmt": {
          "description": "Indicates whether the contact person 1 phone2 info is formatted or not.",
          "maxLength": 1,
          "type": "string"
        },
        "ct1Phone2Ext": {
          "description": "Defines the work phone extension number for the contact person 1.",
          "maxLength": 6,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "ct1RelId": {
          "format": "int32",
          "description": "Defines the relationship of contact person 1 to owner of the RIM account.",
          "type": "integer"
        },
        "ct1State": {
          "description": "Defines the state code for the contact person 1.",
          "maxLength": 5,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "ct1Suffix": {
          "description": "Defines the suffix that is attached to the contact person 1.",
          "maxLength": 3,
          "type": "string"
        },
        "ct1TitleId": {
          "format": "int32",
          "description": "Defines the title of the contact person 1.",
          "type": "integer",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "ct1Zip": {
          "description": "Defines the zip code for the contact person 1.",
          "maxLength": 10,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "ct2AddressLine1": {
          "description": "Defines the first address line for the contact person 2.",
          "maxLength": 40,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "ct2AddressLine2": {
          "description": "Defines the second address line for the contact person 2.",
          "maxLength": 40,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "ct2AddressLine3": {
          "description": "Defines the third address line for the contact person 2.",
          "maxLength": 40,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "ct2City": {
          "description": "Defines the city address for the contact person 2.",
          "maxLength": 25,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "ct2CountryCode": {
          "description": "Defines the country code for the contact person 2.",
          "maxLength": 4,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "ct2FirstName": {
          "description": "Defines the first name of the contact person 2.",
          "maxLength": 40,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "ct2International": {
          "description": "Indicates whether the contact person 2 address format is international or US.",
          "maxLength": 1,
          "type": "string"
        },
        "ct2LastName": {
          "description": "Defines the last name of the contact person 2.",
          "maxLength": 40,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "ct2MiddleInitial": {
          "description": "Defines the middle initial of the contact person 2.",
          "maxLength": 2,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "ct2Phone1": {
          "description": "Defines the home phone number for the contact person 2.",
          "maxLength": 20,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "ct2Phone1DefFmt": {
          "description": "Indicates whether the contact person 2 phone1 info is formatted or not.",
          "maxLength": 1,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "ct2Phone1Ext": {
          "description": "Displays the extension number, if available.",
          "maxLength": 6,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "ct2Phone2": {
          "description": "Defines the work phone number for the contact person 2.",
          "maxLength": 20,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "ct2Phone2DefFmt": {
          "description": "Indicates whether the contact person 2 phone2 info is formatted or not.",
          "maxLength": 1,
          "type": "string"
        },
        "ct2Phone2Ext": {
          "description": "Defines the work phone extension number for the contact person 2.",
          "maxLength": 6,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "ct2RelId": {
          "format": "int32",
          "description": "Defines the relationship of contact person 2 to owner of the RIM account.",
          "type": "integer"
        },
        "ct2State": {
          "description": "Defines the state code for the contact person 2.",
          "maxLength": 5,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "ct2Suffix": {
          "description": "Defines the suffix that is attached to the contact person 2.",
          "maxLength": 3,
          "type": "string"
        },
        "ct2TitleId": {
          "format": "int32",
          "description": "Defines the title of the contact person 2.",
          "type": "integer"
        },
        "ct2Zip": {
          "description": "Defines the zip code for the contact person 2.",
          "maxLength": 10,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "custClassNoReclass": {
          "description": "Indicates whether the customer/member class will be automatically reclassified once they meet the requirements of the predetermined criteria.",
          "maxLength": 1,
          "type": "string"
        },
        "customerValue": {
          "description": "Type the Customers value segment.  The value segment is a score given to a member for cross sell purposes.",
          "maxLength": 30,
          "type": "string"
        },
        "deceasedDt": {
          "format": "date",
          "description": "Defines the date on which the customer died.",
          "type": "string"
        },
        "domesticIncomingWireAmt": {
          "format": "double",
          "description": "Defines the expected amount of domestic incoming wires in a period.",
          "type": "number"
        },
        "domesticOutgoingWireAmt": {
          "format": "double",
          "description": "Defines the expected amount of domestic outgoing wires in a period.",
          "type": "number"
        },
        "email1": {
          "description": "Defines the customers home email address.",
          "maxLength": 255,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "email2": {
          "description": "Defines the customers work email address.",
          "maxLength": 255,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "excludeEarlyAchCr": {
          "description": "Exclude Early Ach Cr",
          "maxLength": 1,
          "type": "string"
        },
        "excludeRimRp": {
          "description": "This indicates if the Customer will be excluded from Relationship Pricing.",
          "maxLength": 1,
          "type": "string"
        },
        "exemptExpiryDt": {
          "format": "date",
          "description": "Defines the expiration date for an exemption.",
          "type": "string"
        },
        "exemptReason": {
          "description": "Indicates the reason for exemption of the RIM account.<br><br>Non Resident IRS Exempt",
          "maxLength": 12,
          "type": "string"
        },
        "firstName": {
          "description": "Defines the first name.",
          "maxLength": 40,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "foreignIncomingWireAmt": {
          "format": "double",
          "description": "Defines the expected amount of foreign incoming wires in a period.",
          "type": "number"
        },
        "foreignOutgoingWireAmt": {
          "format": "double",
          "description": "Defines the expected amount of foreign outgoing wires in a period.",
          "type": "number"
        },
        "inactiveMilitaryDt": {
          "format": "date",
          "description": "Date on which the military Status was updated to Inactive.",
          "type": "string"
        },
        "incomingCrACHAmt": {
          "format": "double",
          "description": "Defines the expected amount of incoming credit ACH transactions in a period.",
          "type": "number"
        },
        "incomingDrACHAmt": {
          "format": "double",
          "description": "Defines the expected amount of incoming debit ACH transactions in a period.",
          "type": "number"
        },
        "indicatorDt": {
          "format": "date",
          "description": "The date the ID verification indicator was set on the account.",
          "type": "string"
        },
        "indicatorId": {
          "format": "int32",
          "description": "The ID verification indicator on the customer's RIM record. This will indicate the status of the ID verification processed on the customer.",
          "type": "integer"
        },
        "lastName": {
          "description": "Defines the last name.",
          "maxLength": 40,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "legalEvidenceSup": {
          "description": "Indicates if the member has supplied legal evidence of status",
          "maxLength": 1,
          "type": "string"
        },
        "mailCode": {
          "description": "Indicates the mail code Id for this customer.",
          "maxLength": 1,
          "type": "string"
        },
        "maxOdLimit": {
          "format": "double",
          "description": "Indicates the maximum negative balance amount that can be allowed for all OD limits accounts belonging to this customer.",
          "type": "number"
        },
        "methodId": {
          "format": "int32",
          "description": "Defines the identification number for the BSA opening method.",
          "type": "integer"
        },
        "middleInitial": {
          "description": "Defines the middle initial of the customer/member.",
          "maxLength": 2,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "militaryStatus": {
          "description": "Indicates whether the military status, such as Active or Inactive, for a customer/member.",
          "maxLength": 15,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "minor": {
          "description": "This indicates whether or not the rim belongs to a minor based on the age at the rim class.  In order to store whether this is a Y is based on taking Birth_dt - from todays date to see if it is equal to or less than minor age.",
          "maxLength": 1,
          "type": "string"
        },
        "motherMaidenName": {
          "description": "Defines the RIM account's mother's maiden name.",
          "maxLength": 40,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "naicsCode": {
          "description": "A code used to classify businesses. NAICS is an abbreviation for North American Industry Classification System..",
          "maxLength": 6,
          "type": "string"
        },
        "noDomesticIncomingWire": {
          "format": "int32",
          "description": "Defines the expected number of domestic incoming wires in a period.",
          "type": "integer"
        },
        "noDomesticOutgoingWire": {
          "format": "int32",
          "description": "Defines the expected number of domestic outgoing wires in a period.",
          "type": "integer"
        },
        "noForeignIncomingWire": {
          "format": "int32",
          "description": "Defines the expected number of foreign incoming wires in a period.",
          "type": "integer"
        },
        "noForeignOutgoingWire": {
          "format": "int32",
          "description": "Defines the expected number of foreign outgoing wires in a period.",
          "type": "integer"
        },
        "noIncomingCrACH": {
          "format": "int32",
          "description": "Defines the expected number of incoming credit ACH transactions in a period.",
          "type": "integer"
        },
        "noIncomingDrACH": {
          "format": "int32",
          "description": "Defines the expected number of incoming debit ACH transactions in a period.",
          "type": "integer"
        },
        "noOutgoingCrACH": {
          "format": "int32",
          "description": "Defines the expected number of outgoing credit ACH transactions in a period.",
          "type": "integer"
        },
        "noOutgoingDrACH": {
          "format": "int32",
          "description": "Defines the expected number of outgoing debit ACH transactions in a period.",
          "type": "integer"
        },
        "noticeDelMethod": {
          "description": "Controls the notice delivery option for this customer.",
          "maxLength": 1,
          "type": "string"
        },
        "noticeMailCode": {
          "description": "Controls the mail code for notices.",
          "maxLength": 1,
          "type": "string"
        },
        "noTransitItem": {
          "format": "int32",
          "description": "Defines the expected number of transit items in a period.",
          "type": "integer"
        },
        "odlimitNoRequal": {
          "description": "Indicates whether primary accounts for this customer within an OD limit processing class should not be re-qualified.",
          "maxLength": 1,
          "type": "string"
        },
        "odlimitNoSuspend": {
          "description": "Indicates whether OD limit processing accounts belonging to this customer where the customer is primary should not be suspended when an account is negative and/or a loan is delinquent.",
          "maxLength": 1,
          "type": "string"
        },
        "ofacDoNotVerifyUntil": {
          "format": "date",
          "description": "Defines the date until which an SDN search will be conducted.",
          "type": "string"
        },
        "ofacFirstVerifyDt": {
          "format": "date",
          "description": "Defines the date that an SDN list search is conducted for the first time.",
          "type": "string"
        },
        "ofacInvestigated": {
          "description": "Defines whether the possible SDN list match is investigated.",
          "maxLength": 1,
          "type": "string"
        },
        "ofacInvestResult": {
          "description": "Includes comments regarding a possible SDN match investigation.",
          "maxLength": 250,
          "type": "string"
        },
        "openDt": {
          "format": "date",
          "description": "Defines the date the customer/member joined the institution.",
          "type": "string"
        },
        "optOutAutoOdp": {
          "description": "Indicates whether the customer has opted out of the automatic set up of overdraft protection accounts when creating a new account.  This option is only available when AD_DP_CONTROL.allow_auto_odp is = Y.",
          "maxLength": 1,
          "type": "string"
        },
        "optOutOdLimit": {
          "description": "Indicates whether a customer has elected to opt out of OD limit processing for all primary deposit accounts.",
          "maxLength": 1,
          "type": "string"
        },
        "outgoingCrACHAmt": {
          "format": "double",
          "description": "Defines the expected amount of outgoing credit ACH transactions in a period.",
          "type": "number"
        },
        "outgoingDrACHAmt": {
          "format": "double",
          "description": "Defines the expected amount of outgoing debit ACH transactions in a period.",
          "type": "number"
        },
        "preferredName": {
          "description": "Defines the preferred name of the customer, usually a nickname.",
          "maxLength": 50,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "purchased": {
          "description": "Indicates that investors purchasing loans from the RIM account are purchased form the originator of the loan.",
          "maxLength": 1,
          "type": "string"
        },
        "receiptDelMethod": {
          "description": "Controls the receipt delivery preference for this customer",
          "maxLength": 15,
          "type": "string"
        },
        "regCcCode": {
          "description": "Indicates the Regulation CC code that controls the assignment of float for deposits made to deposit accounts for  primary customer.",
          "maxLength": 1,
          "type": "string"
        },
        "regOCode": {
          "description": "Indicates if the customer is also an officer, director, or shareholder of the bank, this is used to track insider loans on the Regulation ) Report (RRQ200)<br><br>Executive Officer - executive officer of the bank<br>Director - member of the board of directors of the bank<br>Principal Shareholder - principal shareholder (at least 10 percent) in the bank.",
          "maxLength": 21,
          "type": "string"
        },
        "restrictId": {
          "format": "int32",
          "description": "Defines the restriction level that applies to the customer.",
          "type": "integer"
        },
        "retainDebtHistory": {
          "description": "Indicates if debit history for the customer is to be retained.",
          "maxLength": 1,
          "type": "string"
        },
        "revenueGreater1m": {
          "description": "Defines whether the customer's gross annual income is greater than $1million.",
          "maxLength": 1,
          "type": "string"
        },
        "rimNo": {
          "format": "int32",
          "description": "Indicates the unique identification number for a RIM record.",
          "type": "integer",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "rimType": {
          "description": "Defines the RIM account type.  <br><br>Personal - defined by a SSN (Social Security Number)<br>NonPersonal - defined by a TIN (Tax Identification Number)",
          "maxLength": 11,
          "type": "string"
        },
        "riskCode": {
          "format": "int32",
          "description": "Defines the risk code assigned to the RIM account.",
          "type": "integer"
        },
        "riskReason": {
          "description": "Defines the reason why the risk code has been assigned to the RIM account.",
          "maxLength": 254,
          "type": "string"
        },
        "rptAgency1": {
          "description": "Defines the reporting agency for the first credit score.",
          "maxLength": 15,
          "type": "string"
        },
        "rptAgency2": {
          "description": "Defines the reporting agency for the second credit score.",
          "maxLength": 15,
          "type": "string"
        },
        "rptAgency3": {
          "description": "Defines the reporting agency for the third credit score.",
          "maxLength": 15,
          "type": "string"
        },
        "rsmId": {
          "format": "int32",
          "description": "Indicates the employee at the bank servicing the account.",
          "type": "integer"
        },
        "rsmId2": {
          "format": "int32",
          "description": "Defines the second RSM who is responsible for the customer.",
          "type": "integer"
        },
        "rsmId3": {
          "format": "int32",
          "description": "Defines the third RSM who is responsible for the customer.",
          "type": "integer"
        },
        "sendEmail": {
          "description": "Indicates if the customer should be sent email.",
          "maxLength": 1,
          "type": "string"
        },
        "sendEmail2": {
          "description": "Flag indicating whether email is to be sent to the RIM customer's secondary EMAIL address (Email_2)",
          "maxLength": 1,
          "type": "string"
        },
        "sendStmtAlert": {
          "description": "Indicates that the customer has selected to receive statement alert emails to their primary email address.",
          "maxLength": 1,
          "type": "string"
        },
        "sex": {
          "description": "Indicates the gender of the owner of the RIM account.<br><br>M - Male<br>F - Female<br>U - Unknown",
          "maxLength": 1,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "status": {
          "description": "Defines the status of the row.",
          "maxLength": 14,
          "type": "string"
        },
        "stmtDelMethod": {
          "description": "Defines the statement delivery method for the customer.  Print, Email, or Both are the options.",
          "maxLength": 5,
          "type": "string"
        },
        "suffix": {
          "description": "Defines the suffix that is attached to the owner of of the RIM account.",
          "maxLength": 3,
          "type": "string"
        },
        "tin": {
          "description": "Defines the numerical value of the SSN or TIN number",
          "maxLength": 15,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "tinCert": {
          "description": "Indicates whether the customers's RIM has been Certified.",
          "maxLength": 1,
          "type": "string"
        },
        "tinCertDt": {
          "format": "date",
          "description": "Defines the date the RIM account TIN was certified.",
          "type": "string"
        },
        "tinFormat": {
          "description": "Indicates the type of tax certification presented by the customer.<br><br>S - SSN<br>E - EIN<br>A - ATN<br>N - Nonresident<br>X - Tax Exempt",
          "maxLength": 1,
          "type": "string"
        },
        "titleId": {
          "format": "int32",
          "description": "Defines the title of the RIM account.",
          "type": "integer"
        },
        "type": {
          "description": "Credit Union Member Type",
          "maxLength": 20,
          "type": "string"
        },
        "verifySource": {
          "description": "Defines the source used to verify active duty service. Not applicable when no Military Status is provided.",
          "maxLength": 30,
          "type": "string"
        },
        "w8Cert": {
          "description": "Indicates whether the foreign customer has presented a W-8 certification. W-8 certification is intended for Foreign Permanent Residents in the US.",
          "maxLength": 1,
          "type": "string"
        },
        "w8CertDt": {
          "format": "date",
          "description": "Defines the date that the W8 certification was signed by the customer/member.",
          "type": "string"
        },
        "w8CountryCode": {
          "description": "Defines the country code of the W8 certification.",
          "maxLength": 12,
          "type": "string"
        },
        "w8Exception": {
          "description": "Provides a reason why a W-8 certificate is not required for the customer/member.",
          "maxLength": 125,
          "type": "string"
        },
        "w8ForeignTin": {
          "description": "Defines a foreign tax id number for the customer/member.",
          "maxLength": 22,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "w8RecipientCode": {
          "description": "Defines the type of recipient who signed the W8 Certification Value: 01 - Individual, 02 - Corporation, 03 - Partnership, 04 - Fiduciary (trust), 05 - Nominee, 06 - Govt. or Int'l Org, 07 - Tax exempt Org, 08 - Private Foundation, 09 - Artist or Athlete, 10 - Fiduciary (estate), 11 - Fiduciary (other), 19 - Other, 20 - Unknown, Null - Not applicable",
          "maxLength": 2,
          "type": "string"
        },
        "whStatusChgDt": {
          "format": "date",
          "description": "Defines the date of the last withholding status change.",
          "type": "string"
        }
      }
    },
    "RmAddressTpiRequest": {
      "title": "RmAddressTpiRequest",
      "description": "Customer/Member addresses creation request.",
      "required": [
        "addressLine1",
        "addrId",
        "addrOfResidence",
        "addrTypeId",
        "city",
        "name1",
        "state",
        "zip"
      ],
      "type": "object",
      "properties": {
        "addressBasis": {
          "description": "Determines how the mailing address is determined. Value: Recurring - Address in effect from one date to another annually, NonRecurring - Address in effect for a one-time date range, Permanent - Address always in effect",
          "maxLength": 12,
          "type": "string"
        },
        "addressLine1": {
          "description": "Defines the first address line for the RIM account.",
          "maxLength": 40,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "addressLine2": {
          "description": "Defines the second address line for the RIM account.",
          "maxLength": 40,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "addressLine3": {
          "description": "Defines the third address line for the RIM account.",
          "maxLength": 40,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "addrId": {
          "format": "int32",
          "description": "Defines the unique customer address identifier.",
          "type": "integer"
        },
        "addrOfResidence": {
          "description": "This flag is used to determine if the address is the physical address for the customer.",
          "maxLength": 1,
          "type": "string"
        },
        "addrTypeId": {
          "format": "int32",
          "description": "Defines the type of address that this account is attached to.  <br><br>1 - Primary address<br>10 - Alternate primary address",
          "type": "integer"
        },
        "cbAddrIndicator": {
          "description": "Defines the status of the address as it pertains to credit bureau reporting.bi",
          "maxLength": 6,
          "type": "string"
        },
        "city": {
          "description": "Defines the city address for the RIM account.",
          "maxLength": 25,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "countryCode": {
          "description": "Defines the country code for the RIM account.",
          "maxLength": 4,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "endDt": {
          "format": "date",
          "description": "Defines the last date of an address that is not a permanent address.",
          "type": "string"
        },
        "faxDefFormat": {
          "description": "Indicates whether the fax number is a local number.",
          "maxLength": 1,
          "type": "string"
        },
        "faxPhone": {
          "description": "Defines the fax machine phone number associated with the address record.",
          "maxLength": 20,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "faxPhoneContactConsent": {
          "description": "Indicates whether a customer/member has provided consent to contact them through their fax number.",
          "maxLength": 1,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "faxPhoneExt": {
          "description": "Defines the fax machine phone number extension, if available.",
          "maxLength": 6,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "faxPhoneMobileInd": {
          "description": "Indicates this number is a mobile number.",
          "maxLength": 1,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "international": {
          "description": "Indicates whether the customer's address is an international address.",
          "maxLength": 1,
          "type": "string"
        },
        "mobile2DefFormat": {
          "description": "Indicates whether the phone number is a local number.",
          "maxLength": 1,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "mobile2Phone": {
          "description": "Defines the secondary phone number for a customer/member.",
          "maxLength": 20,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "mobile2PhoneContactConsent": {
          "description": "Indicates whether the customer/member has provided consent to be contacted through this number.",
          "maxLength": 1,
          "type": "string"
        },
        "mobile2PhoneEveningDay": {
          "description": "Notifies the EFT processor when the phone number can be dialed. <br>Value: Day, Evening, Both",
          "maxLength": 7,
          "type": "string"
        },
        "mobile2PhoneExt": {
          "description": "Defines the extension, if applicable, for the secondary phone number.",
          "maxLength": 6,
          "type": "string"
        },
        "mobile2PhoneMobileInd": {
          "description": "Indicates this number is a mobile number.",
          "maxLength": 1,
          "type": "string"
        },
        "mobileDefFormat": {
          "description": "Indicates whether the phone number is a local number.",
          "maxLength": 1,
          "type": "string"
        },
        "mobilePhone": {
          "description": "Displays the primary phone number.",
          "maxLength": 20,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "mobilePhoneContactConsent": {
          "description": "Indicates whether the customer/member has provided consent to be contacted through this number.",
          "maxLength": 1,
          "type": "string"
        },
        "mobilePhoneEveningDay": {
          "description": "Notifies the EFT processor when the phone number can be dialed. <br>Value: Day, Evening, Both",
          "maxLength": 7,
          "type": "string"
        },
        "mobilePhoneExt": {
          "description": "Defines the extension, if appliable, for the primary phone number.",
          "maxLength": 6,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "mobilePhoneMobileInd": {
          "description": "Indicates this number is a mobile number.",
          "maxLength": 1,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "name1": {
          "description": "Defines the first name of the customer  for the RIM account.",
          "maxLength": 40,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "name2": {
          "description": "Defines the last name of the customer  for the RIM account.",
          "maxLength": 40,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "pagerDefFormat": {
          "description": "Indicates whether the phone number is a local number.",
          "maxLength": 1,
          "type": "string"
        },
        "pagerNumber": {
          "description": "RIM customer's page number",
          "maxLength": 20,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "pagerPinCode": {
          "description": "RIM customer's page PIN access code",
          "maxLength": 10,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "phone1": {
          "description": "Defines the home phone number for the RIM account.",
          "maxLength": 20,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "phone1ContactConsent": {
          "description": "This field defines the Mobile 1 phone number of the Customer/Member.",
          "maxLength": 1,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "phone1DefFormat": {
          "description": "Indicates whether the phone number is a local number.",
          "maxLength": 1,
          "type": "string"
        },
        "phone1EveningDay": {
          "description": "Notifies the EFT processor when the phone number can be dialed. <br>Value: Day, Evening, Both",
          "maxLength": 7,
          "type": "string"
        },
        "phone1Ext": {
          "description": "Displays the extension number, if available.",
          "maxLength": 6,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "phone1MobileInd": {
          "description": "Indicates this number is a mobile number.",
          "maxLength": 1,
          "type": "string"
        },
        "phone2": {
          "description": "Defines the work phone number for the RIM account.",
          "maxLength": 20,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "phone2ContactConsent": {
          "description": "This field defines the Mobile 2 phone number of the Customer/Member.",
          "maxLength": 1,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "phone2DefFormat": {
          "description": "Indicates whether the phone number is a local number.",
          "maxLength": 1,
          "type": "string"
        },
        "phone2EveningDay": {
          "description": "Notifies the EFT processor when the phone number can be dialed. <br>Value: Day, Evening, Both",
          "maxLength": 7,
          "type": "string"
        },
        "phone2Ext": {
          "description": "Defines the work phone extension  number for the RIM account.",
          "maxLength": 6,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "phone2MobileInd": {
          "description": "Indicates this number is a mobile number.",
          "maxLength": 1,
          "type": "string"
        },
        "rimNo": {
          "format": "int32",
          "description": "Indicates the customer this account is associated to.",
          "type": "integer",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "startDt": {
          "format": "date",
          "description": "Defines the start date of an address that is not a permanent address.",
          "type": "string"
        },
        "state": {
          "description": "Defines the state code for the RIM account.",
          "maxLength": 5,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "zip": {
          "description": "Defines the zip code for the RIM account.",
          "maxLength": 10,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        }
      }
    },
    "RmIdentTpiRequest": {
      "required": [
        "identId"
      ],
      "type": "object",
      "title": "RmIdentTpiRequest",
      "description": "Customer/Member identification creation request.",
      "properties": {
        "expiryDt": {
          "format": "date",
          "description": "The date the identification is scheduled to expire.",
          "type": "string"
        },
        "identId": {
          "format": "int32",
          "description": "The type of identification presented by the customer.",
          "type": "integer"
        },
        "identValue": {
          "description": "The information used by the issuer to uniquely identify the customer on the identification item.",
          "maxLength": 40,
          "type": "string"
        },
        "issuedCountry": {
          "description": "The country that issued the identification item presented by the customer.If the country is the United States, Canada or Mexico an issued state is also required.",
          "maxLength": 2,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "issuedDt": {
          "format": "date",
          "description": "The date the identification was issued.",
          "type": "string"
        },
        "issuedState": {
          "description": "The state that issued the identification item presented by the customer.",
          "maxLength": 3,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "primaryId": {
          "description": "The primary identification for the customer's RIM.  The primary ID is always displayed and edited on the RIM edit window.",
          "maxLength": 1,
          "type": "string"
        },
        "primIdVerifyMeth": {
          "description": "Defines the verification method used to verify the id.",
          "maxLength": 30,
          "type": "string"
        },
        "rimNo": {
          "format": "int32",
          "description": "The unique identifier of customer",
          "type": "integer",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        }
      }
    },
    "RmNonpersonalInfoTpiRequest": {
      "type": "object",
      "title": "RmNonpersonalInfoTpiRequest",
      "description": "Customer/Member non personal information creation request",
      "properties": {
        "annualCashSaleAmt": {
          "format": "double",
          "description": "Indicates the approximate amount of annual cash sales for the business.",
          "type": "number"
        },
        "autoAdvIndebtRevDt": {
          "description": "Indicates whether the review date should automatically be advanced by the system.",
          "maxLength": 30,
          "type": "string"
        },
        "businessTypeId": {
          "format": "int32",
          "description": "The type of business as defined by the business when it was legally established.",
          "type": "integer"
        },
        "finAddlInfo": {
          "description": "This is a user-defined field for any additional information the institution requires for a business' financial information",
          "maxLength": 120,
          "type": "string"
        },
        "finStmtExpiryDt": {
          "format": "date",
          "description": "Represents the date on which the current financial statement information expires.  Based on the number of lead days retained at the RIM class, the system will use this date in order to notify the customer of the need to send updated financial statement information to the Phoenix System user.",
          "type": "string"
        },
        "finStmtPeriod": {
          "description": "Indicates whether the time period used to calculate the next financial statement expiration date is expressed in days, weeks, months or years.",
          "maxLength": 8,
          "type": "string"
        },
        "finStmtReqd": {
          "description": "Indicates whether or not an updated financial statement must be provided by the customer on a periodic basis.",
          "maxLength": 1,
          "type": "string"
        },
        "finStmtTrm": {
          "format": "int32",
          "description": "Represents the number of days, weeks, months or years used to calculate the next financial statement expiration date.",
          "type": "integer"
        },
        "fiscalYrendMonth": {
          "description": "Indicates the month of the fiscal year end used for the business.",
          "maxLength": 9,
          "type": "string"
        },
        "indebtLastReviewDt": {
          "format": "date",
          "description": "Date that the last indebtedness review was performed.",
          "type": "string"
        },
        "indebtNextReviewDt": {
          "format": "date",
          "description": "Date that the next indebtedness review is scheduled to occur.",
          "type": "string"
        },
        "indebtPeriod": {
          "description": "Defines how often indebtedness reviews occur.",
          "maxLength": 8,
          "type": "string"
        },
        "indebtTrm": {
          "format": "int32",
          "description": "Defines how often indebtedness reviews occur.",
          "type": "integer"
        },
        "lastFinStmtDt": {
          "format": "date-time",
          "description": "Indicates the date of the last financial statement the business has supplied.",
          "type": "string"
        },
        "legalDocType": {
          "description": "The description of the legal document establishing the business.",
          "maxLength": 40,
          "type": "string"
        },
        "legalStatusSupplied": {
          "description": "Indicates if the customer has presented proof of the legal status of the business.",
          "maxLength": 1,
          "type": "string"
        },
        "mainSupplier": {
          "description": "Indicates the primary supplier used by the business.",
          "maxLength": 40,
          "type": "string"
        },
        "marketType": {
          "description": "Designates the type of markets in which the business conducts its business.",
          "maxLength": 13,
          "type": "string"
        },
        "previousBank": {
          "description": "Indicates the name of the previous bank used by the business.",
          "maxLength": 40,
          "type": "string"
        },
        "primaryMerchandise": {
          "description": "Indicates the primary merchandise sold by the business.",
          "maxLength": 40,
          "type": "string"
        },
        "referencesProvided": {
          "description": "Indicates the type of banking references the business supplied.",
          "maxLength": 40,
          "type": "string"
        },
        "rimNo": {
          "format": "int32",
          "description": "The unique identifier of customer.",
          "type": "integer",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        }
      }
    },
    "RmPersonalInfoTpiRequest": {
      "type": "object",
      "title": "RmPersonalInfoTpiRequest",
      "description": "Customer/Member personal information creation request",
      "properties": {
        "accountant": {
          "description": "Accountant name for the customer/member.",
          "maxLength": 30,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "autoAdvIndebtRevDt": {
          "description": "Indicates whether the review date should automatically be advanced by the system.",
          "maxLength": 30,
          "type": "string"
        },
        "bank1": {
          "description": "Name of another financial instution that the customer/member has a relationship with.",
          "maxLength": 30,
          "type": "string"
        },
        "bank1Acct": {
          "description": "Account information for the external institution this customer/member has a relationship with.",
          "maxLength": 20,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "bank2": {
          "description": "Secondary external financial institution that the customer/member has a relationship with.",
          "maxLength": 30,
          "type": "string"
        },
        "bank2Acct": {
          "description": "Account information for the secondary external financial institution that the customer/member has a relationship with.",
          "maxLength": 20,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "broker": {
          "description": "Name of the broker for the customer/member.",
          "maxLength": 30,
          "type": "string"
        },
        "dependants": {
          "format": "int32",
          "description": "Number of dependents supported by the customer/member.",
          "type": "integer"
        },
        "empl": {
          "description": "Name of the employee that created this record.",
          "maxLength": 40,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "emplAddr": {
          "description": "Full address of the Relationship Manager assigned to this customer/member.",
          "maxLength": 40,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "emplExt": {
          "description": "Phone number extension, if applicable, of the Relationship Manager assigned to this customer/member.",
          "maxLength": 6,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "emplPhone": {
          "description": "Phone number of the Relationship Manager assigned to this customer/member.",
          "maxLength": 20,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "emplPosition": {
          "description": "Job title of the Relationship Manager assigned to this customer/member.",
          "maxLength": 30,
          "type": "string"
        },
        "emplStartDt": {
          "format": "date",
          "description": "This defines the date of which the customer/member started their employment with their current primary employer.",
          "type": "string"
        },
        "finAddlInfo": {
          "description": "This contains free format text - user defined",
          "maxLength": 120,
          "type": "string"
        },
        "finStmtExpiryDt": {
          "format": "date",
          "description": "This indicates the expiration date of the financial statements on hand at the bank.",
          "type": "string"
        },
        "finStmtPeriod": {
          "description": "The period the financial statement covers",
          "maxLength": 8,
          "type": "string"
        },
        "finStmtReqd": {
          "description": "This indicates whether a financial statement is required or not",
          "maxLength": 1,
          "type": "string"
        },
        "finStmtTrm": {
          "format": "int32",
          "description": "The term the financial statement covers",
          "type": "integer"
        },
        "indebtLastReviewDt": {
          "format": "date",
          "description": "Date that the last indebtedness review was performed.",
          "type": "string"
        },
        "indebtNextReviewDt": {
          "format": "date",
          "description": "Date that the next indebtedness review is scheduled to occur.",
          "type": "string"
        },
        "indebtPeriod": {
          "description": "Defines how often indebtedness reviews occur.",
          "maxLength": 8,
          "type": "string"
        },
        "indebtTrm": {
          "format": "int32",
          "description": "Defines how often indebtedness reviews occur.",
          "type": "integer"
        },
        "lastFinStmtDt": {
          "format": "date",
          "description": "This contains the last financial statements received date.",
          "type": "string"
        },
        "lifeIns": {
          "description": "Name of the insurance agent or company for the customer/member.",
          "maxLength": 30,
          "type": "string"
        },
        "maritalStatus": {
          "description": "Marital status of the customer/member.<br>Value: Other, Unmarried, Married, Widowed, Divorced",
          "maxLength": 13,
          "type": "string"
        },
        "occupation": {
          "description": "Defines the customer's current occupation.",
          "maxLength": 30,
          "type": "string"
        },
        "otherIns": {
          "description": "Name of any additional insurance agent or company for the customer/member.",
          "maxLength": 30,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "prevEmpl": {
          "description": "Name of the previously Relationship Manager that was assigned to this customer/member.",
          "maxLength": 40,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "prevEmplAddr": {
          "description": "Full address of the Relationship Manager that was previously assigned to this customer/member.",
          "maxLength": 40,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "prevEmplEndDt": {
          "format": "date",
          "description": "This field defines the date on which the customer/member ended their employment with their previous employer.",
          "type": "string"
        },
        "prevEmplExt": {
          "description": "Phone number extension, if applicable, of the Relationship Manager assigned to this customer/member.",
          "maxLength": 6,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "prevEmplPhone": {
          "description": "Phone number of the Relationship Manager previously assigned to this customer/member.",
          "maxLength": 20,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "prevEmplPosition": {
          "description": "Job title of the Relationship Manager previously assigned to this customer/member.",
          "maxLength": 30,
          "type": "string"
        },
        "prevEmplStartDt": {
          "format": "date",
          "description": "This field defines the date on which the customer/member started their employment with their previous employer.",
          "type": "string"
        },
        "prevOccupation": {
          "description": "Defines the customer's previous occupation.",
          "maxLength": 30,
          "type": "string"
        },
        "raceId": {
          "format": "int32",
          "description": "Unique number that identifies the race or ethnicity classification for a customer/member.",
          "type": "integer",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "residence": {
          "description": "Indicates whether the customer/member rents or owns their home.",
          "maxLength": 5,
          "type": "string"
        },
        "rimNo": {
          "format": "int32",
          "description": "Indicates the customer this account is associated to.",
          "type": "integer",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        }
      }
    },
    "RmRelTpiRequest": {
      "required": [
        "relId",
        "relRelId",
        "relRimNo"
      ],
      "type": "object",
      "title": "RmRelTpiRequest",
      "description": "Customer-to-customer relationships creation request.",
      "properties": {
        "relCombStmt": {
          "description": "Indicates whether the information for a secondary customer/member should be included on the financial statement for this customer/member.",
          "maxLength": 1,
          "type": "string"
        },
        "relExecutive": {
          "description": "Indicates whether the customer/member is an executive officer of the legal entity.",
          "maxLength": 1,
          "type": "string"
        },
        "relId": {
          "format": "int32",
          "description": "Number that identifies the customer/member relationship.",
          "type": "integer"
        },
        "relMgrlControl": {
          "description": "Indicates that the customer/member exercises managerial controls over the legal entity.",
          "maxLength": 1,
          "type": "string"
        },
        "relMgrlTitle": {
          "description": "Managerial title for the reciprocal relationship.",
          "maxLength": 50,
          "type": "string"
        },
        "relOwnPercent": {
          "format": "double",
          "description": "This filed defined the relationship ownership percentage for the Customer/Member with managerial control.",
          "type": "number"
        },
        "relPrintOnForm": {
          "description": "Indicates whether to print this customer/member on the Certificate of beneficial Owner form.",
          "maxLength": 1,
          "type": "string"
        },
        "relRelId": {
          "format": "int32",
          "description": "Number that identifies the relationship type for the reciprocal relationship.",
          "type": "integer"
        },
        "relRimNo": {
          "format": "int32",
          "description": "Indicates the related rim number this record is tied to.",
          "type": "integer",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "rimCombStmt": {
          "description": "Indicates whether the customer/member information should be included on the statement for the related customer/member.",
          "maxLength": 1,
          "type": "string"
        },
        "rimExecutive": {
          "description": "This field defines that the customer/member is an executive officer of the reciprocal relationship.",
          "maxLength": 1,
          "type": "string"
        },
        "rimMgrlControl": {
          "description": "This field defines whether the primary customer/member is the owner or primary decision maker over the reciprocal customer/member which is a legal entity for the purpose of tracking beneficial ownership information.",
          "maxLength": 1,
          "type": "string"
        },
        "rimMgrlTitle": {
          "description": "This field defines the ownership title for the customer/member.",
          "maxLength": 50,
          "type": "string"
        },
        "rimNo": {
          "format": "int32",
          "description": "Indicates the customer this account is associated to.",
          "type": "integer",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "rimOwnPercent": {
          "format": "double",
          "description": "Defines the percentage of ownership the customer/member has in the legal entity.",
          "type": "number"
        },
        "rimPrintOnForm": {
          "description": "This field defines that the customer/member should be listed as a beneficial owner on the Certification of Beneficial Owner(s) (COBO) form.",
          "maxLength": 1,
          "type": "string"
        }
      }
    },
    "RmUserDefValTpiRequest": {
      "required": [
        "userDefinedId",
        "value"
      ],
      "type": "object",
      "title": "RmUserDefValTpiRequest",
      "description": "Customer/Member user defined value creation request.",
      "properties": {
        "rimNo": {
          "format": "int32",
          "description": "Rim number of the customer to whom this user defined record is attached.",
          "type": "integer",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "userDefinedId": {
          "format": "int32",
          "description": "Unique identification number of the bank level, user defined record to which this record is attached.",
          "type": "integer"
        },
        "value": {
          "description": "Textual description given to the bank level, user defined value record.",
          "maxLength": 40,
          "type": "string"
        }
      }
    },
    "RmAcctTpiResponseResultData": {
      "type": "object",
      "title": "RmAcctTpiResponseResultData",
      "description": "Customer/Member creation response result data.",
      "properties": {
        "object": {
          "type": "string",
          "description": "Result Data",
          "maxLength": 124
        },
        "outputData": {
          "$ref": "#/definitions/RmAcctTpiResponse"
        }
      }
    },
    "RmAcctTpiResponse": {
      "title": "RmAcctTpiResponse",
      "description": "Customer/Member creation response",
      "type": "object",
      "properties": {
        "encId": {
          "description": "Encrypted Identifier used to identify the resource uniquely.",
          "type": "string",
          "maxLength": 10000,
          "readOnly": true
        },
        "rimNo": {
          "format": "int32",
          "description": "The unique identifier of customer",
          "type": "integer",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        }
      }
    },
    "AdRmClsListResponse": {
      "description": "Standard Response Information",
      "type": "object",
      "title": "AdRmClsListResponse",
      "properties": {
        "messages": {
          "description": "List of messages occurred while processing the request",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MessageInfo"
          }
        },
        "pagingInfo": {
          "$ref": "#/definitions/PagingInfo"
        },
        "referenceNo": {
          "description": "Reference Number of the request. If no reference number is passed in the request the reference number is generated by the system.",
          "maxLength": 20,
          "type": "string"
        },
        "responseInfo": {
          "$ref": "#/definitions/ResponseInfo"
        },
        "result": {
          "description": "The result data for the request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdRmClsListResult"
          }
        },
        "statusCode": {
          "format": "int32",
          "description": "HTTP Status Code",
          "type": "integer"
        }
      }
    },
    "AdRmClsListResult": {
      "description": "The result data for the request.",
      "type": "object",
      "title": "AdRmClsListResult",
      "properties": {
        "classCode": {
          "format": "int32",
          "description": "Displays a code used to identify the customer/member account class.",
          "type": "integer"
        },
        "confidential": {
          "description": "Indicates whether customers/members assigned to this class are automatically marked as Confidential.",
          "type": "string",
          "maxLength": 1
        },
        "countryCode": {
          "description": "Displays the default country code assigned to customers/members in this class.",
          "type": "string",
          "maxLength": 4,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "createDt": {
          "description": "Displays the date that the class was added to the system. (Example : 2023-03-07T06:09:33  [Format : yyyy-MM-ddThh:mm:ss]).",
          "maxLength": 19,
          "type": "string"
        },
        "createPrimStmt": {
          "description": "Indicates whether or not to have a primary statement generated for new customers/members added to the customer/member class.",
          "type": "string",
          "maxLength": 1
        },
        "custTotActInact": {
          "description": "Indicates whether inactivity is based on the Contact History for the customer/member when Assess Charge Based on Customer/Member Last Overall Activity Date is selected. When N is selected, Contact History is not considered in overall activity.",
          "type": "string",
          "maxLength": 1
        },
        "daysInactNotice": {
          "format": "int32",
          "description": "Displays the number of days before the inactivity fee is assessed when the system generates the inactivity notice.",
          "type": "integer"
        },
        "defineMailCode": {
          "description": "Indicates a new mail code ID will be defined for customer/member class reclassification during the nightly process. Applies only when use_cust_cls_params = Y.",
          "type": "string",
          "maxLength": 1
        },
        "deliveryOpt": {
          "description": "Indicates the default delivery option for the class.",
          "type": "string",
          "maxLength": 6
        },
        "description": {
          "description": "Displays a description for the customer/member class, which is displayed as an option in the Class field as part of the customer/member origination process.",
          "type": "string",
          "maxLength": 30
        },
        "displayInOrig": {
          "description": "Indicates whether the customer/member class should be included in the population of the Branch list on the Customer/Member Origination window which is part of the Enhanced Deposit Origination process.",
          "type": "string",
          "maxLength": 1
        },
        "dpn126Text": {
          "description": "Displays the message that displays on DPN12600 or RMN12600 (Inactive Charge Account Notice). Up to 22 lines with up to 120 characters per line are allowed for each message.",
          "type": "string",
          "maxLength": 2147483647
        },
        "effectiveDt": {
          "format": "date",
          "description": "Displays the date that the customer/member class Status was updated to Active.",
          "type": "string"
        },
        "emplId": {
          "format": "int32",
          "description": "Displays a unique number that identifies the employee that created the class.",
          "type": "integer"
        },
        "encId": {
          "description": "Unique record identifier.",
          "type": "string",
          "maxLength": 10000
        },
        "exclDormAcct": {
          "description": "Indicates whether dormant accounts are excluded when assessing a charge.",
          "type": "string",
          "maxLength": 1
        },
        "exclEschAcct": {
          "description": "Indicates whether escheated accounts are excluded when assessing a charge.",
          "type": "string",
          "maxLength": 1
        },
        "exclMultDorm": {
          "description": "Indicates whether the customer/member is excluded from charges when one or more account is in Dormant status.",
          "type": "string",
          "maxLength": 1
        },
        "exclMultEsch": {
          "description": "Indicates whether the customer/member is excluded from charges when one or more account is in Escheated status.",
          "type": "string",
          "maxLength": 1
        },
        "excludeEarlyAchCr": {
          "description": "This field instructs the system to exclude the customer/ member from early ACH credit posting by  ignoring the  SEC Codes that allow early ACH posting for the customer/member class.",
          "type": "string",
          "maxLength": 1
        },
        "excludeRimRp": {
          "description": "Indicates whether customers/members in this class are excluded from Relationship Pricing.",
          "type": "string",
          "maxLength": 1
        },
        "inactiveCc": {
          "format": "int32",
          "description": "Displays the inactive account charge code and description assigned to the class. Selection must be a deposit charge code between 600 and 800.",
          "type": "integer"
        },
        "inactiveChgBy": {
          "description": "Displays what the inactive charge will be based on. Value: Account Last Activity Date, Customer/Member Overall Last Activity Date",
          "type": "string",
          "maxLength": 1
        },
        "inactiveChgMethod": {
          "description": "Displays the charge method to a single inactive account when Assess Inactive Charge To is Single Inactive Account, and Assess Charge to Single Inactive Account Using is Charge Method.",
          "type": "string",
          "maxLength": 2
        },
        "inactiveChgPeriod": {
          "description": "Displays how often inactivity charges are assessed. Used in conjunction with inactive_chg_trm to determine the charging frequency.",
          "type": "string",
          "maxLength": 8
        },
        "inactiveChgTo": {
          "description": "Displays what accounts to charge the inactive fee to. Value: All Inactive Accounts, Single Inactive Account",
          "type": "string",
          "maxLength": 1,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "inactiveChgTrm": {
          "format": "int32",
          "description": "Displays how often inactivity charges are assessed. Used in conjunction with inactive_chg_period to determine the charging frequency.",
          "type": "integer"
        },
        "inactiveChgType": {
          "description": "Displays how the system assessed the charge to a single inactive account. Applies when Assess Inactive Charge To is All Inactive Accounts.<br>Value: Class Priority, Charge Method, Both.",
          "type": "string",
          "maxLength": 1
        },
        "mailCode": {
          "description": "Displays the the mail code that defaults to customers/members assigned to this class. Mail codes can further segment correspondence for marketing purposes.",
          "type": "string",
          "maxLength": 1
        },
        "mailCodeReclass": {
          "description": "Displays the mail code to which the customer/member will be reassigned when the customer/member class change is performed during the nightly process.",
          "type": "string",
          "maxLength": 1
        },
        "maxAge": {
          "format": "int32",
          "description": "Displays the maximum age that a customer/member can be in order to be assigned to this class.",
          "type": "integer"
        },
        "memoType": {
          "description": "Indicates whether a note is attached to the customer/member class.",
          "type": "string",
          "maxLength": 1
        },
        "minor": {
          "description": "Indicates that only customers/members that have not reached the age of legal majority are to be assigned to this class.",
          "type": "string",
          "maxLength": 1
        },
        "miscLabel1": {
          "description": "Displays a field name for miscellaneous field information that may be requested for accounts assigned to this class as part of the customer/member origination process.",
          "type": "string",
          "maxLength": 15
        },
        "miscLabel2": {
          "description": "Displays a field name for miscellaneous field information that may be requested for accounts assigned to this class as part of the customer/member origination process.",
          "type": "string",
          "maxLength": 15
        },
        "miscLabel3": {
          "description": "Displays a field name for miscellaneous field information that may be requested for accounts assigned to this class as part of the customer/member origination process.",
          "type": "string",
          "maxLength": 15
        },
        "miscLabel4": {
          "description": "Displays a field name for miscellaneous field information that may be requested for accounts assigned to this class as part of the customer/member origination process.",
          "type": "string",
          "maxLength": 15
        },
        "newAcctClsCode": {
          "format": "int32",
          "description": "Displays the class code to which accounts are assigned once the customer/member reaches the maximum age allowed for customers/members in this class. Applies only when use_acct_cls_params is Y.",
          "type": "integer"
        },
        "newAcctClsType": {
          "description": "Displays the account type for the account class to which accounts will be reassigned.",
          "type": "string",
          "maxLength": 3
        },
        "newCustClsCode": {
          "format": "int32",
          "description": "Displays the class code to which the customer/member is assigned once they reach the maximum age allowed for customers/members in this class. Applies only when use_cust_cls_params is Y.",
          "type": "integer"
        },
        "newCustClsDesc": {
          "description": "Displays the description for the class code to which the customer/member is assigned once they reach the maximum age.",
          "type": "string",
          "maxLength": 30
        },
        "noActyChgDays": {
          "format": "int32",
          "description": "Determines the number of days after which a customer/member will be charged for having no activity.",
          "type": "integer"
        },
        "noChargeOld": {
          "format": "int32",
          "description": "Indicates charges are not to be assessed for customers/members in this class that are older than this value.",
          "type": "integer"
        },
        "noChargeYoung": {
          "format": "int32",
          "description": "Indicates charges are not to be assessed for customers/members in this class that are younger than this value.",
          "type": "integer"
        },
        "noticeLeadDays": {
          "format": "int32",
          "description": "Displays the number of days prior to the due date when notices are generated for this class.",
          "type": "integer"
        },
        "odLimitExcluded": {
          "description": "Indicates whether accounts belonging to customers/members in this class are excluded from OD limit processing.",
          "type": "string",
          "maxLength": 1
        },
        "ptid": {
          "format": "double",
          "description": "Displays a unique number that identifies a system record.",
          "type": "number"
        },
        "regCcCode": {
          "description": "Indicates the Regulation CC code that controls the assignment of float for deposits made to deposit account with primary customer/member assigned to the class.",
          "type": "string",
          "maxLength": 1
        },
        "restrictId": {
          "format": "int32",
          "description": "Displays a unique number that identifies restriction level for the customer/member class. Only accounts with the same restriction and lower can access customers/members assigned to this class.",
          "type": "integer"
        },
        "rimType": {
          "description": "Indicates whether this class is assigned for Personal or NonPersonal customer/member accounts.",
          "type": "string",
          "maxLength": 11
        },
        "rowVersion": {
          "format": "int32",
          "description": "Displays the number of time a record has been updated.",
          "type": "integer"
        },
        "status": {
          "description": "Displays the status of a customer/member class, such as Active or Closed.",
          "type": "string",
          "maxLength": 8
        },
        "statusSort": {
          "format": "int32",
          "description": "Displays a number that represents the customer/member class Status, which allows for sorting based on status.",
          "maximum": 255,
          "type": "integer"
        },
        "useAcctClsParams": {
          "description": "Indicates whether the system automatically performs account class changes based on customer/member age during the nightly process. new_acct_cls_code determines the class to which they will be assigned.",
          "type": "string",
          "maxLength": 1
        },
        "useCustClsParams": {
          "description": "Indicates whether the system automatically performs customer/member class changes based on customer/member age during the nightly process. new_cust_cls_code determines the class to which they will be assigned.",
          "type": "string",
          "maxLength": 1
        }
      }
    },
    "AdRmTitleListResponse": {
      "description": "Standard Response Information",
      "title": "AdRmTitleListResponse",
      "type": "object",
      "properties": {
        "messages": {
          "description": "List of messages occurred while processing the request",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MessageInfo"
          }
        },
        "pagingInfo": {
          "$ref": "#/definitions/PagingInfo"
        },
        "referenceNo": {
          "description": "Reference Number of the request. If no reference number is passed in the request the reference number is generated by the system.",
          "maxLength": 20,
          "type": "string"
        },
        "responseInfo": {
          "$ref": "#/definitions/ResponseInfo"
        },
        "result": {
          "description": "The result data for the request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdRmTitleListResult"
          }
        },
        "statusCode": {
          "format": "int32",
          "description": "HTTP Status Code",
          "type": "integer"
        }
      }
    },
    "AdRmTitleListResult": {
      "description": "The result data for the request.",
      "title": "AdRmTitleListResult",
      "type": "object",
      "properties": {
        "bizchexBusType": {
          "description": "Displays the value of business type for the customer/member title. This value is used in the BizChex business verification service request.",
          "type": "string",
          "maxLength": 2
        },
        "createDt": {
          "description": "Displays the date the title was added to the system. \n (Example : 2023-04-20T03:48:36  [Format : yyyy-MM-ddThh:mm:ss]).",
          "maxLength": 19,
          "type": "string",
          "example": "2023-04-20T03:48:36"
        },
        "effectiveDt": {
          "description": "Displays the date the title option Status was updated to Active. \n (Example : 2023-04-20T03:48:36  [Format : yyyy-MM-ddThh:mm:ss]).",
          "maxLength": 19,
          "type": "string",
          "example": "2023-04-20T03:48:36"
        },
        "emplId": {
          "format": "int32",
          "description": "Displays a unique number that identifies the employee that created the title option.",
          "type": "integer"
        },
        "encId": {
          "description": "Unique record identifier.",
          "type": "string",
          "maxLength": 10000
        },
        "forProfit": {
          "description": "Indicates if the entity is for profit or for non profit",
          "type": "string",
          "maxLength": 1,
          "enum": [
            "Y",
            "N"
          ]
        },
        "legalEvidenceReq": {
          "description": "Indicates if customers/members of this title require legal evidence of status to be supplied.",
          "type": "string",
          "maxLength": 1
        },
        "memoType": {
          "description": "Indicates whether a note is attached to the title option.",
          "type": "string",
          "maxLength": 1
        },
        "ptid": {
          "format": "double",
          "description": "Displays a unique number that identifies a system record.",
          "type": "number"
        },
        "rimType": {
          "description": "Indicates whether this customer/member title is assigned to personal RIM types, which display title options, such as Mr. or Ms., or nonpersonal RIM types, which display organization types, such as Corporation or Partnership.",
          "type": "string",
          "maxLength": 11
        },
        "rowVersion": {
          "format": "int32",
          "description": "Displays the number of times the title record has been updated.",
          "type": "integer"
        },
        "status": {
          "description": "Displays the title option Status, such as Active or Closed.",
          "type": "string",
          "maxLength": 8
        },
        "statusSort": {
          "format": "int32",
          "description": "Displays a number that represents the Status of the record, which allows for sorting based on status.",
          "minimum": 0,
          "maximum": 255,
          "type": "integer"
        },
        "title": {
          "description": "Displays the title as it is displayed in Customer/Member Management during the creation of a customer/member. For personal types, the field label displays Type. For nonpersonal RIM types, the field label displays Org Type.",
          "type": "string",
          "maxLength": 40
        },
        "titleId": {
          "format": "int32",
          "description": "Displays a unique number that identifies the customer/member name title.",
          "type": "integer"
        }
      }
    },
    "AdRmIdentListResponse": {
      "title": "AdRmIdentListResponse",
      "description": "Standard Response Information",
      "type": "object",
      "properties": {
        "messages": {
          "description": "List of messages occurred while processing the request",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MessageInfo"
          }
        },
        "pagingInfo": {
          "$ref": "#/definitions/PagingInfo"
        },
        "referenceNo": {
          "description": "Reference Number of the request. If no reference number is passed in the request the reference number is generated by the system.",
          "maxLength": 20,
          "type": "string"
        },
        "responseInfo": {
          "$ref": "#/definitions/ResponseInfo"
        },
        "result": {
          "description": "The result data for the request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdRmIdentListResult"
          }
        },
        "statusCode": {
          "format": "int32",
          "description": "HTTP Status Code",
          "type": "integer"
        }
      }
    },
    "AdRmIdentListResult": {
      "title": "AdRmIdentListResult",
      "description": "The result data for the request.",
      "type": "object",
      "properties": {
        "additionalInfo": {
          "description": "Indicates that an additional field is to be enabled as part of selecting this identity type in order to provide additional id details.",
          "type": "string",
          "maxLength": 1,
          "enum": [
            "Y",
            "N"
          ]
        },
        "additionalLabel": {
          "description": "Defines the field label that is displayed in Customer/Member Management for the additional field.",
          "type": "string",
          "maxLength": 20
        },
        "createDt": {
          "description": "Displays the date the identity type was added to the system. \n (Example : 2023-04-20T03:48:36  [Format : yyyy-MM-ddThh:mm:ss]).",
          "maxLength": 19,
          "type": "string",
          "example": "2023-04-20T03:48:36"
        },
        "ctrIdentMethod": {
          "description": "Indicates whether this identity type can be used for CTR reporting.",
          "type": "string",
          "maxLength": 1
        },
        "documentType": {
          "format": "int32",
          "description": "Indicates the document type for an identity type.<br>Value: 1 - Alien ID Card, 2 - State Issued ID Card, 3-  Driver's License, 4 - Military ID, 5 - Social Security Card, 6 - Passport, 1000 - Other",
          "type": "integer",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            1000
          ]
        },
        "effectiveDt": {
          "description": "Displays the date the identity type Status was updated to Active. \n (Example : 2023-04-20T03:48:36  [Format : yyyy-MM-ddThh:mm:ss]).",
          "maxLength": 19,
          "type": "string",
          "example": "2023-04-20T03:48:36"
        },
        "emplId": {
          "format": "int32",
          "description": "Displays a unique number that identifies the employee that created the identity type.",
          "type": "integer"
        },
        "encId": {
          "description": "Unique record identifier.",
          "type": "string",
          "maxLength": 10000
        },
        "identId": {
          "format": "int32",
          "description": "Displays a unique number that identifies the customer/member identity type options configured in System Administration.",
          "type": "integer"
        },
        "identification": {
          "description": "Displays a description of the identity type that is provided as a field value option in Customer/Member Management for the form of identification the institution accepts to verify customer/member identity.",
          "type": "string",
          "maxLength": 40
        },
        "idType": {
          "description": "Indicates if the identity type is a document or a non- document verification.",
          "type": "string",
          "maxLength": 1,
          "enum": [
            "D",
            "N"
          ]
        },
        "issuedCountry": {
          "description": "Displays the 2 character identifier of the country that issues the identification. United States, Canada, and Mexico also require an issuing state.",
          "type": "string",
          "maxLength": 2
        },
        "issuedState": {
          "description": "Displays the 2 character identifier of the state that issues the identification.",
          "type": "string",
          "maxLength": 3
        },
        "issuingGovtOffice": {
          "description": "Indicates the government office which issues this type of id.",
          "type": "string",
          "maxLength": 30
        },
        "mask": {
          "description": "Defines the input mask that restricts the id number that can be entered for the id type.",
          "type": "string",
          "maxLength": 40
        },
        "memoType": {
          "description": "Indicates whether a note is attached to the identity type.",
          "type": "string",
          "maxLength": 1
        },
        "nondocMethodType": {
          "format": "int32",
          "description": "Indicates the non-documentary verification process that was used to identify the customer/member.<br>Value: 1 - ChexSystems, 2 - Credit Report Obtained, 3 - Fraud/Bad Check Database, 4 - Financial Statement, 5 - Logical Verification, 6 - Reference Check, 1000 - Other",
          "type": "integer",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            1000
          ]
        },
        "ptid": {
          "format": "double",
          "description": "Displays a unique number that identifies a system record.",
          "type": "number"
        },
        "rowVersion": {
          "format": "int32",
          "description": "Displays the number of times a record has been updated.",
          "type": "integer"
        },
        "status": {
          "description": "Displays the identity type status, such as Active or Closed.",
          "type": "string",
          "maxLength": 8
        },
        "statusSort": {
          "format": "int32",
          "description": "Displays a number that represents the Status of a record, which allows for sorting based on status.",
          "minimum": 0,
          "maximum": 255,
          "type": "integer"
        }
      }
    },
    "UpdateRmAcctRequest": {
      "title": "UpdateRmAcctRequest",
      "type": "object",
      "description": "Request object to update customer account details",
      "properties": {
        "badAddress": {
          "description": "Indicates that a customer has no valid forwarding address. This is a banker set value.",
          "maxLength": 1,
          "type": "string"
        },
        "birthDt": {
          "description": "Defines the date of birth of the RIM account owner. \n (Example : 2023-05-02T05:58:25  [Format : yyyy-MM-ddThh:mm:ss]).",
          "maxLength": 19,
          "type": "string",
          "example": "2023-05-02T05:58:25",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "bSARiskCode": {
          "format": "int32",
          "description": "A user-defined risk code associated to this customer for purposes of Bank Secrecy Act monitoring.",
          "type": "integer"
        },
        "bsaSourceAdditional": {
          "description": "The user-defined additional information that is be entered on the customer's RIM when a BSA source of funds is selected.",
          "maxLength": 254,
          "type": "string"
        },
        "bSASourceFundsId": {
          "format": "int32",
          "description": "The unique identifier that points to the source of funds used by a customer's RIM and the related accounts.",
          "type": "integer"
        },
        "firstName": {
          "description": "Defines the first name.",
          "maxLength": 40,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "lastName": {
          "description": "Defines the last name.",
          "maxLength": 40,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "mailCode": {
          "description": "Indicates the mail code Id for this customer.",
          "maxLength": 1,
          "type": "string"
        },
        "middleInitial": {
          "description": "Defines the middle initial of the customer/member.",
          "maxLength": 2,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "motherMaidenName": {
          "description": "Defines the RIM account's mother's maiden name.",
          "maxLength": 40,
          "type": "string",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "noticeDelMethod": {
          "description": "Controls the notice delivery option for this customer.",
          "maxLength": 1,
          "type": "string"
        },
        "noticeMailCode": {
          "description": "Controls the mail code for notices.",
          "maxLength": 1,
          "type": "string"
        },
        "status": {
          "description": "Defines the status of the row.",
          "maxLength": 14,
          "type": "string"
        },
        "stmtDelMethod": {
          "description": "Defines the statement delivery method for the customer.  Print, Email, or Both are the options.",
          "maxLength": 5,
          "type": "string"
        }
      }
    },
    "UpdateRmAcctResponse": {
      "title": "UpdateRmAcctResponse",
      "type": "object",
      "description": "Standard Response Information",
      "properties": {
        "messages": {
          "description": "List of messages occurred while processing the request",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MessageInfo"
          }
        },
        "referenceNo": {
          "description": "Reference Number of the request. If no reference number is passed in the request the reference number is generated by the system.",
          "maxLength": 20,
          "type": "string"
        },
        "responseInfo": {
          "$ref": "#/definitions/ResponseInfo"
        },
        "result": {
          "$ref": "#/definitions/UpdateRmAcctResult"
        },
        "statusCode": {
          "format": "int32",
          "description": "HTTP Status Code",
          "type": "integer"
        }
      }
    },
    "UpdateRmAcctResult": {
      "title": "UpdateRmAcctResult",
      "type": "object",
      "description": "The result data for the request.",
      "properties": {
        "activeMilitaryDt": {
          "description": "This field defines the date on which  active military duty was verified.\n  (Example : 2023-05-02T05:58:25  [Format : yyyy-MM-ddThh:mm:ss]).",
          "maxLength": 19,
          "type": "string",
          "example": "2023-05-02T05:58:25"
        },
        "allowPartial": {
          "description": "Indicates if partially covered debits to sweep family accounts are allowed.",
          "type": "string",
          "maxLength": 1
        },
        "backupReason": {
          "description": "Defines the reason that the RIM account is subject to backup withholding.<br>Value: Uncertified TIN, Cust/Mbr Request, 1st B Notice, 2nd B Notice, Expired Exempt",
          "type": "string",
          "maxLength": 12
        },
        "backupStartDt": {
          "description": "Defines the date the backup withholding started. \n (Example : 2023-05-02T05:58:25  [Format : yyyy-MM-ddThh:mm:ss]).",
          "maxLength": 19,
          "type": "string",
          "example": "2023-05-02T05:58:25"
        },
        "backupWh": {
          "description": "Indicates if the RIM account is subject to backup withholding.<br><br>Y - Yes<br>N - No (TIN is Certified)<br>P - Pending (TIN is uncertified)",
          "type": "string",
          "maxLength": 1
        },
        "backupWhRate": {
          "format": "double",
          "description": "Displays the backup withholding rate applicable for the customer/ member.",
          "type": "number"
        },
        "badAddress": {
          "description": "Indicates that a customer has no valid forwarding address. This is a banker set value.",
          "type": "string",
          "maxLength": 1
        },
        "birthDt": {
          "description": "Defines the date of birth of the RIM account owner. \n (Example : 2023-05-02T05:58:25  [Format : yyyy-MM-ddThh:mm:ss]).",
          "maxLength": 19,
          "type": "string",
          "example": "2023-05-02T05:58:25",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "bnotice1": {
          "description": "Indicates if a 1st B notice has been sent to the customer.",
          "type": "string",
          "maxLength": 1
        },
        "bnotice1Dt": {
          "description": "Defines the date on which the 1st B notice was sent to the customer. \n (Example : 2023-05-02T05:58:25  [Format : yyyy-MM-ddThh:mm:ss]).",
          "maxLength": 19,
          "type": "string",
          "example": "2023-05-02T05:58:25"
        },
        "bnotice2": {
          "description": "Indicates if a 2nd B notice has been sent to the customer.",
          "type": "string",
          "maxLength": 1
        },
        "bnotice2Dt": {
          "description": "Defines the date on which the 2nd B notice was sent to the customer. \n (Example : 2023-05-02T05:58:25  [Format : yyyy-MM-ddThh:mm:ss]).",
          "maxLength": 19,
          "type": "string",
          "example": "2023-05-02T05:58:25"
        },
        "branchNo": {
          "format": "int32",
          "description": "Indicates the servicing branch number for the RIM account.",
          "type": "integer"
        },
        "branchNoOrig": {
          "format": "int32",
          "description": "Defines the branch where the customer/member record was created.",
          "type": "integer"
        },
        "bsaCashIn": {
          "format": "double",
          "description": "Defines the cash in threshold amount that triggers a Currency Transaction Report.",
          "type": "number"
        },
        "bsaCashlikeHigh": {
          "format": "double",
          "description": "Defines the maximum threshold amount that triggers a Currency Transaction Report for cash-like items.",
          "type": "number"
        },
        "bsaCashlikeLow": {
          "format": "double",
          "description": "Defines the minimum threshold amount that triggers a Currency Transaction Report for cash-like items.",
          "type": "number"
        },
        "bsaCashOut": {
          "format": "double",
          "description": "Defines the cash out threshold amount that triggers a Currency Transaction Report.",
          "type": "number"
        },
        "bsaExemptType": {
          "description": "This is the CTR exemption type for the customer's RIM.",
          "type": "string",
          "maxLength": 6
        },
        "bsaRiskCode": {
          "format": "int32",
          "description": "A user-defined risk code associated to this customer for purposes of Bank Secrecy Act monitoring.",
          "type": "integer"
        },
        "bsaSourceAdditional": {
          "description": "The user-defined additional information that is be entered on the customer's RIM when a BSA source of funds is selected.",
          "type": "string",
          "maxLength": 254
        },
        "bsaSourceFundsId": {
          "format": "int32",
          "description": "The unique identifier that points to the source of funds used by a customer's RIM and the related accounts.",
          "type": "integer"
        },
        "bsaSourceList": {
          "description": "Defines where a customer/member acquired the funds for a transaction, which is recorded for Currency Transaction Reporting.",
          "type": "string",
          "maxLength": 3000
        },
        "cashDepositVolume": {
          "format": "double",
          "description": "Defines the expected amount of cash that is deposited in a period",
          "type": "number"
        },
        "cashWithdrawalVolume": {
          "format": "double",
          "description": "Defines the expected amount of cash that is withdrawn in a period.",
          "type": "number"
        },
        "cbRimChanged": {
          "description": "Indicates whether the credit bureau for the RIM account has changed.",
          "type": "string",
          "maxLength": 1
        },
        "certStatusChgDt": {
          "description": "Defines the date of the last certification change. \n (Example : 2023-05-02T05:58:25  [Format : yyyy-MM-ddThh:mm:ss]).",
          "maxLength": 19,
          "type": "string",
          "example": "2023-05-02T05:58:25"
        },
        "cipException": {
          "description": "Defines the Identification Program exception information.",
          "type": "string",
          "maxLength": 125
        },
        "cityList": {
          "description": "Defines the city of residence for a customer/member.",
          "type": "string",
          "maxLength": 3000,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "cityOfBirth": {
          "description": "Defines the city of birth for this RIM account.",
          "type": "string",
          "maxLength": 25,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "classCode": {
          "format": "int32",
          "description": "Defines the class code for the customer.",
          "type": "integer"
        },
        "closedDt": {
          "description": "Defines the date the RIM account was closed. \n (Example : 2023-05-02T05:58:25  [Format : yyyy-MM-ddThh:mm:ss]).",
          "maxLength": 19,
          "type": "string",
          "example": "2023-05-02T05:58:25"
        },
        "closingReasonId": {
          "format": "int32",
          "description": "System assigned identification number assigned to the user-defined closing reason configured within the fraud controls.",
          "type": "integer"
        },
        "companyId": {
          "description": "This indicates the company id tied to the customer.",
          "type": "string",
          "maxLength": 10
        },
        "confidential": {
          "description": "Indicates whether the customer/member is marked as Confidential.",
          "type": "string",
          "maxLength": 1
        },
        "consumerPrivacy": {
          "description": "Indicates the default consumer privacy setting for a customer/member account.",
          "type": "string",
          "maxLength": 7
        },
        "copyBackStatus": {
          "format": "int32",
          "description": "Indicates if the changes to the record in XAPI database during nightly processing have been copied back to the Fusion Phoenix database.",
          "minimum": 0,
          "maximum": 255,
          "type": "integer"
        },
        "corpResDt": {
          "description": "This field defines the date on which a meeting of the members or authorized signatories of the Business Entity held a meeting to adopt the resolution to open an account with the financial institution.  \n (Example : 2023-05-02T05:58:25  [Format : yyyy-MM-ddThh:mm:ss]).",
          "maxLength": 19,
          "type": "string",
          "example": "2023-05-02T05:58:25"
        },
        "corrLangId": {
          "format": "int32",
          "description": "Defines the language to be used in corresponding to the customer.",
          "minimum": 0,
          "maximum": 255,
          "type": "integer"
        },
        "countryCode": {
          "description": "Defines the country code tow which the customer belongs.",
          "type": "string",
          "maxLength": 4,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "countryCodeList": {
          "description": "Defines the country of residence.",
          "type": "string",
          "maxLength": 500
        },
        "createDt": {
          "description": "Defines the date the row was created. \n (Example : 2023-05-02T05:58:25  [Format : yyyy-MM-ddThh:mm:ss]).",
          "maxLength": 19,
          "type": "string",
          "example": "2023-05-02T05:58:25"
        },
        "creditScore1": {
          "format": "int32",
          "description": "Defines the credit score from the first credit reporting agency.",
          "type": "integer",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "creditScore2": {
          "format": "int32",
          "description": "Defines the credit score from the second credit reporting agency.",
          "type": "integer",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "creditScore3": {
          "format": "int32",
          "description": "Defines the credit score from the third credit reporting agency.",
          "type": "integer",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "crossReference": {
          "description": "Identifies the existence of cross references for the customer/member record.",
          "type": "string",
          "maxLength": 1
        },
        "crRpt1Dt": {
          "description": "Defines the credit report date for the first credit score. \n (Example : 2023-05-02T05:58:25  [Format : yyyy-MM-ddThh:mm:ss]).",
          "maxLength": 19,
          "type": "string",
          "example": "2023-05-02T05:58:25"
        },
        "crRpt2Dt": {
          "description": "Defines the credit report date for the second credit score. \n (Example : 2023-05-02T05:58:25  [Format : yyyy-MM-ddThh:mm:ss]).",
          "maxLength": 19,
          "type": "string",
          "example": "2023-05-02T05:58:25"
        },
        "crRpt3Dt": {
          "description": "Defines the credit report date for the third credit score. \n (Example : 2023-05-02T05:58:25  [Format : yyyy-MM-ddThh:mm:ss]).",
          "maxLength": 19,
          "type": "string",
          "example": "2023-05-02T05:58:25"
        },
        "ct1AddressLine1": {
          "description": "Defines the first address line for the contact person 1.",
          "type": "string",
          "maxLength": 40,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "ct1AddressLine2": {
          "description": "Defines the second address line for the contact person 1.",
          "type": "string",
          "maxLength": 40,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "ct1AddressLine3": {
          "description": "Defines the third address line for the contact person 1.",
          "type": "string",
          "maxLength": 40,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "ct1City": {
          "description": "Defines the city address for the contact person 1.",
          "type": "string",
          "maxLength": 25,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "ct1CountryCode": {
          "description": "Defines the country code for the contact person 1.",
          "type": "string",
          "maxLength": 4
        },
        "ct1FirstName": {
          "description": "Defines the first name of the contact person 1.",
          "type": "string",
          "maxLength": 40,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "ct1International": {
          "description": "Indicates whether the contact person 1 address format is international or US.",
          "type": "string",
          "maxLength": 1
        },
        "ct1LastName": {
          "description": "Defines the last name of the contact person 1.",
          "type": "string",
          "maxLength": 40,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "ct1MiddleInitial": {
          "description": "Defines the middle initial of the contact person 1.",
          "type": "string",
          "maxLength": 2,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "ct1Phone1": {
          "description": "Defines the home phone number for the contact person 1.",
          "type": "string",
          "maxLength": 20,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "ct1Phone1DefFmt": {
          "description": "Indicates whether the contact person 1 phone1 info is formatted or not.",
          "type": "string",
          "maxLength": 1
        },
        "ct1Phone1Ext": {
          "description": "Displays the extension number, if available.",
          "type": "string",
          "maxLength": 6,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "ct1Phone2": {
          "description": "Defines the work phone number for the contact person 1.",
          "type": "string",
          "maxLength": 20,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "ct1Phone2DefFmt": {
          "description": "Indicates whether the contact person 1 phone2 info is formatted or not.",
          "type": "string",
          "maxLength": 1
        },
        "ct1Phone2Ext": {
          "description": "Defines the work phone extension number for the contact person 1.",
          "type": "string",
          "maxLength": 6
        },
        "ct1RelId": {
          "format": "int32",
          "description": "Defines the relationship of contact person 1 to owner of the RIM account.",
          "type": "integer"
        },
        "ct1State": {
          "description": "Defines the state code for the contact person 1.",
          "type": "string",
          "maxLength": 5
        },
        "ct1Suffix": {
          "description": "Defines the suffix that is attached to the contact person 1.",
          "type": "string",
          "maxLength": 3
        },
        "ct1TitleId": {
          "format": "int32",
          "description": "Defines the title of the contact person 1.",
          "type": "integer"
        },
        "ct1Zip": {
          "description": "Defines the zip code for the contact person 1.",
          "type": "string",
          "maxLength": 10,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "ct2AddressLine1": {
          "description": "Defines the first address line for the contact person 2.",
          "type": "string",
          "maxLength": 40,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "ct2AddressLine2": {
          "description": "Defines the second address line for the contact person 2.",
          "type": "string",
          "maxLength": 40,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "ct2AddressLine3": {
          "description": "Defines the third address line for the contact person 2.",
          "type": "string",
          "maxLength": 40,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "ct2City": {
          "description": "Defines the city address for the contact person 2.",
          "type": "string",
          "maxLength": 25,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "ct2CountryCode": {
          "description": "Defines the country code for the contact person 2.",
          "type": "string",
          "maxLength": 4,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "ct2FirstName": {
          "description": "Defines the first name of the contact person 2.",
          "type": "string",
          "maxLength": 40,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "ct2International": {
          "description": "Indicates whether the contact person 2 address format is international or US.",
          "type": "string",
          "maxLength": 1
        },
        "ct2LastName": {
          "description": "Defines the last name of the contact person 2.",
          "type": "string",
          "maxLength": 40,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "ct2MiddleInitial": {
          "description": "Defines the middle initial of the contact person 2.",
          "type": "string",
          "maxLength": 2,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "ct2Phone1": {
          "description": "Defines the home phone number for the contact person 2.",
          "type": "string",
          "maxLength": 20,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "ct2Phone1DefFmt": {
          "description": "Indicates whether the contact person 2 phone1 info is formatted or not.",
          "type": "string",
          "maxLength": 1
        },
        "ct2Phone1Ext": {
          "description": "Displays the extension number, if available.",
          "type": "string",
          "maxLength": 6,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "ct2Phone2": {
          "description": "Defines the work phone number for the contact person 2.",
          "type": "string",
          "maxLength": 20,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "ct2Phone2DefFmt": {
          "description": "Indicates whether the contact person 2 phone2 info is formatted or not.",
          "type": "string",
          "maxLength": 1
        },
        "ct2Phone2Ext": {
          "description": "Defines the work phone extension number for the contact person 2.",
          "type": "string",
          "maxLength": 6,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "ct2RelId": {
          "format": "int32",
          "description": "Defines the relationship of contact person 2 to owner of the RIM account.",
          "type": "integer"
        },
        "ct2State": {
          "description": "Defines the state code for the contact person 2.",
          "type": "string",
          "maxLength": 5
        },
        "ct2Suffix": {
          "description": "Defines the suffix that is attached to the contact person 2.",
          "type": "string",
          "maxLength": 3
        },
        "ct2TitleId": {
          "format": "int32",
          "description": "Defines the title of the contact person 2.",
          "type": "integer"
        },
        "ct2Zip": {
          "description": "Defines the zip code for the contact person 2.",
          "type": "string",
          "maxLength": 10,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "cuNonmember": {
          "description": "Identifies a RIM that is not a member of the credit union.",
          "type": "string",
          "maxLength": 1
        },
        "custClassNoReclass": {
          "description": "Indicates whether the customer/member class will be automatically reclassed once they meet the requirements of the predetermined criteria.",
          "type": "string",
          "maxLength": 1
        },
        "customerValue": {
          "description": "Type the Customers value segment.  The value segment is a score given to a member for cross sell purposes.",
          "type": "string",
          "maxLength": 30
        },
        "dateFormatId": {
          "format": "int32",
          "description": "Defines the date format to be used when corresponding to the customer.",
          "minimum": 0,
          "maximum": 255,
          "type": "integer"
        },
        "deceasedDt": {
          "description": "Defines the date on which the customer died. \n (Example : 2023-05-02T05:58:25  [Format : yyyy-MM-ddThh:mm:ss]).",
          "maxLength": 19,
          "type": "string",
          "example": "2023-05-02T05:58:25"
        },
        "domesticIncomingWireAmt": {
          "format": "double",
          "description": "Defines the expected amount of domestic incoming wires in a period.",
          "type": "number"
        },
        "domesticOutgoingWireAmt": {
          "format": "double",
          "description": "Defines the expected amount of domestic outgoing wires in a period.",
          "type": "number"
        },
        "doNotClose": {
          "description": "Indicates whether the system should prevent the customer/member record from automatically closing.",
          "type": "string",
          "maxLength": 1
        },
        "effectiveDt": {
          "description": "Defines the date the row is effective. \n (Example : 2023-05-02T05:58:25  [Format : yyyy-MM-ddThh:mm:ss]).",
          "maxLength": 19,
          "type": "string",
          "example": "2023-05-02T05:58:25"
        },
        "email1": {
          "description": "Defines the customers home email address.",
          "type": "string",
          "maxLength": 255,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "email2": {
          "description": "Defines the customers work email address.",
          "type": "string",
          "maxLength": 255,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "emailAddress": {
          "description": "Displays the primary email address of the customer / member.",
          "type": "string",
          "maxLength": 255,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "emailType": {
          "description": "Indicates the type of email defined for a customer/member, such as personal or work.",
          "type": "string",
          "maxLength": 9
        },
        "emplId": {
          "format": "int32",
          "description": "The RSM of the employee who created the row.",
          "type": "integer"
        },
        "enroll": {
          "description": "Indicates whether the customer/ member must be enrolled or disenrolled for eStatement/ eNotice facility.",
          "type": "string",
          "maxLength": 1
        },
        "enrollStatus": {
          "description": "Indicates whether the customer/ member must be enrolled or disenrolled for eStatement/ eNotice facility.",
          "type": "string",
          "maxLength": 15
        },
        "eventId": {
          "description": "Displays the unique event ID for any update to the customer / member record that generates a notification event.",
          "type": "string",
          "maxLength": 40
        },
        "excludeBrReassign": {
          "description": "Identifies if this customer is excluded from the branch reassignment job.",
          "type": "string",
          "maxLength": 1
        },
        "excludeEarlyAchCr": {
          "description": "This field instructs the system to exclude the customer/ member from early ACH credit posting by  ignoring the  SEC Codes that allow early ACH posting for the customer/member class.",
          "type": "string",
          "maxLength": 1
        },
        "excludeRimRp": {
          "description": "This indicates if the Customer will be excluded from Relationship Pricing.",
          "type": "string",
          "maxLength": 1
        },
        "exemptExpiryDt": {
          "description": "Defines the expiration date for an exemption. \n (Example : 2023-05-02T05:58:25  [Format : yyyy-MM-ddThh:mm:ss]).",
          "maxLength": 19,
          "type": "string",
          "example": "2023-05-02T05:58:25"
        },
        "exemptReason": {
          "description": "Indicates the reason for exemption of the RIM account.<br><br>Non Resident<br>IRS Exempt",
          "type": "string",
          "maxLength": 12
        },
        "firstName": {
          "description": "Defines the first name.",
          "type": "string",
          "maxLength": 40,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "foreignIncomingWireAmt": {
          "format": "double",
          "description": "Defines the expected amount of foreign incoming wires in a period",
          "type": "number"
        },
        "foreignOutgoingWireAmt": {
          "format": "double",
          "description": "Defines the expected amount of foreign outgoing wires in a period.",
          "type": "number"
        },
        "fraudRoleId": {
          "format": "int32",
          "description": "The system-assigned identification number of the fraud type record as configured in System Administration for the selected role.",
          "type": "integer"
        },
        "identId": {
          "format": "int32",
          "description": "Defines the identification used by the customer when opening the account.",
          "type": "integer",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "idValue": {
          "description": "Defines the value of the identification that was presented when the account was opened.",
          "type": "string",
          "maxLength": 25,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "inactiveMilitaryDt": {
          "description": "Date on which the military Status was updated to Inactive. \n (Example : 2023-05-02T05:58:25  [Format : yyyy-MM-ddThh:mm:ss]).",
          "maxLength": 19,
          "type": "string",
          "example": "2023-05-02T05:58:25"
        },
        "incomingCrACHAmt": {
          "format": "double",
          "description": "Defines the expected amount of incoming credit ACH transactions in a period.",
          "type": "number"
        },
        "incomingDrACHAmt": {
          "format": "double",
          "description": "Defines the expected amount of incoming debit ACH transactions in a period.",
          "type": "number"
        },
        "indicatorDt": {
          "description": "The date the ID verification indicator was set on the account. \n (Example : 2023-05-02T05:58:25  [Format : yyyy-MM-ddThh:mm:ss]).",
          "maxLength": 19,
          "type": "string",
          "example": "2023-05-02T05:58:25"
        },
        "indicatorId": {
          "format": "int32",
          "description": "The ID verification indicator on the customer's RIM record. This will indicate the status of the ID verification processed on the customer.",
          "type": "integer"
        },
        "investor": {
          "description": "Indicates if the customer is an investor.",
          "type": "string",
          "maxLength": 1
        },
        "involvedInFraud": {
          "description": "Indicates whether or not the customer has taken part, or been a victim, of fraudulent activity.",
          "type": "string",
          "maxLength": 1
        },
        "iolta": {
          "description": "Indicates whether a customer/member is an IOLTA.  If this field is Y, the customer/member is not sent to Fusion DepositPro as part of origination, and the tax id number is set as the Reporting TIN.",
          "type": "string",
          "maxLength": 1
        },
        "ireta": {
          "description": "Indicates if account is an IRETA account.",
          "type": "string",
          "maxLength": 1
        },
        "lastMaintDt": {
          "description": "Defines the last maintenance date for the RIM account. \n (Example : 2023-05-02T05:58:25  [Format : yyyy-MM-ddThh:mm:ss]).",
          "maxLength": 19,
          "type": "string",
          "example": "2023-05-02T05:58:25"
        },
        "lastName": {
          "description": "Defines the last name.",
          "type": "string",
          "maxLength": 40,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "lastSysMaintDt": {
          "description": "Defines the last system  maintenance date for the RIM account. \n (Example : 2023-05-02T05:58:25  [Format : yyyy-MM-ddThh:mm:ss]).",
          "maxLength": 19,
          "type": "string",
          "example": "2023-05-02T05:58:25"
        },
        "legalEvidenceSup": {
          "description": "Indicates if the member has supplied legal evidence of status",
          "type": "string",
          "maxLength": 1
        },
        "lstOverallActDt": {
          "description": "Defines last overall transactional activity date for the customer. \n (Example : 2023-05-02T05:58:25  [Format : yyyy-MM-ddThh:mm:ss]).",
          "maxLength": 19,
          "type": "string",
          "example": "2023-05-02T05:58:25"
        },
        "mailCode": {
          "description": "Indicates the mail code Id for this customer.",
          "type": "string",
          "maxLength": 1
        },
        "maxOdLimit": {
          "format": "double",
          "description": "Indicates the maximum negative balance amount that can be allowed for all OD limits accounts belonging to this customer.",
          "type": "number"
        },
        "memoType": {
          "description": "Indicates whether a note is attached to the row.",
          "type": "string",
          "maxLength": 1
        },
        "methodId": {
          "format": "int32",
          "description": "Defines the identification number for the BSA opening method.",
          "type": "integer"
        },
        "middleInitial": {
          "description": "Defines the middle initial of the customer/member.",
          "type": "string",
          "maxLength": 2,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "militaryStatus": {
          "description": "Indicates whether the military status, such as Active or Inactive, for a customer/member.",
          "type": "string",
          "maxLength": 15
        },
        "minor": {
          "description": "This indicates whether or not the rim belongs to a minor based on the age at the rim class.  In order to store whether this is a Y is based on taking Birth_dt - from todays date to see if it is equal to or less than minor age.",
          "type": "string",
          "maxLength": 1
        },
        "miscLabel1": {
          "description": "Defines the label of the first miscellaneous field.",
          "type": "string",
          "maxLength": 15
        },
        "miscLabel2": {
          "description": "Defines the label of the second miscellaneous field.",
          "type": "string",
          "maxLength": 15
        },
        "miscLabel3": {
          "description": "Defines the label of the third miscellaneous field.",
          "type": "string",
          "maxLength": 15
        },
        "miscLabel4": {
          "description": "Defines the label of the fourth miscellaneous field.",
          "type": "string",
          "maxLength": 15
        },
        "miscValue1": {
          "description": "Defines the value of the first miscellaneous field.",
          "type": "string",
          "maxLength": 40
        },
        "miscValue2": {
          "description": "Defines the value of the second miscellaneous field.",
          "type": "string",
          "maxLength": 40
        },
        "miscValue3": {
          "description": "Defines the value of the third miscellaneous field.",
          "type": "string",
          "maxLength": 40
        },
        "miscValue4": {
          "description": "Defines the value of the fourth miscellaneous field.",
          "type": "string",
          "maxLength": 40
        },
        "motherMaidenName": {
          "description": "Defines the RIM account's mother's maiden name.",
          "type": "string",
          "maxLength": 40,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "naicsCode": {
          "description": "A code used to classify businesses. NAICS is an abbreviation for North American Industry Classification System..",
          "type": "string",
          "maxLength": 6
        },
        "naicsDescription": {
          "description": "Provides a text description of the NAICS code assigned to a business entity.",
          "type": "string",
          "maxLength": 3000
        },
        "nfaDt": {
          "description": "Defines no forwarding address date. \n (Example : 2023-05-02T05:58:25  [Format : yyyy-MM-ddThh:mm:ss]).",
          "maxLength": 19,
          "type": "string",
          "example": "2023-05-02T05:58:25"
        },
        "noDaysBnoticeBackup": {
          "format": "double",
          "description": "Defines when backup withholding begins after the 1st B Notice is sent to a customer/member.",
          "type": "number"
        },
        "noDaysTinBackup": {
          "format": "double",
          "description": "Defines when to generate the Missing TIN Notice for a customer/member with an uncertified tax identification number.",
          "type": "number"
        },
        "noDomesticIncomingWire": {
          "format": "int32",
          "description": "Defines the expected number of domestic incoming wires in a period.",
          "type": "integer"
        },
        "noDomesticOutgoingWire": {
          "format": "int32",
          "description": "Defines the expected number of domestic outgoing wires in a period.",
          "type": "integer"
        },
        "noForeignIncomingWire": {
          "format": "int32",
          "description": "Defines the expected number of foreign incoming wires in a period.",
          "type": "integer"
        },
        "noForeignOutgoingWire": {
          "format": "int32",
          "description": "Defines the expected number of foreign outgoing wires in a period.",
          "type": "integer"
        },
        "noIncomingCrACH": {
          "format": "int32",
          "description": "Defines the expected number of incoming credit ACH transactions in a period.",
          "type": "integer"
        },
        "noIncomingDrACH": {
          "format": "int32",
          "description": "Defines the expected number of incoming debit ACH transactions in a period.",
          "type": "integer"
        },
        "nonpersonalClassList": {
          "description": "Defines the account class assigned to a nonpersonal customer/member record.",
          "type": "string",
          "maxLength": 3000
        },
        "nonpersonalTitleList": {
          "description": "Defines the type of business organization.",
          "type": "string",
          "maxLength": 3000
        },
        "noOutgoingCrACH": {
          "format": "int32",
          "description": "Defines the expected number of outgoing credit ACH transactions in a period.",
          "type": "integer"
        },
        "noOutgoingDrACH": {
          "format": "int32",
          "description": "Defines the expected number of outgoing debit ACH transactions in a period.",
          "type": "integer"
        },
        "noticeDelMethod": {
          "description": "Controls the notice delivery option for this customer.",
          "type": "string",
          "maxLength": 1
        },
        "noticeMailCode": {
          "description": "Controls the mail code for notices.",
          "type": "string",
          "maxLength": 1
        },
        "noTransitItem": {
          "format": "int32",
          "description": "Defines the expected number of transit items in a period.",
          "type": "integer"
        },
        "noUpdateOdLimit": {
          "description": "Indicates whether the customer level OD limit is to be updated when an account level OD limit is modified.<br>Added 01/12/2009",
          "type": "string",
          "maxLength": 1
        },
        "nrTaxCustomer": {
          "description": "Indicates if the customer/ member is a Non-Resident Taxable Customer.",
          "type": "string",
          "maxLength": 1
        },
        "nSessionId": {
          "format": "double",
          "description": "Defines a unique number that is generated for a specific user during the duration of that user's visit.",
          "type": "number"
        },
        "odLimitDt": {
          "description": "The date of the current maximum OD limit assigned to this customer. \n (Example : 2023-05-02T05:58:25  [Format : yyyy-MM-ddThh:mm:ss]).",
          "maxLength": 19,
          "type": "string",
          "example": "2023-05-02T05:58:25"
        },
        "odlimitNoRequal": {
          "description": "Indicates whether primary accounts for this customer within an OD limit processing class should not be re-qualified.",
          "type": "string",
          "maxLength": 1
        },
        "odlimitNoSuspend": {
          "description": "Indicates whether OD limit processing accounts belonging to this customer where the customer is primary should not be suspended when an account is negative and/or a loan is delinquent.",
          "type": "string",
          "maxLength": 1
        },
        "odLimitRequalDt": {
          "description": "Indicates the date of the last OD limit processing re-qualification of primary accounts belonging to this customer. \n (Example : 2023-05-02T05:58:25  [Format : yyyy-MM-ddThh:mm:ss]).",
          "maxLength": 19,
          "type": "string",
          "example": "2023-05-02T05:58:25"
        },
        "ofacDoNotVerifyUntil": {
          "description": "Defines the date until which an SDN search will be conducted. \n (Example : 2023-05-02T05:58:25  [Format : yyyy-MM-ddThh:mm:ss]).",
          "maxLength": 19,
          "type": "string",
          "example": "2023-05-02T05:58:25"
        },
        "ofacFirstVerifyDt": {
          "description": "Defines the date that an SDN list search is conducted for the first time. \n (Example : 2023-05-02T05:58:25  [Format : yyyy-MM-ddThh:mm:ss]).",
          "maxLength": 19,
          "type": "string",
          "example": "2023-05-02T05:58:25"
        },
        "ofacInvestigated": {
          "description": "Defines whether the possible SDN list match is investigated.",
          "type": "string",
          "maxLength": 1
        },
        "ofacInvestResult": {
          "description": "Includes comments regarding a possible SDN match investigation.",
          "type": "string",
          "maxLength": 250
        },
        "oldClassCode": {
          "format": "int32",
          "description": "Displays the class code that was previously assigned to an account.",
          "type": "integer"
        },
        "oldLstOverallActDt": {
          "description": "Defines the last customer/member activity date on the account before a TC130 (Dormant/Escheated Account Reactivation) is posted to a Dormant or Escheated account. \n (Example : 2023-05-02T05:58:25  [Format : yyyy-MM-ddThh:mm:ss]).",
          "maxLength": 19,
          "type": "string",
          "example": "2023-05-02T05:58:25"
        },
        "openDt": {
          "description": "Defines the date the customer/member joined the institution. \n (Example : 2023-05-02T05:58:25  [Format : yyyy-MM-ddThh:mm:ss]).",
          "maxLength": 19,
          "type": "string",
          "example": "2023-05-02T05:58:25"
        },
        "optOutAutoOdp": {
          "description": "Indicates whether the customer has opted out of the automatic set up of overdraft protection accounts when creating a new account.  This option is only available when AD_DP_CONTROL.allow_auto_odp is = Y.",
          "type": "string",
          "maxLength": 1
        },
        "optOutOdLimit": {
          "description": "Indicates whether a customer has elected to opt out of OD limit processing for all primary deposit accounts.",
          "type": "string",
          "maxLength": 1
        },
        "origNonpersonalClassList": {
          "description": "Defines the originating account class for a nonpersonal customer/member record.",
          "type": "string",
          "maxLength": 3000
        },
        "origPersonalClassList": {
          "description": "Defines the originating account class for a personal customer/member record.",
          "type": "string",
          "maxLength": 3000
        },
        "outgoingCrACHAmt": {
          "format": "double",
          "description": "Defines the expected amount of outgoing credit ACH transactions in a period.",
          "type": "number"
        },
        "outgoingDrACHAmt": {
          "format": "double",
          "description": "Defines the expected amount of outgoing debit ACH transactions in a period.",
          "type": "number"
        },
        "overDebtLimit": {
          "description": "Indicates if the customer has an over debt limit.",
          "type": "string",
          "maxLength": 1
        },
        "personalClassList": {
          "description": "Defines the account class assigned to a personal customer/member record.",
          "type": "string",
          "maxLength": 3000
        },
        "personalTitleList": {
          "description": "Defines the courtesy title, such as Mr., Mrs., or Dr., for a personal customer/member.",
          "type": "string",
          "maxLength": 3000
        },
        "planNo": {
          "description": "Defines a retirement plan number assigned to a customer/member record.",
          "type": "string",
          "maxLength": 13
        },
        "preferredName": {
          "description": "Defines the preferred name of the customer, usually a nickname.",
          "type": "string",
          "maxLength": 50,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "prevOdLimit": {
          "format": "double",
          "description": "Indicates the last maximum OD limit assigned to this customer.",
          "type": "number"
        },
        "prohibNewAcct": {
          "description": "Indicates whether or not this customer is prohibited from having new accounts opened under their name.",
          "type": "string",
          "maxLength": 1
        },
        "prohibNewAcctReason": {
          "description": "Textual description as to the reason why the customer is prohibited from having new accounts opened under their name.",
          "type": "string",
          "maxLength": 254
        },
        "ptid": {
          "format": "double",
          "description": "The internal Phoenix System identifier that makes the row unique. 'PC_PTID'",
          "type": "number"
        },
        "purchased": {
          "description": "Indicates that investors purchasing loans from the RIM account are purchased form the originator of the loan.",
          "type": "string",
          "maxLength": 1
        },
        "receiptDelMethod": {
          "description": "Controls the receipt delivery preference for this customer",
          "type": "string",
          "maxLength": 15
        },
        "reclassDt": {
          "description": "Defines the date on which the customer/member record was updated to a new class. \n (Example : 2023-05-02T05:58:25  [Format : yyyy-MM-ddThh:mm:ss]).",
          "maxLength": 19,
          "type": "string",
          "example": "2023-05-02T05:58:25"
        },
        "recordId": {
          "description": "Displays a unique record identifier for the customer/ member record.",
          "type": "string",
          "maxLength": 40
        },
        "regCcCode": {
          "description": "Indicates the Regulation CC code that controls the assignment of float for deposits made to deposit accounts for  primary customer.",
          "type": "string",
          "maxLength": 1
        },
        "regOCode": {
          "description": "Indicates if the customer is also an officer, director, or shareholder of the bank, this is used to track insider loans on the Regulation ) Report (RRQ200)<br><br>Executive Officer - executive officer of the bank<br>Director - member of the board of directors of the bank<br>Principal Shareholder - principal shareholder (at least 10 percent) in the bank.",
          "type": "string",
          "maxLength": 21
        },
        "reopenDt": {
          "description": "When a closed Rim acct is reopened, this will have the value of system date. \n (Example : 2023-05-02T05:58:25  [Format : yyyy-MM-ddThh:mm:ss]).",
          "maxLength": 19,
          "type": "string",
          "example": "2023-05-02T05:58:25"
        },
        "requireCombIntChk": {
          "description": "Determines whether all deposit accounts that pay interest by check will be required to combine interest checks.This value defaults from the value of Require Combined Interest Checks in Deposit Controls to the customer's RIM.",
          "type": "string",
          "maxLength": 1
        },
        "restrictId": {
          "format": "int32",
          "description": "Defines the restriction level that applies to the customer.",
          "type": "integer"
        },
        "retainDebtHistory": {
          "description": "Indicates if debit history for the customer is to be retained.",
          "type": "string",
          "maxLength": 1
        },
        "revenueGreater1m": {
          "description": "Defines whether the customer's gross annual income is greater than $1million.",
          "type": "string",
          "maxLength": 1
        },
        "rim3rdParty": {
          "description": "Indicates if the customer is a third-party.",
          "type": "string",
          "maxLength": 1
        },
        "rimNo": {
          "format": "int32",
          "description": "Indicates the unique identification number for a RIM record.",
          "type": "integer",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "rimType": {
          "description": "Defines the RIM account type.  <br><br>Personal - defined by a SSN (Social Security Number)<br>NonPersonal - defined by a TIN (Tax Identification Number)",
          "type": "string",
          "maxLength": 11
        },
        "riskCode": {
          "format": "int32",
          "description": "Defines the risk code assigned to the RIM account.",
          "type": "integer"
        },
        "riskReason": {
          "description": "Defines the reason why the risk code has been assigned to the RIM account.",
          "type": "string",
          "maxLength": 254
        },
        "rowVersion": {
          "format": "int32",
          "description": "The version of the row.  This is required for tables which can interactively be updated by  multiple end-users.",
          "type": "integer"
        },
        "rptAgency1": {
          "description": "Defines the reporting agency for the first credit score.",
          "type": "string",
          "maxLength": 15,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "rptAgency2": {
          "description": "Defines the reporting agency for the second credit score.",
          "type": "string",
          "maxLength": 15,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "rptAgency3": {
          "description": "Defines the reporting agency for the third credit score.",
          "type": "string",
          "maxLength": 15,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "rsmId": {
          "format": "int32",
          "description": "Indicates the employee at the bank servicing the account.",
          "type": "integer"
        },
        "rsmId2": {
          "format": "int32",
          "description": "Defines the second RSM who is responsible for the customer.",
          "type": "integer"
        },
        "rsmId3": {
          "format": "int32",
          "description": "Defines the third RSM who is responsible for the customer.",
          "type": "integer"
        },
        "sendEmail": {
          "description": "Indicates if the customer should be sent email.",
          "type": "string",
          "maxLength": 1
        },
        "sendEmail2": {
          "description": "Flag indicating whether email is to be sent to the RIM customer's secondary EMAIL address (Email_2)",
          "type": "string",
          "maxLength": 1
        },
        "sendNoticeAlert": {
          "description": "Indicates whether a customer/member has opted to receive notice alert emails to their primary email address.",
          "type": "string",
          "maxLength": 1
        },
        "sendStmtAlert": {
          "description": "Indicates that the customer has selected to receive statement alert emails to their primary email address.",
          "type": "string",
          "maxLength": 1
        },
        "sessionId": {
          "format": "int32",
          "description": "Defines a unique identifier of the application.",
          "type": "integer"
        },
        "setBackupWhRate": {
          "format": "double",
          "description": "Indicates if backup withholding rate is applicable for the customer / member",
          "type": "number"
        },
        "sex": {
          "description": "Indicates the gender of the owner of the RIM account.<br><br>M - Male<br>F - Female<br>U - Unknown",
          "type": "string",
          "maxLength": 1,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "stateCodeList": {
          "description": "Defines the state of residence for a customer/member.",
          "type": "string",
          "maxLength": 2000,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "status": {
          "description": "Defines the status of the row.",
          "type": "string",
          "maxLength": 19
        },
        "statusSort": {
          "format": "int32",
          "description": "A numeric value set in conjunction with the status column to sort entries.",
          "minimum": 0,
          "maximum": 255,
          "type": "integer"
        },
        "stmtDelMethod": {
          "description": "Defines the statement delivery method for the customer.  Print, Email, or Both are the options.",
          "type": "string",
          "maxLength": 5
        },
        "suffix": {
          "description": "Defines the suffix that is attached to the owner of of the RIM account.",
          "type": "string",
          "maxLength": 3
        },
        "sweepBelowLow": {
          "description": "Indicates that the Cash Account should be taken below the Low Target before taking money from other Sweep accounts",
          "type": "string",
          "maxLength": 1,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "sweepFamilyStmt": {
          "description": "Indicates if a Sweep Family Statement should be generated for this RIM",
          "type": "string",
          "maxLength": 1
        },
        "sweepFromCash": {
          "description": "Indicates that the funds should be taken from the Cash Account first then in priority order.",
          "type": "string",
          "maxLength": 1
        },
        "sweepFromInvest": {
          "description": "Indicates if accounts are funded from investments first.",
          "type": "string",
          "maxLength": 1
        },
        "sweepNotice": {
          "description": "Indicates if an individual sweep transfer notice for all accounts within the sweep family is to be generated.",
          "type": "string",
          "maxLength": 1
        },
        "sweepPayLoc": {
          "description": "Indicates if LOCs are to be paid back through sweep transactions before funding investments .",
          "type": "string",
          "maxLength": 1
        },
        "sweepStmt": {
          "description": "Indicates if LOCs are to be paid back through sweep transactions before funding investments .v",
          "type": "string",
          "maxLength": 1
        },
        "sweepThroughCash": {
          "description": "Indicates if all transfers should go through the Cash Account",
          "type": "string",
          "maxLength": 1
        },
        "taxWhCode": {
          "description": "Indicates whether the RIM account is subject to tax withholding.",
          "type": "string",
          "maxLength": 1
        },
        "taxWhExpiryDt": {
          "description": "Defines the date on which the mandatory tax withholding will expire. \n (Example : 2023-05-02T05:58:25  [Format : yyyy-MM-ddThh:mm:ss]).",
          "maxLength": 19,
          "type": "string",
          "example": "2023-05-02T05:58:25"
        },
        "tin": {
          "description": "Defines the numerical value of the SSN or TIN number",
          "type": "string",
          "maxLength": 15,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "tinCert": {
          "description": "Indicates whether the customers's RIM has been Certified.",
          "type": "string",
          "maxLength": 1
        },
        "tinCertDt": {
          "description": "Defines the date the RIM account TIN was certified. \n (Example : 2023-05-02T05:58:25  [Format : yyyy-MM-ddThh:mm:ss]).",
          "maxLength": 19,
          "type": "string",
          "example": "2023-05-02T05:58:25"
        },
        "tinFormat": {
          "description": "Indicates the type of tax certification presented by the customer.<br><br>S - SSN<br>E - EIN<br>A - ATN<br>N - Nonresident<br>X - Tax Exempt",
          "type": "string",
          "maxLength": 1
        },
        "tITLE": {
          "description": "Indicates the title for a customer/member.",
          "type": "string",
          "maxLength": 15
        },
        "titleId": {
          "format": "int32",
          "description": "Defines the title of the RIM account.",
          "type": "integer"
        },
        "type": {
          "description": "Credit Union Member Type",
          "type": "string",
          "maxLength": 20
        },
        "url": {
          "description": "Defines the customers url  address.",
          "type": "string",
          "maxLength": 255,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "verifySource": {
          "description": "Defines the source used to verify active duty service. Not applicable when no Military Status is provided.",
          "type": "string",
          "maxLength": 30,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "w8Cert": {
          "description": "Indicates whether the foreign customer has presented a W-8 certification. W-8 certification is intended for Foreign Permanent Residents in the US.",
          "type": "string",
          "maxLength": 1
        },
        "w8CertDt": {
          "description": "Defines the date that the W8 certification was signed by the customer/member. \n (Example : 2023-05-02T05:58:25  [Format : yyyy-MM-ddThh:mm:ss]).",
          "maxLength": 19,
          "type": "string",
          "example": "2023-05-02T05:58:25"
        },
        "w8CountryCode": {
          "description": "Defines the country code of the W8 certification.",
          "type": "string",
          "maxLength": 12
        },
        "w8Exception": {
          "description": "Provides a reason why a W-8 certificate is not required for the customer/member.",
          "type": "string",
          "maxLength": 125
        },
        "w8ExpiryDt": {
          "description": "Defines the expiration date of the W8 certification. \n (Example : 2023-05-02T05:58:25  [Format : yyyy-MM-ddThh:mm:ss]).",
          "maxLength": 19,
          "type": "string",
          "example": "2023-05-02T05:58:25"
        },
        "w8ForeignTin": {
          "description": "Defines a foreign tax id number for the customer/member.",
          "type": "string",
          "maxLength": 22,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "w8RecipientCode": {
          "description": "Defines the type of recipient who signed the W8 Certification<br>Value: 01 - Individual, 02 - Corporation, 03 - Partnership, 04 - Fiduciary (trust), 05 - Nominee, 06 - Govt. or Int'l Org, 07 - Tax exempt Org, 08 - Private Foundation, 09 - Artist or Athlete, 10 - Fiduciary (estate), 11 - Fiduciary (other), 19 - Other, 20 - Unknown, Null - Not applicable",
          "type": "string",
          "maxLength": 2
        },
        "whStatusChgDt": {
          "description": "Defines the date of the last withholding status change. \n (Example : 2023-05-02T05:58:25  [Format : yyyy-MM-ddThh:mm:ss]).",
          "maxLength": 19,
          "type": "string",
          "example": "2023-05-02T05:58:25"
        }
      }
    },
    "RmFinStmtResponse": {
      "description": "Standard Response Information",
      "type": "object",
      "properties": {
        "messages": {
          "description": "List of messages occurred while processing the request",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MessageInfo"
          }
        },
        "referenceNo": {
          "description": "Reference Number of the request. If no reference number is passed in the request the reference number is generated by the system.",
          "maxLength": 20,
          "type": "string"
        },
        "responseInfo": {
          "$ref": "#/definitions/ResponseInfo"
        },
        "result": {
          "$ref": "#/definitions/RmFinStmtResult"
        },
        "statusCode": {
          "format": "int32",
          "description": "HTTP Status Code",
          "type": "integer"
        }
      }
    },
    "RmFinStmtResult": {
      "description": "The result data for the request.",
      "type": "object",
      "properties": {
        "addressLine1": {
          "description": "Defines the first line of this property's address.",
          "type": "string",
          "maxLength": 40,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "amt": {
          "format": "double",
          "description": "Defines the total aprraised amount of collateral items.",
          "type": "number"
        },
        "appraisalAmt": {
          "format": "double",
          "description": "Defines the appraised monetary amount placed on this item.",
          "type": "number"
        },
        "categoryId": {
          "format": "int32",
          "description": "Defines the category this item applies to. (Automobile, Credit Card ...)",
          "type": "integer"
        },
        "city": {
          "description": "Defines the city of this property's address.",
          "type": "string",
          "maxLength": 25,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "collateralTypeId": {
          "format": "int32",
          "description": "Defines the collateral type for the asset or liability item.<br><br>Property<br>Vehicle<br>Commodity<br>Other",
          "type": "integer"
        },
        "countryCode": {
          "description": "Defines the country code of this property's item.",
          "type": "string",
          "maxLength": 4,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "createDt": {
          "description": "Defines the date the row was created. \n (Example : 2023-04-19T11:00:49  [Format : yyyy-MM-ddThh:mm:ss]).",
          "maxLength": 19,
          "type": "string",
          "example": "2023-04-19T11:00:49"
        },
        "crncyId": {
          "format": "int32",
          "description": "Indicates the currency identifier for the analysis.  US Dollars = 1",
          "type": "integer"
        },
        "cusipUser": {
          "description": "Committee on Uniform Securities Identification Procedures (CUSIP) User - Defines a user-defined number identifying the commodity item.",
          "type": "string",
          "maxLength": 5
        },
        "description": {
          "description": "A textual description of this item.",
          "type": "string",
          "maxLength": 80
        },
        "effectiveDt": {
          "format": "date",
          "description": "The date on which the record Status was updated to Active.",
          "type": "string"
        },
        "emplId": {
          "format": "int32",
          "description": "The RSM of the employee who created the row.",
          "type": "integer"
        },
        "encid": {
          "description": "Unique record identifier.",
          "type": "string",
          "maxLength": 10000
        },
        "entryType": {
          "description": "Indicates if the item defined by the categoryid is considered to be Commodity, Vehicle, Property, or Other.  <br>The entry type selected determines the additional details recorded for the collateral item.",
          "type": "string",
          "maxLength": 9
        },
        "finStmtItemId": {
          "format": "int32",
          "description": "Uniquely identifies a row.",
          "type": "integer"
        },
        "finStmtType": {
          "description": "Defines the financial item type. (Asset, Liability, Income, Expense)",
          "type": "string",
          "maxLength": 9
        },
        "hoursMiles": {
          "description": "Defines how the usage of the vehicle will be determined.<br><br>Hours<br>Miles",
          "type": "string",
          "maxLength": 5
        },
        "international": {
          "description": "Indicates whether the property's address is an international address.",
          "type": "string",
          "maxLength": 1
        },
        "legalDesc": {
          "description": "A textual legal description of this property item.",
          "type": "string",
          "maxLength": 255
        },
        "legalDesc2": {
          "description": "A secondary textual legal description of this  property item.",
          "type": "string",
          "maxLength": 255
        },
        "lendingPercent": {
          "format": "double",
          "description": "Defines the percentage of this asset's value that may be used as loan collateral.",
          "type": "number"
        },
        "lendingValue": {
          "format": "double",
          "description": "Identifies the market value for an asset item.",
          "type": "number"
        },
        "marketValue": {
          "format": "double",
          "description": "Defines the market value of the financial item.",
          "type": "number"
        },
        "memoType": {
          "description": "Indicates whether a note is attached to the row.",
          "type": "string",
          "maxLength": 1
        },
        "moodyRating": {
          "description": "Defines the Moody rating (0-9, or A-Z) used to classify this commodities item.",
          "type": "string",
          "maxLength": 1
        },
        "period": {
          "description": "Indicates the default period of time in conjunction with the term of the item.",
          "type": "string",
          "maxLength": 8
        },
        "pledgedAmt": {
          "format": "double",
          "description": "Defines the monetary amount for this item.",
          "type": "number"
        },
        "previousCity": {
          "description": "Indicates the previous city.",
          "type": "string",
          "maxLength": 25,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "previousState": {
          "description": "Indicates the previous state.",
          "type": "string",
          "maxLength": 5,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "previousZip": {
          "description": "Indicates the previous zip.",
          "type": "string",
          "maxLength": 10,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "primaryResidence": {
          "description": "Indicates whether the collateral item is the primary residence for the customer/member.",
          "type": "string",
          "maxLength": 1,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "ptid": {
          "format": "double",
          "description": "The internal Phoenix System identifier that makes the row unique. 'PC_PTID'",
          "type": "number"
        },
        "regCatId": {
          "format": "int32",
          "description": "The category id for the statement item",
          "type": "integer"
        },
        "repProp1098": {
          "description": "Indicates whether a 1098 reportable loan is using a vehicle for primary collateral. When this field is  Y, the Collateral Type must be Vehicle.",
          "type": "string",
          "maxLength": 1
        },
        "rimNo": {
          "format": "int32",
          "description": "Indicates the customer this account is associated to.",
          "type": "integer",
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "rowVersion": {
          "format": "int32",
          "description": "The version of the row.  This is required for tables which can interactively be updated by  multiple end-users.",
          "type": "integer"
        },
        "spRating": {
          "description": "Defines the Standard & Poor's rating (1-8, or A-Z) used to classify this commodities item.",
          "type": "string",
          "maxLength": 1
        },
        "state": {
          "description": "Defines the state of this property's address.",
          "type": "string",
          "maxLength": 5,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "status": {
          "description": "Defines the status of the row.",
          "type": "string",
          "maxLength": 10
        },
        "statusSort": {
          "format": "int32",
          "description": "A numeric value set in conjunction with the status column to sort entries.",
          "type": "integer"
        },
        "subjectDmvEtitle": {
          "description": "Identifies if the Financial Statement Entry is available for electronic titling.",
          "type": "string",
          "maxLength": 1
        },
        "title": {
          "description": "Indicates whether the vehicle is New or Used.",
          "type": "string",
          "maxLength": 1
        },
        "titleState": {
          "description": "Identifies the state in which the vehicle is titled.",
          "type": "string",
          "maxLength": 2,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        },
        "totalAmt": {
          "format": "double",
          "description": "Defines the total amount for the item.",
          "type": "number"
        },
        "verifiedDt": {
          "format": "date",
          "description": "Defines the date the most recent verification of the financial item was performed.",
          "type": "string"
        },
        "verifiedEmplId": {
          "format": "int32",
          "description": "Defines the bank employee who last verified this financial item.",
          "type": "integer"
        },
        "zip": {
          "description": "Defines the zip code  of this property's address.",
          "type": "string",
          "maxLength": 10,
          "x-finastra-data-classification": [
            "Restricted"
          ]
        }
      }
    },
    "RmFinStmtListResponse14": {
      "description": "Standard Response Information",
      "type": "object",
      "properties": {
        "messages": {
          "description": "List of messages occurred while processing the request",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MessageInfo"
          }
        },
        "pagingInfo": {
          "$ref": "#/definitions/PagingInfo"
        },
        "referenceNo": {
          "description": "Reference Number of the request. If no reference number is passed in the request the reference number is generated by the system.",
          "maxLength": 20,
          "type": "string"
        },
        "responseInfo": {
          "$ref": "#/definitions/ResponseInfo"
        },
        "result": {
          "description": "The result data for the request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RmFinStmtListResult14"
          }
        },
        "statusCode": {
          "format": "int32",
          "description": "HTTP Status Code",
          "type": "integer"
        }
      }
    },
    "RmFinStmtListResult14": {
      "description": "The result data for the request.",
      "type": "object",
      "properties": {
        "amt": {
          "format": "double",
          "description": "Defines the total aprraised amount of collateral items.",
          "type": "number"
        },
        "category": {
          "description": "Defines the category this item applies to. (Automobile, Credit Card ...)",
          "maxLength": 15,
          "type": "string"
        },
        "description": {
          "description": "A textual description of this item.",
          "maxLength": 80,
          "type": "string"
        },
        "encId": {
          "description": "Encrypted Identifier used to identify the resource uniquely.",
          "maxLength": 10000,
          "type": "string"
        },
        "finStmtItemId": {
          "format": "int32",
          "description": "Uniquely identifies a row.",
          "type": "integer"
        },
        "finStmtType": {
          "description": "Defines the financial item type. (Asset, Liability, Income, Expense)",
          "maxLength": 9,
          "type": "string"
        },
        "finStmtTypeSort": {
          "description": "Defines the Sort required for the financial item type. (Asset, Liability, Income, Expense)",
          "maxLength": 9,
          "type": "string"
        },
        "isoCode": {
          "description": "Defines the ISO Code for the Country.",
          "maxLength": 2,
          "type": "string"
        },
        "name": {
          "description": "Defines the name of the entity.",
          "maxLength": 40,
          "type": "string"
        },
        "period": {
          "description": "Indicates the default period of time in conjunction with the term of the item.",
          "maxLength": 8,
          "type": "string"
        },
        "trm": {
          "format": "int32",
          "description": "Defines the frequency with which the financial statement is generated.",
          "type": "integer"
        }
      }
    }
  },
  "parameters": {
    "encId": {
      "in": "path",
      "name": "encId",
      "description": "Passes the encrypted unique ID for the customer/member. {\"rimNo\": 0}",
      "required": true,
      "type": "string",
      "maxLength": 10000
    },
    "ignoreStartEndDates": {
      "in": "query",
      "name": "ignoreStartEndDates",
      "description": "Filters results for Alternate Primary Addresses (Address type=10) that do not have a Start Date or End Date.\r\n            <br />\r\n            Value: Y, N",
      "type": "string",
      "default": "N",
      "enum": [
        "Y",
        "N"
      ],
      "maxLength": 1
    },
    "X-PHX-ReferenceNo": {
      "in": "header",
      "name": "X-PHX-ReferenceNo",
      "description": "Passes the reference number for the call. If not provided, the system will generate a unique reference number. When passed, uniqueness will be verified when the Service is defined to validate duplicates and the transaction being processed is a Monetary or Hold transaction.  Regardless of transaction, passing unique values is recommended for all calls. Its value will be returned in the Response as referenceNo.",
      "type": "string",
      "maxLength": 20
    },
    "X-PHX-IdempotencyKey": {
      "in": "header",
      "name": "X-PHX-IdempotencyKey",
      "description": "A unique value generated by the client which the API will use to recognize subsequent retries of the same request.",
      "type": "string",
      "maxLength": 32
    },
    "X-PHX-Description": {
      "in": "header",
      "name": "X-PHX-Description",
      "description": "Passes a description for the call request or transaction.Monetary transactions also store this description, if passed, to display as the transaction description on the Transaction History window.Avoid passing sensitive data in this header parameter.",
      "type": "string",
      "maxLength": 10000
    },
    "X-PHX-Filters": {
      "in": "header",
      "name": "X-PHX-Filters",
      "description": "You can filter your list to contain only items which match a simple logical expression using this header parameter.<BR><BR>**Syntax:** filter = (propertyName operator value)<BR>**Operators:** lt (<), le (<=), gt (>), ge (>=), eq (=), ne (<>)<BR>**Examples:** <BR>     X-PHX-Filters = (status eq 'Active') and ( tin eq '123-84-9001')<BR>     X-PHX-Filters = (emplId gt 0) or (  status eq 'Active')<BR>     X-PHX-Filters = (status eq 'Closed') and  (lastLogonDt gt '2004-10-15')",
      "type": "string",
      "maxLength": 10000,
      "x-finastra-data-classification": [
        "Restricted"
      ]
    },
    "Limit": {
      "in": "query",
      "name": "Limit",
      "description": "Limit number of rows returned.<BR>**Default:**10",
      "type": "integer",
      "default": 10,
      "format": "int32"
    },
    "Offset": {
      "in": "query",
      "name": "Offset",
      "description": "Filters results to return records starting at the record number provided.",
      "type": "integer",
      "format": "int32"
    },
    "Orderby": {
      "in": "query",
      "name": "Orderby",
      "description": "Sorts the list returned by a selected field name and ordering option.<BR><BR>**Syntax:** orderby = fieldName  [ **asc** | desc ] [ ,...n ]<BR>    If there is no sort option provided, the default is asc<BR>**Examples:**  <BR>    orderby = createDt  - results are sorted with ascending option<BR>    orderby = emplId, createDt desc - results are sorted with emplId asc, createDt desc",
      "type": "string",
      "maxLength": 10000
    },
    "body": {
      "in": "body",
      "name": "body",
      "description": "Passes city, state, zip code, or other address information to create a new address. \r\n <br />\r\n value: Address tags must match the address definition.\r\n Phone formats are defined in System Administration. Phone extensions are not valid without a phone number.\r\n default: None",
      "schema": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/PostCustomerAddressTpiRequest"
        }
      },
      "x-finastra-data-classification": [
        "Restricted"
      ]
    },
    "fields": {
      "in": "query",
      "name": "fields",
      "description": "You can limit the number of fields in the response by using this parameter.<BR><BR>**Syntax:** fields = (Comma separated field names)<BR>**Example:** fields = acctType, acctNo, amt",
      "type": "string",
      "maxLength": 10000
    }
  },
  "securityDefinitions": {
    "Oauth2": {
      "type": "oauth2",
      "description": "Oauth 2.0 authentication",
      "tokenUrl": "https://api.fusionfabric.cloud/login/v1/sandbox/oidc/token",
      "flow": "application",
      "scopes": {}
    }
  },
  "security": [
    {
      "Oauth2": []
    }
  ],
  "host": "api.fusionfabric.cloud",
  "basePath": "/phoenix-sdk/customer/v1"
}
